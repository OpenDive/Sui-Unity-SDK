{
    "jsonrpc": "2.0",
    "result": [
  {
    "data": {
      "objectId": "0x0000000000000000000000000000000000000000000000000000000000000002",
      "version": "13",
      "digest": "7DkyttY6bSNw6iVWkHvDBtcyWT3SPs6wCbfWZ6rQQH8Z",
      "type": "package",
      "owner": "Immutable",
      "previousTransaction": "8nYbyizGkUFAnKdLpeDkGkmdTg9LepMRkUU56xh3CK2x",
      "storageRebate": "0",
      "display": {
        "data": null,
        "error": null
      },
      "content": {
        "dataType": "package",
        "disassembled": {
          "address": "// Move bytecode v6\nmodule 2.address {\nuse 0000000000000000000000000000000000000000000000000000000000000001::ascii;\nuse 0000000000000000000000000000000000000000000000000000000000000001::bcs;\nuse 0000000000000000000000000000000000000000000000000000000000000001::string;\nuse 0000000000000000000000000000000000000000000000000000000000000002::hex;\n\n\n\n\nnative public to_u256(Arg0: address): u256\nnative public from_u256(Arg0: u256): address\nnative public from_bytes(Arg0: vector<u8>): address\npublic to_bytes(Arg0: address): vector<u8> {\nB0:\n\t0: ImmBorrowLoc[0](Arg0: address)\n\t1: Call bcs::to_bytes<address>(&address): vector<u8>\n\t2: Ret\n}\npublic to_ascii_string(Arg0: address): String {\nB0:\n\t0: MoveLoc[0](Arg0: address)\n\t1: Call to_bytes(address): vector<u8>\n\t2: Call hex::encode(vector<u8>): vector<u8>\n\t3: Call ascii::string(vector<u8>): String\n\t4: Ret\n}\npublic to_string(Arg0: address): String {\nB0:\n\t0: MoveLoc[0](Arg0: address)\n\t1: Call to_ascii_string(address): String\n\t2: Call string::from_ascii(String): String\n\t3: Ret\n}\npublic length(): u64 {\nB0:\n\t0: LdConst[0](U64: 20000000..)\n\t1: Ret\n}\npublic max(): u256 {\nB0:\n\t0: LdConst[1](U256: ffffffff..)\n\t1: Ret\n}\n\nConstants [\n\t0 => u64: 2000000000000000\n\t1 => u256: ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n\t2 => u64: 0000000000000000\n]\n}",
          "authenticator_state": "// Move bytecode v6\nmodule 2.authenticator_state {\nuse 0000000000000000000000000000000000000000000000000000000000000001::option;\nuse 0000000000000000000000000000000000000000000000000000000000000001::string;\nuse 0000000000000000000000000000000000000000000000000000000000000002::dynamic_field;\nuse 0000000000000000000000000000000000000000000000000000000000000002::math;\nuse 0000000000000000000000000000000000000000000000000000000000000002::object;\nuse 0000000000000000000000000000000000000000000000000000000000000002::transfer;\nuse 0000000000000000000000000000000000000000000000000000000000000002::tx_context;\n\n\nstruct AuthenticatorState has key {\n\tid: UID,\n\tversion: u64\n}\nstruct AuthenticatorStateInner has store {\n\tversion: u64,\n\tactive_jwks: vector<ActiveJwk>\n}\nstruct JWK has copy, drop, store {\n\tkty: String,\n\te: String,\n\tn: String,\n\talg: String\n}\nstruct JwkId has copy, drop, store {\n\tiss: String,\n\tkid: String\n}\nstruct ActiveJwk has copy, drop, store {\n\tjwk_id: JwkId,\n\tjwk: JWK,\n\tepoch: u64\n}\n\nactive_jwk_equal(Arg0: &ActiveJwk, Arg1: &ActiveJwk): bool {\nB0:\n\t0: CopyLoc[0](Arg0: &ActiveJwk)\n\t1: ImmBorrowField[0](ActiveJwk.jwk: JWK)\n\t2: CopyLoc[1](Arg1: &ActiveJwk)\n\t3: ImmBorrowField[0](ActiveJwk.jwk: JWK)\n\t4: Call jwk_equal(&JWK, &JWK): bool\n\t5: BrFalse(13)\nB1:\n\t6: MoveLoc[0](Arg0: &ActiveJwk)\n\t7: ImmBorrowField[1](ActiveJwk.jwk_id: JwkId)\n\t8: MoveLoc[1](Arg1: &ActiveJwk)\n\t9: ImmBorrowField[1](ActiveJwk.jwk_id: JwkId)\n\t10: Call jwk_id_equal(&JwkId, &JwkId): bool\n\t11: StLoc[2](loc0: bool)\n\t12: Branch(19)\nB2:\n\t13: MoveLoc[1](Arg1: &ActiveJwk)\n\t14: Pop\n\t15: MoveLoc[0](Arg0: &ActiveJwk)\n\t16: Pop\n\t17: LdFalse\n\t18: StLoc[2](loc0: bool)\nB3:\n\t19: MoveLoc[2](loc0: bool)\n\t20: Ret\n}\njwk_equal(Arg0: &JWK, Arg1: &JWK): bool {\nL0:\tloc2: bool\nB0:\n\t0: CopyLoc[0](Arg0: &JWK)\n\t1: ImmBorrowField[2](JWK.kty: String)\n\t2: CopyLoc[1](Arg1: &JWK)\n\t3: ImmBorrowField[2](JWK.kty: String)\n\t4: Eq\n\t5: BrFalse(13)\nB1:\n\t6: CopyLoc[0](Arg0: &JWK)\n\t7: ImmBorrowField[3](JWK.e: String)\n\t8: CopyLoc[1](Arg1: &JWK)\n\t9: ImmBorrowField[3](JWK.e: String)\n\t10: Eq\n\t11: StLoc[2](loc0: bool)\n\t12: Branch(15)\nB2:\n\t13: LdFalse\n\t14: StLoc[2](loc0: bool)\nB3:\n\t15: MoveLoc[2](loc0: bool)\n\t16: BrFalse(24)\nB4:\n\t17: CopyLoc[0](Arg0: &JWK)\n\t18: ImmBorrowField[4](JWK.n: String)\n\t19: CopyLoc[1](Arg1: &JWK)\n\t20: ImmBorrowField[4](JWK.n: String)\n\t21: Eq\n\t22: StLoc[3](loc1: bool)\n\t23: Branch(26)\nB5:\n\t24: LdFalse\n\t25: StLoc[3](loc1: bool)\nB6:\n\t26: MoveLoc[3](loc1: bool)\n\t27: BrFalse(35)\nB7:\n\t28: MoveLoc[0](Arg0: &JWK)\n\t29: ImmBorrowField[5](JWK.alg: String)\n\t30: MoveLoc[1](Arg1: &JWK)\n\t31: ImmBorrowField[5](JWK.alg: String)\n\t32: Eq\n\t33: StLoc[4](loc2: bool)\n\t34: Branch(41)\nB8:\n\t35: MoveLoc[1](Arg1: &JWK)\n\t36: Pop\n\t37: MoveLoc[0](Arg0: &JWK)\n\t38: Pop\n\t39: LdFalse\n\t40: StLoc[4](loc2: bool)\nB9:\n\t41: MoveLoc[4](loc2: bool)\n\t42: Ret\n}\njwk_id_equal(Arg0: &JwkId, Arg1: &JwkId): bool {\nB0:\n\t0: CopyLoc[0](Arg0: &JwkId)\n\t1: ImmBorrowField[6](JwkId.iss: String)\n\t2: CopyLoc[1](Arg1: &JwkId)\n\t3: ImmBorrowField[6](JwkId.iss: String)\n\t4: Eq\n\t5: BrFalse(13)\nB1:\n\t6: MoveLoc[0](Arg0: &JwkId)\n\t7: ImmBorrowField[7](JwkId.kid: String)\n\t8: MoveLoc[1](Arg1: &JwkId)\n\t9: ImmBorrowField[7](JwkId.kid: String)\n\t10: Eq\n\t11: StLoc[2](loc0: bool)\n\t12: Branch(19)\nB2:\n\t13: MoveLoc[1](Arg1: &JwkId)\n\t14: Pop\n\t15: MoveLoc[0](Arg0: &JwkId)\n\t16: Pop\n\t17: LdFalse\n\t18: StLoc[2](loc0: bool)\nB3:\n\t19: MoveLoc[2](loc0: bool)\n\t20: Ret\n}\nstring_bytes_lt(Arg0: &String, Arg1: &String): bool {\nL0:\tloc2: u8\nL1:\tloc3: &vector<u8>\nL2:\tloc4: u8\nL3:\tloc5: &vector<u8>\nL4:\tloc6: u64\nB0:\n\t0: MoveLoc[0](Arg0: &String)\n\t1: Call string::bytes(&String): &vector<u8>\n\t2: StLoc[5](loc3: &vector<u8>)\n\t3: MoveLoc[1](Arg1: &String)\n\t4: Call string::bytes(&String): &vector<u8>\n\t5: StLoc[7](loc5: &vector<u8>)\n\t6: CopyLoc[5](loc3: &vector<u8>)\n\t7: VecLen(20)\n\t8: CopyLoc[7](loc5: &vector<u8>)\n\t9: VecLen(20)\n\t10: Lt\n\t11: BrFalse(19)\nB1:\n\t12: MoveLoc[7](loc5: &vector<u8>)\n\t13: Pop\n\t14: MoveLoc[5](loc3: &vector<u8>)\n\t15: Pop\n\t16: LdTrue\n\t17: StLoc[3](loc1: bool)\n\t18: Branch(83)\nB2:\n\t19: CopyLoc[5](loc3: &vector<u8>)\n\t20: VecLen(20)\n\t21: CopyLoc[7](loc5: &vector<u8>)\n\t22: VecLen(20)\n\t23: Gt\n\t24: BrFalse(32)\nB3:\n\t25: MoveLoc[7](loc5: &vector<u8>)\n\t26: Pop\n\t27: MoveLoc[5](loc3: &vector<u8>)\n\t28: Pop\n\t29: LdFalse\n\t30: StLoc[2](loc0: bool)\n\t31: Branch(81)\nB4:\n\t32: LdU64(0)\n\t33: StLoc[8](loc6: u64)\nB5:\n\t34: CopyLoc[8](loc6: u64)\n\t35: CopyLoc[5](loc3: &vector<u8>)\n\t36: VecLen(20)\n\t37: Lt\n\t38: BrFalse(75)\nB6:\n\t39: Branch(40)\nB7:\n\t40: CopyLoc[5](loc3: &vector<u8>)\n\t41: CopyLoc[8](loc6: u64)\n\t42: VecImmBorrow(20)\n\t43: ReadRef\n\t44: StLoc[4](loc2: u8)\n\t45: CopyLoc[7](loc5: &vector<u8>)\n\t46: CopyLoc[8](loc6: u64)\n\t47: VecImmBorrow(20)\n\t48: ReadRef\n\t49: StLoc[6](loc4: u8)\n\t50: CopyLoc[4](loc2: u8)\n\t51: CopyLoc[6](loc4: u8)\n\t52: Lt\n\t53: BrFalse(60)\nB8:\n\t54: MoveLoc[7](loc5: &vector<u8>)\n\t55: Pop\n\t56: MoveLoc[5](loc3: &vector<u8>)\n\t57: Pop\n\t58: LdTrue\n\t59: Ret\nB9:\n\t60: MoveLoc[4](loc2: u8)\n\t61: MoveLoc[6](loc4: u8)\n\t62: Gt\n\t63: BrFalse(70)\nB10:\n\t64: MoveLoc[7](loc5: &vector<u8>)\n\t65: Pop\n\t66: MoveLoc[5](loc3: &vector<u8>)\n\t67: Pop\n\t68: LdFalse\n\t69: Ret\nB11:\n\t70: MoveLoc[8](loc6: u64)\n\t71: LdU64(1)\n\t72: Add\n\t73: StLoc[8](loc6: u64)\n\t74: Branch(34)\nB12:\n\t75: MoveLoc[7](loc5: &vector<u8>)\n\t76: Pop\n\t77: MoveLoc[5](loc3: &vector<u8>)\n\t78: Pop\n\t79: LdFalse\n\t80: StLoc[2](loc0: bool)\nB13:\n\t81: MoveLoc[2](loc0: bool)\n\t82: StLoc[3](loc1: bool)\nB14:\n\t83: MoveLoc[3](loc1: bool)\n\t84: Ret\n}\njwk_lt(Arg0: &ActiveJwk, Arg1: &ActiveJwk): bool {\nB0:\n\t0: CopyLoc[0](Arg0: &ActiveJwk)\n\t1: ImmBorrowField[1](ActiveJwk.jwk_id: JwkId)\n\t2: ImmBorrowField[6](JwkId.iss: String)\n\t3: CopyLoc[1](Arg1: &ActiveJwk)\n\t4: ImmBorrowField[1](ActiveJwk.jwk_id: JwkId)\n\t5: ImmBorrowField[6](JwkId.iss: String)\n\t6: Neq\n\t7: BrFalse(16)\nB1:\n\t8: MoveLoc[0](Arg0: &ActiveJwk)\n\t9: ImmBorrowField[1](ActiveJwk.jwk_id: JwkId)\n\t10: ImmBorrowField[6](JwkId.iss: String)\n\t11: MoveLoc[1](Arg1: &ActiveJwk)\n\t12: ImmBorrowField[1](ActiveJwk.jwk_id: JwkId)\n\t13: ImmBorrowField[6](JwkId.iss: String)\n\t14: Call string_bytes_lt(&String, &String): bool\n\t15: Ret\nB2:\n\t16: CopyLoc[0](Arg0: &ActiveJwk)\n\t17: ImmBorrowField[1](ActiveJwk.jwk_id: JwkId)\n\t18: ImmBorrowField[7](JwkId.kid: String)\n\t19: CopyLoc[1](Arg1: &ActiveJwk)\n\t20: ImmBorrowField[1](ActiveJwk.jwk_id: JwkId)\n\t21: ImmBorrowField[7](JwkId.kid: String)\n\t22: Neq\n\t23: BrFalse(32)\nB3:\n\t24: MoveLoc[0](Arg0: &ActiveJwk)\n\t25: ImmBorrowField[1](ActiveJwk.jwk_id: JwkId)\n\t26: ImmBorrowField[7](JwkId.kid: String)\n\t27: MoveLoc[1](Arg1: &ActiveJwk)\n\t28: ImmBorrowField[1](ActiveJwk.jwk_id: JwkId)\n\t29: ImmBorrowField[7](JwkId.kid: String)\n\t30: Call string_bytes_lt(&String, &String): bool\n\t31: Ret\nB4:\n\t32: CopyLoc[0](Arg0: &ActiveJwk)\n\t33: ImmBorrowField[0](ActiveJwk.jwk: JWK)\n\t34: ImmBorrowField[2](JWK.kty: String)\n\t35: CopyLoc[1](Arg1: &ActiveJwk)\n\t36: ImmBorrowField[0](ActiveJwk.jwk: JWK)\n\t37: ImmBorrowField[2](JWK.kty: String)\n\t38: Neq\n\t39: BrFalse(48)\nB5:\n\t40: MoveLoc[0](Arg0: &ActiveJwk)\n\t41: ImmBorrowField[0](ActiveJwk.jwk: JWK)\n\t42: ImmBorrowField[2](JWK.kty: String)\n\t43: MoveLoc[1](Arg1: &ActiveJwk)\n\t44: ImmBorrowField[0](ActiveJwk.jwk: JWK)\n\t45: ImmBorrowField[2](JWK.kty: String)\n\t46: Call string_bytes_lt(&String, &String): bool\n\t47: Ret\nB6:\n\t48: CopyLoc[0](Arg0: &ActiveJwk)\n\t49: ImmBorrowField[0](ActiveJwk.jwk: JWK)\n\t50: ImmBorrowField[3](JWK.e: String)\n\t51: CopyLoc[1](Arg1: &ActiveJwk)\n\t52: ImmBorrowField[0](ActiveJwk.jwk: JWK)\n\t53: ImmBorrowField[3](JWK.e: String)\n\t54: Neq\n\t55: BrFalse(64)\nB7:\n\t56: MoveLoc[0](Arg0: &ActiveJwk)\n\t57: ImmBorrowField[0](ActiveJwk.jwk: JWK)\n\t58: ImmBorrowField[3](JWK.e: String)\n\t59: MoveLoc[1](Arg1: &ActiveJwk)\n\t60: ImmBorrowField[0](ActiveJwk.jwk: JWK)\n\t61: ImmBorrowField[3](JWK.e: String)\n\t62: Call string_bytes_lt(&String, &String): bool\n\t63: Ret\nB8:\n\t64: CopyLoc[0](Arg0: &ActiveJwk)\n\t65: ImmBorrowField[0](ActiveJwk.jwk: JWK)\n\t66: ImmBorrowField[4](JWK.n: String)\n\t67: CopyLoc[1](Arg1: &ActiveJwk)\n\t68: ImmBorrowField[0](ActiveJwk.jwk: JWK)\n\t69: ImmBorrowField[4](JWK.n: String)\n\t70: Neq\n\t71: BrFalse(80)\nB9:\n\t72: MoveLoc[0](Arg0: &ActiveJwk)\n\t73: ImmBorrowField[0](ActiveJwk.jwk: JWK)\n\t74: ImmBorrowField[4](JWK.n: String)\n\t75: MoveLoc[1](Arg1: &ActiveJwk)\n\t76: ImmBorrowField[0](ActiveJwk.jwk: JWK)\n\t77: ImmBorrowField[4](JWK.n: String)\n\t78: Call string_bytes_lt(&String, &String): bool\n\t79: Ret\nB10:\n\t80: MoveLoc[0](Arg0: &ActiveJwk)\n\t81: ImmBorrowField[0](ActiveJwk.jwk: JWK)\n\t82: ImmBorrowField[5](JWK.alg: String)\n\t83: MoveLoc[1](Arg1: &ActiveJwk)\n\t84: ImmBorrowField[0](ActiveJwk.jwk: JWK)\n\t85: ImmBorrowField[5](JWK.alg: String)\n\t86: Call string_bytes_lt(&String, &String): bool\n\t87: Ret\n}\ncreate(Arg0: &TxContext) {\nL0:\tloc1: AuthenticatorState\nL1:\tloc2: u64\nB0:\n\t0: MoveLoc[0](Arg0: &TxContext)\n\t1: Call tx_context::sender(&TxContext): address\n\t2: LdConst[3](Address: 00000000..)\n\t3: Eq\n\t4: BrFalse(6)\nB1:\n\t5: Branch(8)\nB2:\n\t6: LdConst[0](U64: 00000000..)\n\t7: Abort\nB3:\n\t8: LdConst[1](U64: 01000000..)\n\t9: StLoc[3](loc2: u64)\n\t10: CopyLoc[3](loc2: u64)\n\t11: VecPack(23, 0)\n\t12: Pack[1](AuthenticatorStateInner)\n\t13: StLoc[1](loc0: AuthenticatorStateInner)\n\t14: Call object::authenticator_state(): UID\n\t15: CopyLoc[3](loc2: u64)\n\t16: Pack[0](AuthenticatorState)\n\t17: StLoc[2](loc1: AuthenticatorState)\n\t18: MutBorrowLoc[2](loc1: AuthenticatorState)\n\t19: MutBorrowField[8](AuthenticatorState.id: UID)\n\t20: MoveLoc[3](loc2: u64)\n\t21: MoveLoc[1](loc0: AuthenticatorStateInner)\n\t22: Call dynamic_field::add<u64, AuthenticatorStateInner>(&mut UID, u64, AuthenticatorStateInner)\n\t23: MoveLoc[2](loc1: AuthenticatorState)\n\t24: Call transfer::share_object<AuthenticatorState>(AuthenticatorState)\n\t25: Ret\n}\nload_inner_mut(Arg0: &mut AuthenticatorState): &mut AuthenticatorStateInner {\nL0:\tloc1: u64\nB0:\n\t0: CopyLoc[0](Arg0: &mut AuthenticatorState)\n\t1: ImmBorrowField[9](AuthenticatorState.version: u64)\n\t2: ReadRef\n\t3: StLoc[2](loc1: u64)\n\t4: CopyLoc[2](loc1: u64)\n\t5: LdConst[1](U64: 01000000..)\n\t6: Eq\n\t7: BrFalse(9)\nB1:\n\t8: Branch(13)\nB2:\n\t9: MoveLoc[0](Arg0: &mut AuthenticatorState)\n\t10: Pop\n\t11: LdConst[1](U64: 01000000..)\n\t12: Abort\nB3:\n\t13: CopyLoc[0](Arg0: &mut AuthenticatorState)\n\t14: MutBorrowField[8](AuthenticatorState.id: UID)\n\t15: MoveLoc[0](Arg0: &mut AuthenticatorState)\n\t16: ImmBorrowField[9](AuthenticatorState.version: u64)\n\t17: ReadRef\n\t18: Call dynamic_field::borrow_mut<u64, AuthenticatorStateInner>(&mut UID, u64): &mut AuthenticatorStateInner\n\t19: StLoc[1](loc0: &mut AuthenticatorStateInner)\n\t20: CopyLoc[1](loc0: &mut AuthenticatorStateInner)\n\t21: ImmBorrowField[10](AuthenticatorStateInner.version: u64)\n\t22: ReadRef\n\t23: MoveLoc[2](loc1: u64)\n\t24: Eq\n\t25: BrFalse(27)\nB4:\n\t26: Branch(31)\nB5:\n\t27: MoveLoc[1](loc0: &mut AuthenticatorStateInner)\n\t28: Pop\n\t29: LdConst[1](U64: 01000000..)\n\t30: Abort\nB6:\n\t31: MoveLoc[1](loc0: &mut AuthenticatorStateInner)\n\t32: Ret\n}\nload_inner(Arg0: &AuthenticatorState): &AuthenticatorStateInner {\nL0:\tloc1: u64\nB0:\n\t0: CopyLoc[0](Arg0: &AuthenticatorState)\n\t1: ImmBorrowField[9](AuthenticatorState.version: u64)\n\t2: ReadRef\n\t3: StLoc[2](loc1: u64)\n\t4: CopyLoc[2](loc1: u64)\n\t5: LdConst[1](U64: 01000000..)\n\t6: Eq\n\t7: BrFalse(9)\nB1:\n\t8: Branch(13)\nB2:\n\t9: MoveLoc[0](Arg0: &AuthenticatorState)\n\t10: Pop\n\t11: LdConst[1](U64: 01000000..)\n\t12: Abort\nB3:\n\t13: CopyLoc[0](Arg0: &AuthenticatorState)\n\t14: ImmBorrowField[8](AuthenticatorState.id: UID)\n\t15: MoveLoc[0](Arg0: &AuthenticatorState)\n\t16: ImmBorrowField[9](AuthenticatorState.version: u64)\n\t17: ReadRef\n\t18: Call dynamic_field::borrow<u64, AuthenticatorStateInner>(&UID, u64): &AuthenticatorStateInner\n\t19: StLoc[1](loc0: &AuthenticatorStateInner)\n\t20: CopyLoc[1](loc0: &AuthenticatorStateInner)\n\t21: ImmBorrowField[10](AuthenticatorStateInner.version: u64)\n\t22: ReadRef\n\t23: MoveLoc[2](loc1: u64)\n\t24: Eq\n\t25: BrFalse(27)\nB4:\n\t26: Branch(31)\nB5:\n\t27: MoveLoc[1](loc0: &AuthenticatorStateInner)\n\t28: Pop\n\t29: LdConst[1](U64: 01000000..)\n\t30: Abort\nB6:\n\t31: MoveLoc[1](loc0: &AuthenticatorStateInner)\n\t32: Ret\n}\ncheck_sorted(Arg0: &vector<ActiveJwk>) {\nL0:\tloc1: &ActiveJwk\nL1:\tloc2: u64\nB0:\n\t0: LdU64(0)\n\t1: StLoc[3](loc2: u64)\nB1:\n\t2: CopyLoc[3](loc2: u64)\n\t3: CopyLoc[0](Arg0: &vector<ActiveJwk>)\n\t4: VecLen(23)\n\t5: LdU64(1)\n\t6: Sub\n\t7: Lt\n\t8: BrFalse(34)\nB2:\n\t9: Branch(10)\nB3:\n\t10: CopyLoc[0](Arg0: &vector<ActiveJwk>)\n\t11: CopyLoc[3](loc2: u64)\n\t12: VecImmBorrow(23)\n\t13: StLoc[1](loc0: &ActiveJwk)\n\t14: CopyLoc[0](Arg0: &vector<ActiveJwk>)\n\t15: CopyLoc[3](loc2: u64)\n\t16: LdU64(1)\n\t17: Add\n\t18: VecImmBorrow(23)\n\t19: StLoc[2](loc1: &ActiveJwk)\n\t20: MoveLoc[1](loc0: &ActiveJwk)\n\t21: MoveLoc[2](loc1: &ActiveJwk)\n\t22: Call jwk_lt(&ActiveJwk, &ActiveJwk): bool\n\t23: BrFalse(25)\nB4:\n\t24: Branch(29)\nB5:\n\t25: MoveLoc[0](Arg0: &vector<ActiveJwk>)\n\t26: Pop\n\t27: LdConst[2](U64: 02000000..)\n\t28: Abort\nB6:\n\t29: MoveLoc[3](loc2: u64)\n\t30: LdU64(1)\n\t31: Add\n\t32: StLoc[3](loc2: u64)\n\t33: Branch(2)\nB7:\n\t34: MoveLoc[0](Arg0: &vector<ActiveJwk>)\n\t35: Pop\n\t36: Ret\n}\nupdate_authenticator_state(Arg0: &mut AuthenticatorState, Arg1: vector<ActiveJwk>, Arg2: &TxContext) {\nL0:\tloc3: &mut AuthenticatorStateInner\nL1:\tloc4: u64\nL2:\tloc5: ActiveJwk\nL3:\tloc6: vector<ActiveJwk>\nL4:\tloc7: u64\nL5:\tloc8: &ActiveJwk\nL6:\tloc9: &ActiveJwk\nL7:\tloc10: vector<ActiveJwk>\nB0:\n\t0: MoveLoc[2](Arg2: &TxContext)\n\t1: Call tx_context::sender(&TxContext): address\n\t2: LdConst[3](Address: 00000000..)\n\t3: Eq\n\t4: BrFalse(6)\nB1:\n\t5: Branch(10)\nB2:\n\t6: MoveLoc[0](Arg0: &mut AuthenticatorState)\n\t7: Pop\n\t8: LdConst[0](U64: 00000000..)\n\t9: Abort\nB3:\n\t10: ImmBorrowLoc[1](Arg1: vector<ActiveJwk>)\n\t11: Call check_sorted(&vector<ActiveJwk>)\n\t12: MoveLoc[1](Arg1: vector<ActiveJwk>)\n\t13: Call deduplicate(vector<ActiveJwk>): vector<ActiveJwk>\n\t14: StLoc[9](loc6: vector<ActiveJwk>)\n\t15: MoveLoc[0](Arg0: &mut AuthenticatorState)\n\t16: Call load_inner_mut(&mut AuthenticatorState): &mut AuthenticatorStateInner\n\t17: StLoc[6](loc3: &mut AuthenticatorStateInner)\n\t18: VecPack(23, 0)\n\t19: StLoc[13](loc10: vector<ActiveJwk>)\n\t20: LdU64(0)\n\t21: StLoc[5](loc2: u64)\n\t22: LdU64(0)\n\t23: StLoc[7](loc4: u64)\n\t24: CopyLoc[6](loc3: &mut AuthenticatorStateInner)\n\t25: ImmBorrowField[11](AuthenticatorStateInner.active_jwks: vector<ActiveJwk>)\n\t26: VecLen(23)\n\t27: StLoc[4](loc1: u64)\n\t28: ImmBorrowLoc[9](loc6: vector<ActiveJwk>)\n\t29: VecLen(23)\n\t30: StLoc[10](loc7: u64)\nB4:\n\t31: CopyLoc[5](loc2: u64)\n\t32: CopyLoc[4](loc1: u64)\n\t33: Lt\n\t34: BrFalse(41)\nB5:\n\t35: Branch(36)\nB6:\n\t36: CopyLoc[7](loc4: u64)\n\t37: CopyLoc[10](loc7: u64)\n\t38: Lt\n\t39: StLoc[3](loc0: bool)\n\t40: Branch(43)\nB7:\n\t41: LdFalse\n\t42: StLoc[3](loc0: bool)\nB8:\n\t43: MoveLoc[3](loc0: bool)\n\t44: BrFalse(130)\nB9:\n\t45: CopyLoc[6](loc3: &mut AuthenticatorStateInner)\n\t46: ImmBorrowField[11](AuthenticatorStateInner.active_jwks: vector<ActiveJwk>)\n\t47: CopyLoc[5](loc2: u64)\n\t48: VecImmBorrow(23)\n\t49: StLoc[12](loc9: &ActiveJwk)\n\t50: ImmBorrowLoc[9](loc6: vector<ActiveJwk>)\n\t51: CopyLoc[7](loc4: u64)\n\t52: VecImmBorrow(23)\n\t53: StLoc[11](loc8: &ActiveJwk)\n\t54: CopyLoc[12](loc9: &ActiveJwk)\n\t55: CopyLoc[11](loc8: &ActiveJwk)\n\t56: Call active_jwk_equal(&ActiveJwk, &ActiveJwk): bool\n\t57: BrFalse(83)\nB10:\n\t58: CopyLoc[12](loc9: &ActiveJwk)\n\t59: ReadRef\n\t60: StLoc[8](loc5: ActiveJwk)\n\t61: MoveLoc[12](loc9: &ActiveJwk)\n\t62: ImmBorrowField[12](ActiveJwk.epoch: u64)\n\t63: ReadRef\n\t64: MoveLoc[11](loc8: &ActiveJwk)\n\t65: ImmBorrowField[12](ActiveJwk.epoch: u64)\n\t66: ReadRef\n\t67: Call math::max(u64, u64): u64\n\t68: MutBorrowLoc[8](loc5: ActiveJwk)\n\t69: MutBorrowField[12](ActiveJwk.epoch: u64)\n\t70: WriteRef\n\t71: MutBorrowLoc[13](loc10: vector<ActiveJwk>)\n\t72: MoveLoc[8](loc5: ActiveJwk)\n\t73: VecPushBack(23)\n\t74: MoveLoc[5](loc2: u64)\n\t75: LdU64(1)\n\t76: Add\n\t77: StLoc[5](loc2: u64)\n\t78: MoveLoc[7](loc4: u64)\n\t79: LdU64(1)\n\t80: Add\n\t81: StLoc[7](loc4: u64)\n\t82: Branch(129)\nB11:\n\t83: CopyLoc[12](loc9: &ActiveJwk)\n\t84: ImmBorrowField[1](ActiveJwk.jwk_id: JwkId)\n\t85: CopyLoc[11](loc8: &ActiveJwk)\n\t86: ImmBorrowField[1](ActiveJwk.jwk_id: JwkId)\n\t87: Call jwk_id_equal(&JwkId, &JwkId): bool\n\t88: BrFalse(104)\nB12:\n\t89: MoveLoc[11](loc8: &ActiveJwk)\n\t90: Pop\n\t91: MutBorrowLoc[13](loc10: vector<ActiveJwk>)\n\t92: MoveLoc[12](loc9: &ActiveJwk)\n\t93: ReadRef\n\t94: VecPushBack(23)\n\t95: MoveLoc[5](loc2: u64)\n\t96: LdU64(1)\n\t97: Add\n\t98: StLoc[5](loc2: u64)\n\t99: MoveLoc[7](loc4: u64)\n\t100: LdU64(1)\n\t101: Add\n\t102: StLoc[7](loc4: u64)\n\t103: Branch(129)\nB13:\n\t104: CopyLoc[12](loc9: &ActiveJwk)\n\t105: CopyLoc[11](loc8: &ActiveJwk)\n\t106: Call jwk_lt(&ActiveJwk, &ActiveJwk): bool\n\t107: BrFalse(119)\nB14:\n\t108: MoveLoc[11](loc8: &ActiveJwk)\n\t109: Pop\n\t110: MutBorrowLoc[13](loc10: vector<ActiveJwk>)\n\t111: MoveLoc[12](loc9: &ActiveJwk)\n\t112: ReadRef\n\t113: VecPushBack(23)\n\t114: MoveLoc[5](loc2: u64)\n\t115: LdU64(1)\n\t116: Add\n\t117: StLoc[5](loc2: u64)\n\t118: Branch(129)\nB15:\n\t119: MoveLoc[12](loc9: &ActiveJwk)\n\t120: Pop\n\t121: MutBorrowLoc[13](loc10: vector<ActiveJwk>)\n\t122: MoveLoc[11](loc8: &ActiveJwk)\n\t123: ReadRef\n\t124: VecPushBack(23)\n\t125: MoveLoc[7](loc4: u64)\n\t126: LdU64(1)\n\t127: Add\n\t128: StLoc[7](loc4: u64)\nB16:\n\t129: Branch(31)\nB17:\n\t130: CopyLoc[5](loc2: u64)\n\t131: CopyLoc[4](loc1: u64)\n\t132: Lt\n\t133: BrFalse(147)\nB18:\n\t134: Branch(135)\nB19:\n\t135: MutBorrowLoc[13](loc10: vector<ActiveJwk>)\n\t136: CopyLoc[6](loc3: &mut AuthenticatorStateInner)\n\t137: ImmBorrowField[11](AuthenticatorStateInner.active_jwks: vector<ActiveJwk>)\n\t138: CopyLoc[5](loc2: u64)\n\t139: VecImmBorrow(23)\n\t140: ReadRef\n\t141: VecPushBack(23)\n\t142: MoveLoc[5](loc2: u64)\n\t143: LdU64(1)\n\t144: Add\n\t145: StLoc[5](loc2: u64)\n\t146: Branch(130)\nB20:\n\t147: CopyLoc[7](loc4: u64)\n\t148: CopyLoc[10](loc7: u64)\n\t149: Lt\n\t150: BrFalse(163)\nB21:\n\t151: Branch(152)\nB22:\n\t152: MutBorrowLoc[13](loc10: vector<ActiveJwk>)\n\t153: ImmBorrowLoc[9](loc6: vector<ActiveJwk>)\n\t154: CopyLoc[7](loc4: u64)\n\t155: VecImmBorrow(23)\n\t156: ReadRef\n\t157: VecPushBack(23)\n\t158: MoveLoc[7](loc4: u64)\n\t159: LdU64(1)\n\t160: Add\n\t161: StLoc[7](loc4: u64)\n\t162: Branch(147)\nB23:\n\t163: MoveLoc[13](loc10: vector<ActiveJwk>)\n\t164: MoveLoc[6](loc3: &mut AuthenticatorStateInner)\n\t165: MutBorrowField[11](AuthenticatorStateInner.active_jwks: vector<ActiveJwk>)\n\t166: WriteRef\n\t167: Ret\n}\ndeduplicate(Arg0: vector<ActiveJwk>): vector<ActiveJwk> {\nL0:\tloc1: &ActiveJwk\nL1:\tloc2: Option<JwkId>\nL2:\tloc3: vector<ActiveJwk>\nB0:\n\t0: VecPack(23, 0)\n\t1: StLoc[4](loc3: vector<ActiveJwk>)\n\t2: LdU64(0)\n\t3: StLoc[1](loc0: u64)\n\t4: Call option::none<JwkId>(): Option<JwkId>\n\t5: StLoc[3](loc2: Option<JwkId>)\nB1:\n\t6: CopyLoc[1](loc0: u64)\n\t7: ImmBorrowLoc[0](Arg0: vector<ActiveJwk>)\n\t8: VecLen(23)\n\t9: Lt\n\t10: BrFalse(53)\nB2:\n\t11: Branch(12)\nB3:\n\t12: ImmBorrowLoc[0](Arg0: vector<ActiveJwk>)\n\t13: CopyLoc[1](loc0: u64)\n\t14: VecImmBorrow(23)\n\t15: StLoc[2](loc1: &ActiveJwk)\n\t16: ImmBorrowLoc[3](loc2: Option<JwkId>)\n\t17: Call option::is_none<JwkId>(&Option<JwkId>): bool\n\t18: BrFalse(25)\nB4:\n\t19: MutBorrowLoc[3](loc2: Option<JwkId>)\n\t20: CopyLoc[2](loc1: &ActiveJwk)\n\t21: ImmBorrowField[1](ActiveJwk.jwk_id: JwkId)\n\t22: ReadRef\n\t23: Call option::fill<JwkId>(&mut Option<JwkId>, JwkId)\n\t24: Branch(44)\nB5:\n\t25: ImmBorrowLoc[3](loc2: Option<JwkId>)\n\t26: Call option::borrow<JwkId>(&Option<JwkId>): &JwkId\n\t27: CopyLoc[2](loc1: &ActiveJwk)\n\t28: ImmBorrowField[1](ActiveJwk.jwk_id: JwkId)\n\t29: Call jwk_id_equal(&JwkId, &JwkId): bool\n\t30: BrFalse(38)\nB6:\n\t31: MoveLoc[2](loc1: &ActiveJwk)\n\t32: Pop\n\t33: MoveLoc[1](loc0: u64)\n\t34: LdU64(1)\n\t35: Add\n\t36: StLoc[1](loc0: u64)\n\t37: Branch(6)\nB7:\n\t38: CopyLoc[2](loc1: &ActiveJwk)\n\t39: ImmBorrowField[1](ActiveJwk.jwk_id: JwkId)\n\t40: ReadRef\n\t41: MutBorrowLoc[3](loc2: Option<JwkId>)\n\t42: Call option::borrow_mut<JwkId>(&mut Option<JwkId>): &mut JwkId\n\t43: WriteRef\nB8:\n\t44: MutBorrowLoc[4](loc3: vector<ActiveJwk>)\n\t45: MoveLoc[2](loc1: &ActiveJwk)\n\t46: ReadRef\n\t47: VecPushBack(23)\n\t48: MoveLoc[1](loc0: u64)\n\t49: LdU64(1)\n\t50: Add\n\t51: StLoc[1](loc0: u64)\n\t52: Branch(6)\nB9:\n\t53: MoveLoc[4](loc3: vector<ActiveJwk>)\n\t54: Ret\n}\nexpire_jwks(Arg0: &mut AuthenticatorState, Arg1: u64, Arg2: &TxContext) {\nL0:\tloc3: &String\nL1:\tloc4: &String\nL2:\tloc5: u64\nL3:\tloc6: u64\nL4:\tloc7: &mut AuthenticatorStateInner\nL5:\tloc8: vector<u64>\nL6:\tloc9: u64\nL7:\tloc10: &ActiveJwk\nL8:\tloc11: u64\nL9:\tloc12: vector<ActiveJwk>\nL10:\tloc13: Option<String>\nL11:\tloc14: Option<String>\nL12:\tloc15: &mut u64\nB0:\n\t0: MoveLoc[2](Arg2: &TxContext)\n\t1: Call tx_context::sender(&TxContext): address\n\t2: LdConst[3](Address: 00000000..)\n\t3: Eq\n\t4: BrFalse(6)\nB1:\n\t5: Branch(10)\nB2:\n\t6: MoveLoc[0](Arg0: &mut AuthenticatorState)\n\t7: Pop\n\t8: LdConst[0](U64: 00000000..)\n\t9: Abort\nB3:\n\t10: MoveLoc[0](Arg0: &mut AuthenticatorState)\n\t11: Call load_inner_mut(&mut AuthenticatorState): &mut AuthenticatorStateInner\n\t12: StLoc[10](loc7: &mut AuthenticatorStateInner)\n\t13: CopyLoc[10](loc7: &mut AuthenticatorStateInner)\n\t14: ImmBorrowField[11](AuthenticatorStateInner.active_jwks: vector<ActiveJwk>)\n\t15: VecLen(23)\n\t16: StLoc[14](loc11: u64)\n\t17: LdConst[4](Vector(U64): 00)\n\t18: StLoc[11](loc8: vector<u64>)\n\t19: LdU64(0)\n\t20: StLoc[8](loc5: u64)\n\t21: Call option::none<String>(): Option<String>\n\t22: StLoc[16](loc13: Option<String>)\nB4:\n\t23: CopyLoc[8](loc5: u64)\n\t24: CopyLoc[14](loc11: u64)\n\t25: Lt\n\t26: BrFalse(90)\nB5:\n\t27: Branch(28)\nB6:\n\t28: CopyLoc[10](loc7: &mut AuthenticatorStateInner)\n\t29: ImmBorrowField[11](AuthenticatorStateInner.active_jwks: vector<ActiveJwk>)\n\t30: CopyLoc[8](loc5: u64)\n\t31: VecImmBorrow(23)\n\t32: StLoc[5](loc2: &ActiveJwk)\n\t33: CopyLoc[5](loc2: &ActiveJwk)\n\t34: ImmBorrowField[1](ActiveJwk.jwk_id: JwkId)\n\t35: ImmBorrowField[6](JwkId.iss: String)\n\t36: StLoc[6](loc3: &String)\n\t37: ImmBorrowLoc[16](loc13: Option<String>)\n\t38: Call option::is_none<String>(&Option<String>): bool\n\t39: BrFalse(50)\nB7:\n\t40: MutBorrowLoc[16](loc13: Option<String>)\n\t41: MoveLoc[6](loc3: &String)\n\t42: ReadRef\n\t43: Call option::fill<String>(&mut Option<String>, String)\n\t44: MutBorrowLoc[11](loc8: vector<u64>)\n\t45: MoveLoc[5](loc2: &ActiveJwk)\n\t46: ImmBorrowField[12](ActiveJwk.epoch: u64)\n\t47: ReadRef\n\t48: VecPushBack(38)\n\t49: Branch(85)\nB8:\n\t50: CopyLoc[6](loc3: &String)\n\t51: ImmBorrowLoc[16](loc13: Option<String>)\n\t52: Call option::borrow<String>(&Option<String>): &String\n\t53: Eq\n\t54: BrFalse(75)\nB9:\n\t55: MoveLoc[6](loc3: &String)\n\t56: Pop\n\t57: ImmBorrowLoc[11](loc8: vector<u64>)\n\t58: VecLen(38)\n\t59: LdU64(1)\n\t60: Sub\n\t61: StLoc[4](loc1: u64)\n\t62: MutBorrowLoc[11](loc8: vector<u64>)\n\t63: MoveLoc[4](loc1: u64)\n\t64: VecMutBorrow(38)\n\t65: StLoc[18](loc15: &mut u64)\n\t66: CopyLoc[18](loc15: &mut u64)\n\t67: ReadRef\n\t68: MoveLoc[5](loc2: &ActiveJwk)\n\t69: ImmBorrowField[12](ActiveJwk.epoch: u64)\n\t70: ReadRef\n\t71: Call math::max(u64, u64): u64\n\t72: MoveLoc[18](loc15: &mut u64)\n\t73: WriteRef\n\t74: Branch(85)\nB10:\n\t75: MoveLoc[6](loc3: &String)\n\t76: ReadRef\n\t77: MutBorrowLoc[16](loc13: Option<String>)\n\t78: Call option::borrow_mut<String>(&mut Option<String>): &mut String\n\t79: WriteRef\n\t80: MutBorrowLoc[11](loc8: vector<u64>)\n\t81: MoveLoc[5](loc2: &ActiveJwk)\n\t82: ImmBorrowField[12](ActiveJwk.epoch: u64)\n\t83: ReadRef\n\t84: VecPushBack(38)\nB11:\n\t85: MoveLoc[8](loc5: u64)\n\t86: LdU64(1)\n\t87: Add\n\t88: StLoc[8](loc5: u64)\n\t89: Branch(23)\nB12:\n\t90: VecPack(23, 0)\n\t91: StLoc[15](loc12: vector<ActiveJwk>)\n\t92: Call option::none<String>(): Option<String>\n\t93: StLoc[17](loc14: Option<String>)\n\t94: LdU64(0)\n\t95: StLoc[9](loc6: u64)\n\t96: LdU64(0)\n\t97: StLoc[12](loc9: u64)\nB13:\n\t98: CopyLoc[9](loc6: u64)\n\t99: CopyLoc[14](loc11: u64)\n\t100: Lt\n\t101: BrFalse(167)\nB14:\n\t102: Branch(103)\nB15:\n\t103: CopyLoc[10](loc7: &mut AuthenticatorStateInner)\n\t104: ImmBorrowField[11](AuthenticatorStateInner.active_jwks: vector<ActiveJwk>)\n\t105: CopyLoc[9](loc6: u64)\n\t106: VecImmBorrow(23)\n\t107: StLoc[13](loc10: &ActiveJwk)\n\t108: CopyLoc[13](loc10: &ActiveJwk)\n\t109: ImmBorrowField[1](ActiveJwk.jwk_id: JwkId)\n\t110: ImmBorrowField[6](JwkId.iss: String)\n\t111: StLoc[7](loc4: &String)\n\t112: ImmBorrowLoc[17](loc14: Option<String>)\n\t113: Call option::is_none<String>(&Option<String>): bool\n\t114: BrFalse(120)\nB16:\n\t115: MutBorrowLoc[17](loc14: Option<String>)\n\t116: MoveLoc[7](loc4: &String)\n\t117: ReadRef\n\t118: Call option::fill<String>(&mut Option<String>, String)\n\t119: Branch(137)\nB17:\n\t120: CopyLoc[7](loc4: &String)\n\t121: ImmBorrowLoc[17](loc14: Option<String>)\n\t122: Call option::borrow<String>(&Option<String>): &String\n\t123: Neq\n\t124: BrFalse(135)\nB18:\n\t125: MoveLoc[7](loc4: &String)\n\t126: ReadRef\n\t127: MutBorrowLoc[17](loc14: Option<String>)\n\t128: Call option::borrow_mut<String>(&mut Option<String>): &mut String\n\t129: WriteRef\n\t130: MoveLoc[12](loc9: u64)\n\t131: LdU64(1)\n\t132: Add\n\t133: StLoc[12](loc9: u64)\n\t134: Branch(137)\nB19:\n\t135: MoveLoc[7](loc4: &String)\n\t136: Pop\nB20:\n\t137: ImmBorrowLoc[11](loc8: vector<u64>)\n\t138: CopyLoc[12](loc9: u64)\n\t139: VecImmBorrow(38)\n\t140: ReadRef\n\t141: CopyLoc[1](Arg1: u64)\n\t142: Lt\n\t143: BrFalse(147)\nB21:\n\t144: LdTrue\n\t145: StLoc[3](loc0: bool)\n\t146: Branch(153)\nB22:\n\t147: CopyLoc[13](loc10: &ActiveJwk)\n\t148: ImmBorrowField[12](ActiveJwk.epoch: u64)\n\t149: ReadRef\n\t150: CopyLoc[1](Arg1: u64)\n\t151: Ge\n\t152: StLoc[3](loc0: bool)\nB23:\n\t153: MoveLoc[3](loc0: bool)\n\t154: BrFalse(160)\nB24:\n\t155: MutBorrowLoc[15](loc12: vector<ActiveJwk>)\n\t156: MoveLoc[13](loc10: &ActiveJwk)\n\t157: ReadRef\n\t158: VecPushBack(23)\n\t159: Branch(162)\nB25:\n\t160: MoveLoc[13](loc10: &ActiveJwk)\n\t161: Pop\nB26:\n\t162: MoveLoc[9](loc6: u64)\n\t163: LdU64(1)\n\t164: Add\n\t165: StLoc[9](loc6: u64)\n\t166: Branch(98)\nB27:\n\t167: MoveLoc[15](loc12: vector<ActiveJwk>)\n\t168: MoveLoc[10](loc7: &mut AuthenticatorStateInner)\n\t169: MutBorrowField[11](AuthenticatorStateInner.active_jwks: vector<ActiveJwk>)\n\t170: WriteRef\n\t171: Ret\n}\nget_active_jwks(Arg0: &AuthenticatorState, Arg1: &TxContext): vector<ActiveJwk> {\nB0:\n\t0: MoveLoc[1](Arg1: &TxContext)\n\t1: Call tx_context::sender(&TxContext): address\n\t2: LdConst[3](Address: 00000000..)\n\t3: Eq\n\t4: BrFalse(6)\nB1:\n\t5: Branch(10)\nB2:\n\t6: MoveLoc[0](Arg0: &AuthenticatorState)\n\t7: Pop\n\t8: LdConst[0](U64: 00000000..)\n\t9: Abort\nB3:\n\t10: MoveLoc[0](Arg0: &AuthenticatorState)\n\t11: Call load_inner(&AuthenticatorState): &AuthenticatorStateInner\n\t12: ImmBorrowField[11](AuthenticatorStateInner.active_jwks: vector<ActiveJwk>)\n\t13: ReadRef\n\t14: Ret\n}\n\nConstants [\n\t0 => u64: 0000000000000000\n\t1 => u64: 0100000000000000\n\t2 => u64: 0200000000000000\n\t3 => address: 0000000000000000000000000000000000000000000000000000000000000000\n\t4 => vector<u64>: 00\n]\n}",
          "bag": "// Move bytecode v6\nmodule 2.bag {\nuse 0000000000000000000000000000000000000000000000000000000000000002::dynamic_field;\nuse 0000000000000000000000000000000000000000000000000000000000000002::object;\nuse 0000000000000000000000000000000000000000000000000000000000000002::tx_context;\n\n\nstruct Bag has store, key {\n\tid: UID,\n\tsize: u64\n}\n\npublic new(Arg0: &mut TxContext): Bag {\nB0:\n\t0: MoveLoc[0](Arg0: &mut TxContext)\n\t1: Call object::new(&mut TxContext): UID\n\t2: LdU64(0)\n\t3: Pack[0](Bag)\n\t4: Ret\n}\npublic add<Ty0: copy + drop + store, Ty1: store>(Arg0: &mut Bag, Arg1: Ty0, Arg2: Ty1) {\nB0:\n\t0: CopyLoc[0](Arg0: &mut Bag)\n\t1: MutBorrowField[0](Bag.id: UID)\n\t2: MoveLoc[1](Arg1: Ty0)\n\t3: MoveLoc[2](Arg2: Ty1)\n\t4: Call dynamic_field::add<Ty0, Ty1>(&mut UID, Ty0, Ty1)\n\t5: CopyLoc[0](Arg0: &mut Bag)\n\t6: ImmBorrowField[1](Bag.size: u64)\n\t7: ReadRef\n\t8: LdU64(1)\n\t9: Add\n\t10: MoveLoc[0](Arg0: &mut Bag)\n\t11: MutBorrowField[1](Bag.size: u64)\n\t12: WriteRef\n\t13: Ret\n}\npublic borrow<Ty0: copy + drop + store, Ty1: store>(Arg0: &Bag, Arg1: Ty0): &Ty1 {\nB0:\n\t0: MoveLoc[0](Arg0: &Bag)\n\t1: ImmBorrowField[0](Bag.id: UID)\n\t2: MoveLoc[1](Arg1: Ty0)\n\t3: Call dynamic_field::borrow<Ty0, Ty1>(&UID, Ty0): &Ty1\n\t4: Ret\n}\npublic borrow_mut<Ty0: copy + drop + store, Ty1: store>(Arg0: &mut Bag, Arg1: Ty0): &mut Ty1 {\nB0:\n\t0: MoveLoc[0](Arg0: &mut Bag)\n\t1: MutBorrowField[0](Bag.id: UID)\n\t2: MoveLoc[1](Arg1: Ty0)\n\t3: Call dynamic_field::borrow_mut<Ty0, Ty1>(&mut UID, Ty0): &mut Ty1\n\t4: Ret\n}\npublic remove<Ty0: copy + drop + store, Ty1: store>(Arg0: &mut Bag, Arg1: Ty0): Ty1 {\nB0:\n\t0: CopyLoc[0](Arg0: &mut Bag)\n\t1: MutBorrowField[0](Bag.id: UID)\n\t2: MoveLoc[1](Arg1: Ty0)\n\t3: Call dynamic_field::remove<Ty0, Ty1>(&mut UID, Ty0): Ty1\n\t4: StLoc[2](loc0: Ty1)\n\t5: CopyLoc[0](Arg0: &mut Bag)\n\t6: ImmBorrowField[1](Bag.size: u64)\n\t7: ReadRef\n\t8: LdU64(1)\n\t9: Sub\n\t10: MoveLoc[0](Arg0: &mut Bag)\n\t11: MutBorrowField[1](Bag.size: u64)\n\t12: WriteRef\n\t13: MoveLoc[2](loc0: Ty1)\n\t14: Ret\n}\npublic contains<Ty0: copy + drop + store>(Arg0: &Bag, Arg1: Ty0): bool {\nB0:\n\t0: MoveLoc[0](Arg0: &Bag)\n\t1: ImmBorrowField[0](Bag.id: UID)\n\t2: MoveLoc[1](Arg1: Ty0)\n\t3: Call dynamic_field::exists_<Ty0>(&UID, Ty0): bool\n\t4: Ret\n}\npublic contains_with_type<Ty0: copy + drop + store, Ty1: store>(Arg0: &Bag, Arg1: Ty0): bool {\nB0:\n\t0: MoveLoc[0](Arg0: &Bag)\n\t1: ImmBorrowField[0](Bag.id: UID)\n\t2: MoveLoc[1](Arg1: Ty0)\n\t3: Call dynamic_field::exists_with_type<Ty0, Ty1>(&UID, Ty0): bool\n\t4: Ret\n}\npublic length(Arg0: &Bag): u64 {\nB0:\n\t0: MoveLoc[0](Arg0: &Bag)\n\t1: ImmBorrowField[1](Bag.size: u64)\n\t2: ReadRef\n\t3: Ret\n}\npublic is_empty(Arg0: &Bag): bool {\nB0:\n\t0: MoveLoc[0](Arg0: &Bag)\n\t1: ImmBorrowField[1](Bag.size: u64)\n\t2: ReadRef\n\t3: LdU64(0)\n\t4: Eq\n\t5: Ret\n}\npublic destroy_empty(Arg0: Bag) {\nL0:\tloc1: u64\nB0:\n\t0: MoveLoc[0](Arg0: Bag)\n\t1: Unpack[0](Bag)\n\t2: StLoc[2](loc1: u64)\n\t3: StLoc[1](loc0: UID)\n\t4: MoveLoc[2](loc1: u64)\n\t5: LdU64(0)\n\t6: Eq\n\t7: BrFalse(9)\nB1:\n\t8: Branch(11)\nB2:\n\t9: LdConst[0](U64: 00000000..)\n\t10: Abort\nB3:\n\t11: MoveLoc[1](loc0: UID)\n\t12: Call object::delete(UID)\n\t13: Ret\n}\n\nConstants [\n\t0 => u64: 0000000000000000\n]\n}",
          "balance": "// Move bytecode v6\nmodule 2.balance {\nuse 0000000000000000000000000000000000000000000000000000000000000002::tx_context;\n\n\nstruct Supply<phantom Ty0> has store {\n\tvalue: u64\n}\nstruct Balance<phantom Ty0> has store {\n\tvalue: u64\n}\n\npublic value<Ty0>(Arg0: &Balance<Ty0>): u64 {\nB0:\n\t0: MoveLoc[0](Arg0: &Balance<Ty0>)\n\t1: ImmBorrowFieldGeneric[0](Balance.value: u64)\n\t2: ReadRef\n\t3: Ret\n}\npublic supply_value<Ty0>(Arg0: &Supply<Ty0>): u64 {\nB0:\n\t0: MoveLoc[0](Arg0: &Supply<Ty0>)\n\t1: ImmBorrowFieldGeneric[1](Supply.value: u64)\n\t2: ReadRef\n\t3: Ret\n}\npublic create_supply<Ty0: drop>(Arg0: Ty0): Supply<Ty0> {\nB0:\n\t0: LdU64(0)\n\t1: PackGeneric[0](Supply<Ty0>)\n\t2: Ret\n}\npublic increase_supply<Ty0>(Arg0: &mut Supply<Ty0>, Arg1: u64): Balance<Ty0> {\nB0:\n\t0: CopyLoc[1](Arg1: u64)\n\t1: LdU64(18446744073709551615)\n\t2: CopyLoc[0](Arg0: &mut Supply<Ty0>)\n\t3: ImmBorrowFieldGeneric[1](Supply.value: u64)\n\t4: ReadRef\n\t5: Sub\n\t6: Lt\n\t7: BrFalse(9)\nB1:\n\t8: Branch(13)\nB2:\n\t9: MoveLoc[0](Arg0: &mut Supply<Ty0>)\n\t10: Pop\n\t11: LdConst[1](U64: 01000000..)\n\t12: Abort\nB3:\n\t13: CopyLoc[0](Arg0: &mut Supply<Ty0>)\n\t14: ImmBorrowFieldGeneric[1](Supply.value: u64)\n\t15: ReadRef\n\t16: CopyLoc[1](Arg1: u64)\n\t17: Add\n\t18: MoveLoc[0](Arg0: &mut Supply<Ty0>)\n\t19: MutBorrowFieldGeneric[1](Supply.value: u64)\n\t20: WriteRef\n\t21: MoveLoc[1](Arg1: u64)\n\t22: PackGeneric[1](Balance<Ty0>)\n\t23: Ret\n}\npublic decrease_supply<Ty0>(Arg0: &mut Supply<Ty0>, Arg1: Balance<Ty0>): u64 {\nB0:\n\t0: MoveLoc[1](Arg1: Balance<Ty0>)\n\t1: UnpackGeneric[1](Balance<Ty0>)\n\t2: StLoc[2](loc0: u64)\n\t3: CopyLoc[0](Arg0: &mut Supply<Ty0>)\n\t4: ImmBorrowFieldGeneric[1](Supply.value: u64)\n\t5: ReadRef\n\t6: CopyLoc[2](loc0: u64)\n\t7: Ge\n\t8: BrFalse(10)\nB1:\n\t9: Branch(14)\nB2:\n\t10: MoveLoc[0](Arg0: &mut Supply<Ty0>)\n\t11: Pop\n\t12: LdConst[1](U64: 01000000..)\n\t13: Abort\nB3:\n\t14: CopyLoc[0](Arg0: &mut Supply<Ty0>)\n\t15: ImmBorrowFieldGeneric[1](Supply.value: u64)\n\t16: ReadRef\n\t17: CopyLoc[2](loc0: u64)\n\t18: Sub\n\t19: MoveLoc[0](Arg0: &mut Supply<Ty0>)\n\t20: MutBorrowFieldGeneric[1](Supply.value: u64)\n\t21: WriteRef\n\t22: MoveLoc[2](loc0: u64)\n\t23: Ret\n}\npublic zero<Ty0>(): Balance<Ty0> {\nB0:\n\t0: LdU64(0)\n\t1: PackGeneric[1](Balance<Ty0>)\n\t2: Ret\n}\npublic join<Ty0>(Arg0: &mut Balance<Ty0>, Arg1: Balance<Ty0>): u64 {\nB0:\n\t0: MoveLoc[1](Arg1: Balance<Ty0>)\n\t1: UnpackGeneric[1](Balance<Ty0>)\n\t2: StLoc[2](loc0: u64)\n\t3: CopyLoc[0](Arg0: &mut Balance<Ty0>)\n\t4: ImmBorrowFieldGeneric[0](Balance.value: u64)\n\t5: ReadRef\n\t6: MoveLoc[2](loc0: u64)\n\t7: Add\n\t8: CopyLoc[0](Arg0: &mut Balance<Ty0>)\n\t9: MutBorrowFieldGeneric[0](Balance.value: u64)\n\t10: WriteRef\n\t11: MoveLoc[0](Arg0: &mut Balance<Ty0>)\n\t12: ImmBorrowFieldGeneric[0](Balance.value: u64)\n\t13: ReadRef\n\t14: Ret\n}\npublic split<Ty0>(Arg0: &mut Balance<Ty0>, Arg1: u64): Balance<Ty0> {\nB0:\n\t0: CopyLoc[0](Arg0: &mut Balance<Ty0>)\n\t1: ImmBorrowFieldGeneric[0](Balance.value: u64)\n\t2: ReadRef\n\t3: CopyLoc[1](Arg1: u64)\n\t4: Ge\n\t5: BrFalse(7)\nB1:\n\t6: Branch(11)\nB2:\n\t7: MoveLoc[0](Arg0: &mut Balance<Ty0>)\n\t8: Pop\n\t9: LdConst[2](U64: 02000000..)\n\t10: Abort\nB3:\n\t11: CopyLoc[0](Arg0: &mut Balance<Ty0>)\n\t12: ImmBorrowFieldGeneric[0](Balance.value: u64)\n\t13: ReadRef\n\t14: CopyLoc[1](Arg1: u64)\n\t15: Sub\n\t16: MoveLoc[0](Arg0: &mut Balance<Ty0>)\n\t17: MutBorrowFieldGeneric[0](Balance.value: u64)\n\t18: WriteRef\n\t19: MoveLoc[1](Arg1: u64)\n\t20: PackGeneric[1](Balance<Ty0>)\n\t21: Ret\n}\npublic withdraw_all<Ty0>(Arg0: &mut Balance<Ty0>): Balance<Ty0> {\nB0:\n\t0: CopyLoc[0](Arg0: &mut Balance<Ty0>)\n\t1: ImmBorrowFieldGeneric[0](Balance.value: u64)\n\t2: ReadRef\n\t3: StLoc[1](loc0: u64)\n\t4: MoveLoc[0](Arg0: &mut Balance<Ty0>)\n\t5: MoveLoc[1](loc0: u64)\n\t6: Call split<Ty0>(&mut Balance<Ty0>, u64): Balance<Ty0>\n\t7: Ret\n}\npublic destroy_zero<Ty0>(Arg0: Balance<Ty0>) {\nB0:\n\t0: ImmBorrowLoc[0](Arg0: Balance<Ty0>)\n\t1: ImmBorrowFieldGeneric[0](Balance.value: u64)\n\t2: ReadRef\n\t3: LdU64(0)\n\t4: Eq\n\t5: BrFalse(7)\nB1:\n\t6: Branch(9)\nB2:\n\t7: LdConst[0](U64: 00000000..)\n\t8: Abort\nB3:\n\t9: MoveLoc[0](Arg0: Balance<Ty0>)\n\t10: UnpackGeneric[1](Balance<Ty0>)\n\t11: Pop\n\t12: Ret\n}\ncreate_staking_rewards<Ty0>(Arg0: u64, Arg1: &TxContext): Balance<Ty0> {\nB0:\n\t0: MoveLoc[1](Arg1: &TxContext)\n\t1: Call tx_context::sender(&TxContext): address\n\t2: LdConst[4](Address: 00000000..)\n\t3: Eq\n\t4: BrFalse(6)\nB1:\n\t5: Branch(8)\nB2:\n\t6: LdConst[3](U64: 03000000..)\n\t7: Abort\nB3:\n\t8: MoveLoc[0](Arg0: u64)\n\t9: PackGeneric[1](Balance<Ty0>)\n\t10: Ret\n}\ndestroy_storage_rebates<Ty0>(Arg0: Balance<Ty0>, Arg1: &TxContext) {\nB0:\n\t0: MoveLoc[1](Arg1: &TxContext)\n\t1: Call tx_context::sender(&TxContext): address\n\t2: LdConst[4](Address: 00000000..)\n\t3: Eq\n\t4: BrFalse(6)\nB1:\n\t5: Branch(8)\nB2:\n\t6: LdConst[3](U64: 03000000..)\n\t7: Abort\nB3:\n\t8: MoveLoc[0](Arg0: Balance<Ty0>)\n\t9: UnpackGeneric[1](Balance<Ty0>)\n\t10: Pop\n\t11: Ret\n}\npublic(friend) destroy_supply<Ty0>(Arg0: Supply<Ty0>): u64 {\nB0:\n\t0: MoveLoc[0](Arg0: Supply<Ty0>)\n\t1: UnpackGeneric[0](Supply<Ty0>)\n\t2: Ret\n}\n\nConstants [\n\t0 => u64: 0000000000000000\n\t1 => u64: 0100000000000000\n\t2 => u64: 0200000000000000\n\t3 => u64: 0300000000000000\n\t4 => address: 0000000000000000000000000000000000000000000000000000000000000000\n]\n}",
          "bcs": "// Move bytecode v6\nmodule 2.bcs {\nuse 0000000000000000000000000000000000000000000000000000000000000001::bcs as 1bcs;\nuse 0000000000000000000000000000000000000000000000000000000000000001::option;\nuse 0000000000000000000000000000000000000000000000000000000000000001::vector;\nuse 0000000000000000000000000000000000000000000000000000000000000002::address;\n\n\nstruct BCS has copy, drop, store {\n\tbytes: vector<u8>\n}\n\npublic to_bytes<Ty0>(Arg0: &Ty0): vector<u8> {\nB0:\n\t0: MoveLoc[0](Arg0: &Ty0)\n\t1: Call 1bcs::to_bytes<Ty0>(&Ty0): vector<u8>\n\t2: Ret\n}\npublic new(Arg0: vector<u8>): BCS {\nB0:\n\t0: MutBorrowLoc[0](Arg0: vector<u8>)\n\t1: Call vector::reverse<u8>(&mut vector<u8>)\n\t2: MoveLoc[0](Arg0: vector<u8>)\n\t3: Pack[0](BCS)\n\t4: Ret\n}\npublic into_remainder_bytes(Arg0: BCS): vector<u8> {\nB0:\n\t0: MoveLoc[0](Arg0: BCS)\n\t1: Unpack[0](BCS)\n\t2: StLoc[1](loc0: vector<u8>)\n\t3: MutBorrowLoc[1](loc0: vector<u8>)\n\t4: Call vector::reverse<u8>(&mut vector<u8>)\n\t5: MoveLoc[1](loc0: vector<u8>)\n\t6: Ret\n}\npublic peel_address(Arg0: &mut BCS): address {\nL0:\tloc1: u64\nB0:\n\t0: CopyLoc[0](Arg0: &mut BCS)\n\t1: ImmBorrowField[0](BCS.bytes: vector<u8>)\n\t2: VecLen(6)\n\t3: Call address::length(): u64\n\t4: Ge\n\t5: BrFalse(7)\nB1:\n\t6: Branch(11)\nB2:\n\t7: MoveLoc[0](Arg0: &mut BCS)\n\t8: Pop\n\t9: LdConst[0](U64: 00000000..)\n\t10: Abort\nB3:\n\t11: VecPack(6, 0)\n\t12: LdU64(0)\n\t13: StLoc[2](loc1: u64)\n\t14: StLoc[1](loc0: vector<u8>)\nB4:\n\t15: CopyLoc[2](loc1: u64)\n\t16: Call address::length(): u64\n\t17: Lt\n\t18: BrFalse(30)\nB5:\n\t19: Branch(20)\nB6:\n\t20: MutBorrowLoc[1](loc0: vector<u8>)\n\t21: CopyLoc[0](Arg0: &mut BCS)\n\t22: MutBorrowField[0](BCS.bytes: vector<u8>)\n\t23: VecPopBack(6)\n\t24: VecPushBack(6)\n\t25: MoveLoc[2](loc1: u64)\n\t26: LdU64(1)\n\t27: Add\n\t28: StLoc[2](loc1: u64)\n\t29: Branch(15)\nB7:\n\t30: MoveLoc[0](Arg0: &mut BCS)\n\t31: Pop\n\t32: MoveLoc[1](loc0: vector<u8>)\n\t33: Call address::from_bytes(vector<u8>): address\n\t34: Ret\n}\npublic peel_bool(Arg0: &mut BCS): bool {\nL0:\tloc1: u8\nB0:\n\t0: MoveLoc[0](Arg0: &mut BCS)\n\t1: Call peel_u8(&mut BCS): u8\n\t2: StLoc[2](loc1: u8)\n\t3: CopyLoc[2](loc1: u8)\n\t4: LdU8(0)\n\t5: Eq\n\t6: BrFalse(10)\nB1:\n\t7: LdFalse\n\t8: StLoc[1](loc0: bool)\n\t9: Branch(19)\nB2:\n\t10: MoveLoc[2](loc1: u8)\n\t11: LdU8(1)\n\t12: Eq\n\t13: BrFalse(15)\nB3:\n\t14: Branch(17)\nB4:\n\t15: LdConst[1](U64: 01000000..)\n\t16: Abort\nB5:\n\t17: LdTrue\n\t18: StLoc[1](loc0: bool)\nB6:\n\t19: MoveLoc[1](loc0: bool)\n\t20: Ret\n}\npublic peel_u8(Arg0: &mut BCS): u8 {\nB0:\n\t0: CopyLoc[0](Arg0: &mut BCS)\n\t1: ImmBorrowField[0](BCS.bytes: vector<u8>)\n\t2: VecLen(6)\n\t3: LdU64(1)\n\t4: Ge\n\t5: BrFalse(7)\nB1:\n\t6: Branch(11)\nB2:\n\t7: MoveLoc[0](Arg0: &mut BCS)\n\t8: Pop\n\t9: LdConst[0](U64: 00000000..)\n\t10: Abort\nB3:\n\t11: MoveLoc[0](Arg0: &mut BCS)\n\t12: MutBorrowField[0](BCS.bytes: vector<u8>)\n\t13: VecPopBack(6)\n\t14: Ret\n}\npublic peel_u64(Arg0: &mut BCS): u64 {\nL0:\tloc1: u8\nL1:\tloc2: u64\nB0:\n\t0: CopyLoc[0](Arg0: &mut BCS)\n\t1: ImmBorrowField[0](BCS.bytes: vector<u8>)\n\t2: VecLen(6)\n\t3: LdU64(8)\n\t4: Ge\n\t5: BrFalse(7)\nB1:\n\t6: Branch(11)\nB2:\n\t7: MoveLoc[0](Arg0: &mut BCS)\n\t8: Pop\n\t9: LdConst[0](U64: 00000000..)\n\t10: Abort\nB3:\n\t11: LdU64(0)\n\t12: LdU8(0)\n\t13: StLoc[2](loc1: u8)\n\t14: StLoc[3](loc2: u64)\nB4:\n\t15: CopyLoc[2](loc1: u8)\n\t16: LdU8(64)\n\t17: Lt\n\t18: BrFalse(36)\nB5:\n\t19: Branch(20)\nB6:\n\t20: CopyLoc[0](Arg0: &mut BCS)\n\t21: MutBorrowField[0](BCS.bytes: vector<u8>)\n\t22: VecPopBack(6)\n\t23: CastU64\n\t24: StLoc[1](loc0: u64)\n\t25: MoveLoc[3](loc2: u64)\n\t26: MoveLoc[1](loc0: u64)\n\t27: CopyLoc[2](loc1: u8)\n\t28: Shl\n\t29: Add\n\t30: StLoc[3](loc2: u64)\n\t31: MoveLoc[2](loc1: u8)\n\t32: LdU8(8)\n\t33: Add\n\t34: StLoc[2](loc1: u8)\n\t35: Branch(15)\nB7:\n\t36: MoveLoc[0](Arg0: &mut BCS)\n\t37: Pop\n\t38: MoveLoc[3](loc2: u64)\n\t39: Ret\n}\npublic peel_u128(Arg0: &mut BCS): u128 {\nL0:\tloc1: u8\nL1:\tloc2: u128\nB0:\n\t0: CopyLoc[0](Arg0: &mut BCS)\n\t1: ImmBorrowField[0](BCS.bytes: vector<u8>)\n\t2: VecLen(6)\n\t3: LdU64(16)\n\t4: Ge\n\t5: BrFalse(7)\nB1:\n\t6: Branch(11)\nB2:\n\t7: MoveLoc[0](Arg0: &mut BCS)\n\t8: Pop\n\t9: LdConst[0](U64: 00000000..)\n\t10: Abort\nB3:\n\t11: LdU128(0)\n\t12: LdU8(0)\n\t13: StLoc[2](loc1: u8)\n\t14: StLoc[3](loc2: u128)\nB4:\n\t15: CopyLoc[2](loc1: u8)\n\t16: LdU8(128)\n\t17: Lt\n\t18: BrFalse(36)\nB5:\n\t19: Branch(20)\nB6:\n\t20: CopyLoc[0](Arg0: &mut BCS)\n\t21: MutBorrowField[0](BCS.bytes: vector<u8>)\n\t22: VecPopBack(6)\n\t23: CastU128\n\t24: StLoc[1](loc0: u128)\n\t25: MoveLoc[3](loc2: u128)\n\t26: MoveLoc[1](loc0: u128)\n\t27: CopyLoc[2](loc1: u8)\n\t28: Shl\n\t29: Add\n\t30: StLoc[3](loc2: u128)\n\t31: MoveLoc[2](loc1: u8)\n\t32: LdU8(8)\n\t33: Add\n\t34: StLoc[2](loc1: u8)\n\t35: Branch(15)\nB7:\n\t36: MoveLoc[0](Arg0: &mut BCS)\n\t37: Pop\n\t38: MoveLoc[3](loc2: u128)\n\t39: Ret\n}\npublic peel_vec_length(Arg0: &mut BCS): u64 {\nL0:\tloc1: u64\nL1:\tloc2: u8\nL2:\tloc3: u64\nB0:\n\t0: LdU64(0)\n\t1: LdU8(0)\n\t2: LdU64(0)\n\t3: StLoc[2](loc1: u64)\n\t4: StLoc[3](loc2: u8)\n\t5: StLoc[4](loc3: u64)\nB1:\n\t6: CopyLoc[2](loc1: u64)\n\t7: LdU64(4)\n\t8: Le\n\t9: BrFalse(11)\nB2:\n\t10: Branch(15)\nB3:\n\t11: MoveLoc[0](Arg0: &mut BCS)\n\t12: Pop\n\t13: LdConst[2](U64: 02000000..)\n\t14: Abort\nB4:\n\t15: CopyLoc[0](Arg0: &mut BCS)\n\t16: MutBorrowField[0](BCS.bytes: vector<u8>)\n\t17: VecPopBack(6)\n\t18: CastU64\n\t19: StLoc[1](loc0: u64)\n\t20: MoveLoc[2](loc1: u64)\n\t21: LdU64(1)\n\t22: Add\n\t23: StLoc[2](loc1: u64)\n\t24: MoveLoc[4](loc3: u64)\n\t25: CopyLoc[1](loc0: u64)\n\t26: LdU64(127)\n\t27: BitAnd\n\t28: CopyLoc[3](loc2: u8)\n\t29: Shl\n\t30: BitOr\n\t31: StLoc[4](loc3: u64)\n\t32: MoveLoc[1](loc0: u64)\n\t33: LdU64(128)\n\t34: BitAnd\n\t35: LdU64(0)\n\t36: Eq\n\t37: BrFalse(39)\nB5:\n\t38: Branch(44)\nB6:\n\t39: MoveLoc[3](loc2: u8)\n\t40: LdU8(7)\n\t41: Add\n\t42: StLoc[3](loc2: u8)\n\t43: Branch(6)\nB7:\n\t44: MoveLoc[0](Arg0: &mut BCS)\n\t45: Pop\n\t46: MoveLoc[4](loc3: u64)\n\t47: Ret\n}\npublic peel_vec_address(Arg0: &mut BCS): vector<address> {\nL0:\tloc1: u64\nL1:\tloc2: vector<address>\nB0:\n\t0: CopyLoc[0](Arg0: &mut BCS)\n\t1: Call peel_vec_length(&mut BCS): u64\n\t2: LdU64(0)\n\t3: LdConst[3](Vector(Address): 00)\n\t4: StLoc[3](loc2: vector<address>)\n\t5: StLoc[1](loc0: u64)\n\t6: StLoc[2](loc1: u64)\nB1:\n\t7: CopyLoc[1](loc0: u64)\n\t8: CopyLoc[2](loc1: u64)\n\t9: Lt\n\t10: BrFalse(21)\nB2:\n\t11: Branch(12)\nB3:\n\t12: MutBorrowLoc[3](loc2: vector<address>)\n\t13: CopyLoc[0](Arg0: &mut BCS)\n\t14: Call peel_address(&mut BCS): address\n\t15: VecPushBack(4)\n\t16: MoveLoc[1](loc0: u64)\n\t17: LdU64(1)\n\t18: Add\n\t19: StLoc[1](loc0: u64)\n\t20: Branch(7)\nB4:\n\t21: MoveLoc[0](Arg0: &mut BCS)\n\t22: Pop\n\t23: MoveLoc[3](loc2: vector<address>)\n\t24: Ret\n}\npublic peel_vec_bool(Arg0: &mut BCS): vector<bool> {\nL0:\tloc1: u64\nL1:\tloc2: vector<bool>\nB0:\n\t0: CopyLoc[0](Arg0: &mut BCS)\n\t1: Call peel_vec_length(&mut BCS): u64\n\t2: LdU64(0)\n\t3: LdConst[4](Vector(Bool): 00)\n\t4: StLoc[3](loc2: vector<bool>)\n\t5: StLoc[1](loc0: u64)\n\t6: StLoc[2](loc1: u64)\nB1:\n\t7: CopyLoc[1](loc0: u64)\n\t8: CopyLoc[2](loc1: u64)\n\t9: Lt\n\t10: BrFalse(21)\nB2:\n\t11: Branch(12)\nB3:\n\t12: MutBorrowLoc[3](loc2: vector<bool>)\n\t13: CopyLoc[0](Arg0: &mut BCS)\n\t14: Call peel_bool(&mut BCS): bool\n\t15: VecPushBack(5)\n\t16: MoveLoc[1](loc0: u64)\n\t17: LdU64(1)\n\t18: Add\n\t19: StLoc[1](loc0: u64)\n\t20: Branch(7)\nB4:\n\t21: MoveLoc[0](Arg0: &mut BCS)\n\t22: Pop\n\t23: MoveLoc[3](loc2: vector<bool>)\n\t24: Ret\n}\npublic peel_vec_u8(Arg0: &mut BCS): vector<u8> {\nL0:\tloc1: u64\nL1:\tloc2: vector<u8>\nB0:\n\t0: CopyLoc[0](Arg0: &mut BCS)\n\t1: Call peel_vec_length(&mut BCS): u64\n\t2: LdU64(0)\n\t3: LdConst[5](Vector(U8): 00)\n\t4: StLoc[3](loc2: vector<u8>)\n\t5: StLoc[1](loc0: u64)\n\t6: StLoc[2](loc1: u64)\nB1:\n\t7: CopyLoc[1](loc0: u64)\n\t8: CopyLoc[2](loc1: u64)\n\t9: Lt\n\t10: BrFalse(21)\nB2:\n\t11: Branch(12)\nB3:\n\t12: MutBorrowLoc[3](loc2: vector<u8>)\n\t13: CopyLoc[0](Arg0: &mut BCS)\n\t14: Call peel_u8(&mut BCS): u8\n\t15: VecPushBack(6)\n\t16: MoveLoc[1](loc0: u64)\n\t17: LdU64(1)\n\t18: Add\n\t19: StLoc[1](loc0: u64)\n\t20: Branch(7)\nB4:\n\t21: MoveLoc[0](Arg0: &mut BCS)\n\t22: Pop\n\t23: MoveLoc[3](loc2: vector<u8>)\n\t24: Ret\n}\npublic peel_vec_vec_u8(Arg0: &mut BCS): vector<vector<u8>> {\nL0:\tloc1: u64\nL1:\tloc2: vector<vector<u8>>\nB0:\n\t0: CopyLoc[0](Arg0: &mut BCS)\n\t1: Call peel_vec_length(&mut BCS): u64\n\t2: LdU64(0)\n\t3: LdConst[6](Vector(Vector(U8)): 00)\n\t4: StLoc[3](loc2: vector<vector<u8>>)\n\t5: StLoc[1](loc0: u64)\n\t6: StLoc[2](loc1: u64)\nB1:\n\t7: CopyLoc[1](loc0: u64)\n\t8: CopyLoc[2](loc1: u64)\n\t9: Lt\n\t10: BrFalse(21)\nB2:\n\t11: Branch(12)\nB3:\n\t12: MutBorrowLoc[3](loc2: vector<vector<u8>>)\n\t13: CopyLoc[0](Arg0: &mut BCS)\n\t14: Call peel_vec_u8(&mut BCS): vector<u8>\n\t15: VecPushBack(1)\n\t16: MoveLoc[1](loc0: u64)\n\t17: LdU64(1)\n\t18: Add\n\t19: StLoc[1](loc0: u64)\n\t20: Branch(7)\nB4:\n\t21: MoveLoc[0](Arg0: &mut BCS)\n\t22: Pop\n\t23: MoveLoc[3](loc2: vector<vector<u8>>)\n\t24: Ret\n}\npublic peel_vec_u64(Arg0: &mut BCS): vector<u64> {\nL0:\tloc1: u64\nL1:\tloc2: vector<u64>\nB0:\n\t0: CopyLoc[0](Arg0: &mut BCS)\n\t1: Call peel_vec_length(&mut BCS): u64\n\t2: LdU64(0)\n\t3: LdConst[7](Vector(U64): 00)\n\t4: StLoc[3](loc2: vector<u64>)\n\t5: StLoc[1](loc0: u64)\n\t6: StLoc[2](loc1: u64)\nB1:\n\t7: CopyLoc[1](loc0: u64)\n\t8: CopyLoc[2](loc1: u64)\n\t9: Lt\n\t10: BrFalse(21)\nB2:\n\t11: Branch(12)\nB3:\n\t12: MutBorrowLoc[3](loc2: vector<u64>)\n\t13: CopyLoc[0](Arg0: &mut BCS)\n\t14: Call peel_u64(&mut BCS): u64\n\t15: VecPushBack(7)\n\t16: MoveLoc[1](loc0: u64)\n\t17: LdU64(1)\n\t18: Add\n\t19: StLoc[1](loc0: u64)\n\t20: Branch(7)\nB4:\n\t21: MoveLoc[0](Arg0: &mut BCS)\n\t22: Pop\n\t23: MoveLoc[3](loc2: vector<u64>)\n\t24: Ret\n}\npublic peel_vec_u128(Arg0: &mut BCS): vector<u128> {\nL0:\tloc1: u64\nL1:\tloc2: vector<u128>\nB0:\n\t0: CopyLoc[0](Arg0: &mut BCS)\n\t1: Call peel_vec_length(&mut BCS): u64\n\t2: LdU64(0)\n\t3: LdConst[8](Vector(U128): 00)\n\t4: StLoc[3](loc2: vector<u128>)\n\t5: StLoc[1](loc0: u64)\n\t6: StLoc[2](loc1: u64)\nB1:\n\t7: CopyLoc[1](loc0: u64)\n\t8: CopyLoc[2](loc1: u64)\n\t9: Lt\n\t10: BrFalse(21)\nB2:\n\t11: Branch(12)\nB3:\n\t12: MutBorrowLoc[3](loc2: vector<u128>)\n\t13: CopyLoc[0](Arg0: &mut BCS)\n\t14: Call peel_u128(&mut BCS): u128\n\t15: VecPushBack(8)\n\t16: MoveLoc[1](loc0: u64)\n\t17: LdU64(1)\n\t18: Add\n\t19: StLoc[1](loc0: u64)\n\t20: Branch(7)\nB4:\n\t21: MoveLoc[0](Arg0: &mut BCS)\n\t22: Pop\n\t23: MoveLoc[3](loc2: vector<u128>)\n\t24: Ret\n}\npublic peel_option_address(Arg0: &mut BCS): Option<address> {\nB0:\n\t0: CopyLoc[0](Arg0: &mut BCS)\n\t1: Call peel_bool(&mut BCS): bool\n\t2: BrFalse(8)\nB1:\n\t3: MoveLoc[0](Arg0: &mut BCS)\n\t4: Call peel_address(&mut BCS): address\n\t5: Call option::some<address>(address): Option<address>\n\t6: StLoc[1](loc0: Option<address>)\n\t7: Branch(12)\nB2:\n\t8: MoveLoc[0](Arg0: &mut BCS)\n\t9: Pop\n\t10: Call option::none<address>(): Option<address>\n\t11: StLoc[1](loc0: Option<address>)\nB3:\n\t12: MoveLoc[1](loc0: Option<address>)\n\t13: Ret\n}\npublic peel_option_bool(Arg0: &mut BCS): Option<bool> {\nB0:\n\t0: CopyLoc[0](Arg0: &mut BCS)\n\t1: Call peel_bool(&mut BCS): bool\n\t2: BrFalse(8)\nB1:\n\t3: MoveLoc[0](Arg0: &mut BCS)\n\t4: Call peel_bool(&mut BCS): bool\n\t5: Call option::some<bool>(bool): Option<bool>\n\t6: StLoc[1](loc0: Option<bool>)\n\t7: Branch(12)\nB2:\n\t8: MoveLoc[0](Arg0: &mut BCS)\n\t9: Pop\n\t10: Call option::none<bool>(): Option<bool>\n\t11: StLoc[1](loc0: Option<bool>)\nB3:\n\t12: MoveLoc[1](loc0: Option<bool>)\n\t13: Ret\n}\npublic peel_option_u8(Arg0: &mut BCS): Option<u8> {\nB0:\n\t0: CopyLoc[0](Arg0: &mut BCS)\n\t1: Call peel_bool(&mut BCS): bool\n\t2: BrFalse(8)\nB1:\n\t3: MoveLoc[0](Arg0: &mut BCS)\n\t4: Call peel_u8(&mut BCS): u8\n\t5: Call option::some<u8>(u8): Option<u8>\n\t6: StLoc[1](loc0: Option<u8>)\n\t7: Branch(12)\nB2:\n\t8: MoveLoc[0](Arg0: &mut BCS)\n\t9: Pop\n\t10: Call option::none<u8>(): Option<u8>\n\t11: StLoc[1](loc0: Option<u8>)\nB3:\n\t12: MoveLoc[1](loc0: Option<u8>)\n\t13: Ret\n}\npublic peel_option_u64(Arg0: &mut BCS): Option<u64> {\nB0:\n\t0: CopyLoc[0](Arg0: &mut BCS)\n\t1: Call peel_bool(&mut BCS): bool\n\t2: BrFalse(8)\nB1:\n\t3: MoveLoc[0](Arg0: &mut BCS)\n\t4: Call peel_u64(&mut BCS): u64\n\t5: Call option::some<u64>(u64): Option<u64>\n\t6: StLoc[1](loc0: Option<u64>)\n\t7: Branch(12)\nB2:\n\t8: MoveLoc[0](Arg0: &mut BCS)\n\t9: Pop\n\t10: Call option::none<u64>(): Option<u64>\n\t11: StLoc[1](loc0: Option<u64>)\nB3:\n\t12: MoveLoc[1](loc0: Option<u64>)\n\t13: Ret\n}\npublic peel_option_u128(Arg0: &mut BCS): Option<u128> {\nB0:\n\t0: CopyLoc[0](Arg0: &mut BCS)\n\t1: Call peel_bool(&mut BCS): bool\n\t2: BrFalse(8)\nB1:\n\t3: MoveLoc[0](Arg0: &mut BCS)\n\t4: Call peel_u128(&mut BCS): u128\n\t5: Call option::some<u128>(u128): Option<u128>\n\t6: StLoc[1](loc0: Option<u128>)\n\t7: Branch(12)\nB2:\n\t8: MoveLoc[0](Arg0: &mut BCS)\n\t9: Pop\n\t10: Call option::none<u128>(): Option<u128>\n\t11: StLoc[1](loc0: Option<u128>)\nB3:\n\t12: MoveLoc[1](loc0: Option<u128>)\n\t13: Ret\n}\n\nConstants [\n\t0 => u64: 0000000000000000\n\t1 => u64: 0100000000000000\n\t2 => u64: 0200000000000000\n\t3 => vector<address>: 00\n\t4 => vector<bool>: 00\n\t5 => vector<u8>: \"\" // interpreted as UTF8 string\n\t6 => vector<vector<u8>>: 00\n\t7 => vector<u64>: 00\n\t8 => vector<u128>: 00\n]\n}",
          "bls12381": "// Move bytecode v6\nmodule 2.bls12381 {\n\n\nnative public bls12381_min_sig_verify(Arg0: &vector<u8>, Arg1: &vector<u8>, Arg2: &vector<u8>): bool\nnative public bls12381_min_pk_verify(Arg0: &vector<u8>, Arg1: &vector<u8>, Arg2: &vector<u8>): bool\n}",
          "borrow": "// Move bytecode v6\nmodule 2.borrow {\nuse 0000000000000000000000000000000000000000000000000000000000000001::option;\nuse 0000000000000000000000000000000000000000000000000000000000000002::object;\nuse 0000000000000000000000000000000000000000000000000000000000000002::tx_context;\n\n\nstruct Referent<Ty0: store + key> has store {\n\tid: address,\n\tvalue: Option<Ty0>\n}\nstruct Borrow {\n\tref: address,\n\tobj: ID\n}\n\npublic new<Ty0: store + key>(Arg0: Ty0, Arg1: &mut TxContext): Referent<Ty0> {\nB0:\n\t0: MoveLoc[1](Arg1: &mut TxContext)\n\t1: Call tx_context::fresh_object_address(&mut TxContext): address\n\t2: MoveLoc[0](Arg0: Ty0)\n\t3: Call option::some<Ty0>(Ty0): Option<Ty0>\n\t4: PackGeneric[0](Referent<Ty0>)\n\t5: Ret\n}\npublic borrow<Ty0: store + key>(Arg0: &mut Referent<Ty0>): Ty0 * Borrow {\nL0:\tloc1: Ty0\nB0:\n\t0: CopyLoc[0](Arg0: &mut Referent<Ty0>)\n\t1: MutBorrowFieldGeneric[0](Referent.value: Option<Ty0>)\n\t2: Call option::extract<Ty0>(&mut Option<Ty0>): Ty0\n\t3: StLoc[2](loc1: Ty0)\n\t4: ImmBorrowLoc[2](loc1: Ty0)\n\t5: Call object::id<Ty0>(&Ty0): ID\n\t6: StLoc[1](loc0: ID)\n\t7: MoveLoc[2](loc1: Ty0)\n\t8: MoveLoc[0](Arg0: &mut Referent<Ty0>)\n\t9: ImmBorrowFieldGeneric[1](Referent.id: address)\n\t10: ReadRef\n\t11: MoveLoc[1](loc0: ID)\n\t12: Pack[1](Borrow)\n\t13: Ret\n}\npublic put_back<Ty0: store + key>(Arg0: &mut Referent<Ty0>, Arg1: Ty0, Arg2: Borrow) {\nB0:\n\t0: MoveLoc[2](Arg2: Borrow)\n\t1: Unpack[1](Borrow)\n\t2: StLoc[3](loc0: ID)\n\t3: StLoc[4](loc1: address)\n\t4: ImmBorrowLoc[1](Arg1: Ty0)\n\t5: Call object::id<Ty0>(&Ty0): ID\n\t6: MoveLoc[3](loc0: ID)\n\t7: Eq\n\t8: BrFalse(10)\nB1:\n\t9: Branch(14)\nB2:\n\t10: MoveLoc[0](Arg0: &mut Referent<Ty0>)\n\t11: Pop\n\t12: LdConst[1](U64: 01000000..)\n\t13: Abort\nB3:\n\t14: CopyLoc[0](Arg0: &mut Referent<Ty0>)\n\t15: ImmBorrowFieldGeneric[1](Referent.id: address)\n\t16: ReadRef\n\t17: MoveLoc[4](loc1: address)\n\t18: Eq\n\t19: BrFalse(21)\nB4:\n\t20: Branch(25)\nB5:\n\t21: MoveLoc[0](Arg0: &mut Referent<Ty0>)\n\t22: Pop\n\t23: LdConst[0](U64: 00000000..)\n\t24: Abort\nB6:\n\t25: MoveLoc[0](Arg0: &mut Referent<Ty0>)\n\t26: MutBorrowFieldGeneric[0](Referent.value: Option<Ty0>)\n\t27: MoveLoc[1](Arg1: Ty0)\n\t28: Call option::fill<Ty0>(&mut Option<Ty0>, Ty0)\n\t29: Ret\n}\npublic destroy<Ty0: store + key>(Arg0: Referent<Ty0>): Ty0 {\nB0:\n\t0: MoveLoc[0](Arg0: Referent<Ty0>)\n\t1: UnpackGeneric[0](Referent<Ty0>)\n\t2: StLoc[1](loc0: Option<Ty0>)\n\t3: Pop\n\t4: MoveLoc[1](loc0: Option<Ty0>)\n\t5: Call option::destroy_some<Ty0>(Option<Ty0>): Ty0\n\t6: Ret\n}\n\nConstants [\n\t0 => u64: 0000000000000000\n\t1 => u64: 0100000000000000\n]\n}",
          "clock": "// Move bytecode v6\nmodule 2.clock {\nuse 0000000000000000000000000000000000000000000000000000000000000002::object;\nuse 0000000000000000000000000000000000000000000000000000000000000002::transfer;\nuse 0000000000000000000000000000000000000000000000000000000000000002::tx_context;\n\n\nstruct Clock has key {\n\tid: UID,\n\ttimestamp_ms: u64\n}\n\npublic timestamp_ms(Arg0: &Clock): u64 {\nB0:\n\t0: MoveLoc[0](Arg0: &Clock)\n\t1: ImmBorrowField[0](Clock.timestamp_ms: u64)\n\t2: ReadRef\n\t3: Ret\n}\ncreate(Arg0: &TxContext) {\nB0:\n\t0: MoveLoc[0](Arg0: &TxContext)\n\t1: Call tx_context::sender(&TxContext): address\n\t2: LdConst[1](Address: 00000000..)\n\t3: Eq\n\t4: BrFalse(6)\nB1:\n\t5: Branch(8)\nB2:\n\t6: LdConst[0](U64: 00000000..)\n\t7: Abort\nB3:\n\t8: Call object::clock(): UID\n\t9: LdU64(0)\n\t10: Pack[0](Clock)\n\t11: Call transfer::share_object<Clock>(Clock)\n\t12: Ret\n}\nconsensus_commit_prologue(Arg0: &mut Clock, Arg1: u64, Arg2: &TxContext) {\nB0:\n\t0: MoveLoc[2](Arg2: &TxContext)\n\t1: Call tx_context::sender(&TxContext): address\n\t2: LdConst[1](Address: 00000000..)\n\t3: Eq\n\t4: BrFalse(6)\nB1:\n\t5: Branch(10)\nB2:\n\t6: MoveLoc[0](Arg0: &mut Clock)\n\t7: Pop\n\t8: LdConst[0](U64: 00000000..)\n\t9: Abort\nB3:\n\t10: MoveLoc[1](Arg1: u64)\n\t11: MoveLoc[0](Arg0: &mut Clock)\n\t12: MutBorrowField[0](Clock.timestamp_ms: u64)\n\t13: WriteRef\n\t14: Ret\n}\n\nConstants [\n\t0 => u64: 0000000000000000\n\t1 => address: 0000000000000000000000000000000000000000000000000000000000000000\n]\n}",
          "coin": "// Move bytecode v6\nmodule 2.coin {\nuse 0000000000000000000000000000000000000000000000000000000000000001::ascii;\nuse 0000000000000000000000000000000000000000000000000000000000000001::option;\nuse 0000000000000000000000000000000000000000000000000000000000000001::string;\nuse 0000000000000000000000000000000000000000000000000000000000000002::balance;\nuse 0000000000000000000000000000000000000000000000000000000000000002::object;\nuse 0000000000000000000000000000000000000000000000000000000000000002::transfer;\nuse 0000000000000000000000000000000000000000000000000000000000000002::tx_context;\nuse 0000000000000000000000000000000000000000000000000000000000000002::types;\nuse 0000000000000000000000000000000000000000000000000000000000000002::url;\n\n\nstruct Coin<phantom Ty0> has store, key {\n\tid: UID,\n\tbalance: Balance<Ty0>\n}\nstruct CoinMetadata<phantom Ty0> has store, key {\n\tid: UID,\n\tdecimals: u8,\n\tname: String,\n\tsymbol: String,\n\tdescription: String,\n\ticon_url: Option<Url>\n}\nstruct TreasuryCap<phantom Ty0> has store, key {\n\tid: UID,\n\ttotal_supply: Supply<Ty0>\n}\nstruct CurrencyCreated<phantom Ty0> has copy, drop {\n\tdecimals: u8\n}\n\npublic total_supply<Ty0>(Arg0: &TreasuryCap<Ty0>): u64 {\nB0:\n\t0: MoveLoc[0](Arg0: &TreasuryCap<Ty0>)\n\t1: ImmBorrowFieldGeneric[0](TreasuryCap.total_supply: Supply<Ty0>)\n\t2: Call balance::supply_value<Ty0>(&Supply<Ty0>): u64\n\t3: Ret\n}\npublic treasury_into_supply<Ty0>(Arg0: TreasuryCap<Ty0>): Supply<Ty0> {\nB0:\n\t0: MoveLoc[0](Arg0: TreasuryCap<Ty0>)\n\t1: UnpackGeneric[0](TreasuryCap<Ty0>)\n\t2: StLoc[1](loc0: Supply<Ty0>)\n\t3: Call object::delete(UID)\n\t4: MoveLoc[1](loc0: Supply<Ty0>)\n\t5: Ret\n}\npublic supply_immut<Ty0>(Arg0: &TreasuryCap<Ty0>): &Supply<Ty0> {\nB0:\n\t0: MoveLoc[0](Arg0: &TreasuryCap<Ty0>)\n\t1: ImmBorrowFieldGeneric[0](TreasuryCap.total_supply: Supply<Ty0>)\n\t2: Ret\n}\npublic supply_mut<Ty0>(Arg0: &mut TreasuryCap<Ty0>): &mut Supply<Ty0> {\nB0:\n\t0: MoveLoc[0](Arg0: &mut TreasuryCap<Ty0>)\n\t1: MutBorrowFieldGeneric[0](TreasuryCap.total_supply: Supply<Ty0>)\n\t2: Ret\n}\npublic value<Ty0>(Arg0: &Coin<Ty0>): u64 {\nB0:\n\t0: MoveLoc[0](Arg0: &Coin<Ty0>)\n\t1: ImmBorrowFieldGeneric[1](Coin.balance: Balance<Ty0>)\n\t2: Call balance::value<Ty0>(&Balance<Ty0>): u64\n\t3: Ret\n}\npublic balance<Ty0>(Arg0: &Coin<Ty0>): &Balance<Ty0> {\nB0:\n\t0: MoveLoc[0](Arg0: &Coin<Ty0>)\n\t1: ImmBorrowFieldGeneric[1](Coin.balance: Balance<Ty0>)\n\t2: Ret\n}\npublic balance_mut<Ty0>(Arg0: &mut Coin<Ty0>): &mut Balance<Ty0> {\nB0:\n\t0: MoveLoc[0](Arg0: &mut Coin<Ty0>)\n\t1: MutBorrowFieldGeneric[1](Coin.balance: Balance<Ty0>)\n\t2: Ret\n}\npublic from_balance<Ty0>(Arg0: Balance<Ty0>, Arg1: &mut TxContext): Coin<Ty0> {\nB0:\n\t0: MoveLoc[1](Arg1: &mut TxContext)\n\t1: Call object::new(&mut TxContext): UID\n\t2: MoveLoc[0](Arg0: Balance<Ty0>)\n\t3: PackGeneric[1](Coin<Ty0>)\n\t4: Ret\n}\npublic into_balance<Ty0>(Arg0: Coin<Ty0>): Balance<Ty0> {\nB0:\n\t0: MoveLoc[0](Arg0: Coin<Ty0>)\n\t1: UnpackGeneric[1](Coin<Ty0>)\n\t2: StLoc[1](loc0: Balance<Ty0>)\n\t3: Call object::delete(UID)\n\t4: MoveLoc[1](loc0: Balance<Ty0>)\n\t5: Ret\n}\npublic take<Ty0>(Arg0: &mut Balance<Ty0>, Arg1: u64, Arg2: &mut TxContext): Coin<Ty0> {\nB0:\n\t0: MoveLoc[2](Arg2: &mut TxContext)\n\t1: Call object::new(&mut TxContext): UID\n\t2: MoveLoc[0](Arg0: &mut Balance<Ty0>)\n\t3: MoveLoc[1](Arg1: u64)\n\t4: Call balance::split<Ty0>(&mut Balance<Ty0>, u64): Balance<Ty0>\n\t5: PackGeneric[1](Coin<Ty0>)\n\t6: Ret\n}\npublic put<Ty0>(Arg0: &mut Balance<Ty0>, Arg1: Coin<Ty0>) {\nB0:\n\t0: MoveLoc[0](Arg0: &mut Balance<Ty0>)\n\t1: MoveLoc[1](Arg1: Coin<Ty0>)\n\t2: Call into_balance<Ty0>(Coin<Ty0>): Balance<Ty0>\n\t3: Call balance::join<Ty0>(&mut Balance<Ty0>, Balance<Ty0>): u64\n\t4: Pop\n\t5: Ret\n}\nentry public join<Ty0>(Arg0: &mut Coin<Ty0>, Arg1: Coin<Ty0>) {\nB0:\n\t0: MoveLoc[1](Arg1: Coin<Ty0>)\n\t1: UnpackGeneric[1](Coin<Ty0>)\n\t2: StLoc[2](loc0: Balance<Ty0>)\n\t3: Call object::delete(UID)\n\t4: MoveLoc[0](Arg0: &mut Coin<Ty0>)\n\t5: MutBorrowFieldGeneric[1](Coin.balance: Balance<Ty0>)\n\t6: MoveLoc[2](loc0: Balance<Ty0>)\n\t7: Call balance::join<Ty0>(&mut Balance<Ty0>, Balance<Ty0>): u64\n\t8: Pop\n\t9: Ret\n}\npublic split<Ty0>(Arg0: &mut Coin<Ty0>, Arg1: u64, Arg2: &mut TxContext): Coin<Ty0> {\nB0:\n\t0: MoveLoc[0](Arg0: &mut Coin<Ty0>)\n\t1: MutBorrowFieldGeneric[1](Coin.balance: Balance<Ty0>)\n\t2: MoveLoc[1](Arg1: u64)\n\t3: MoveLoc[2](Arg2: &mut TxContext)\n\t4: Call take<Ty0>(&mut Balance<Ty0>, u64, &mut TxContext): Coin<Ty0>\n\t5: Ret\n}\npublic divide_into_n<Ty0>(Arg0: &mut Coin<Ty0>, Arg1: u64, Arg2: &mut TxContext): vector<Coin<Ty0>> {\nB0:\n\t0: CopyLoc[1](Arg1: u64)\n\t1: LdU64(0)\n\t2: Gt\n\t3: BrFalse(5)\nB1:\n\t4: Branch(11)\nB2:\n\t5: MoveLoc[0](Arg0: &mut Coin<Ty0>)\n\t6: Pop\n\t7: MoveLoc[2](Arg2: &mut TxContext)\n\t8: Pop\n\t9: LdConst[1](U64: 01000000..)\n\t10: Abort\nB3:\n\t11: CopyLoc[1](Arg1: u64)\n\t12: CopyLoc[0](Arg0: &mut Coin<Ty0>)\n\t13: FreezeRef\n\t14: Call value<Ty0>(&Coin<Ty0>): u64\n\t15: Le\n\t16: BrFalse(18)\nB4:\n\t17: Branch(24)\nB5:\n\t18: MoveLoc[0](Arg0: &mut Coin<Ty0>)\n\t19: Pop\n\t20: MoveLoc[2](Arg2: &mut TxContext)\n\t21: Pop\n\t22: LdConst[2](U64: 02000000..)\n\t23: Abort\nB6:\n\t24: VecPack(12, 0)\n\t25: StLoc[5](loc2: vector<Coin<Ty0>>)\n\t26: LdU64(0)\n\t27: StLoc[3](loc0: u64)\n\t28: CopyLoc[0](Arg0: &mut Coin<Ty0>)\n\t29: FreezeRef\n\t30: Call value<Ty0>(&Coin<Ty0>): u64\n\t31: CopyLoc[1](Arg1: u64)\n\t32: Div\n\t33: StLoc[4](loc1: u64)\nB7:\n\t34: Nop\n\t35: CopyLoc[3](loc0: u64)\n\t36: CopyLoc[1](Arg1: u64)\n\t37: LdU64(1)\n\t38: Sub\n\t39: Lt\n\t40: BrFalse(53)\nB8:\n\t41: Branch(42)\nB9:\n\t42: MutBorrowLoc[5](loc2: vector<Coin<Ty0>>)\n\t43: CopyLoc[0](Arg0: &mut Coin<Ty0>)\n\t44: CopyLoc[4](loc1: u64)\n\t45: CopyLoc[2](Arg2: &mut TxContext)\n\t46: Call split<Ty0>(&mut Coin<Ty0>, u64, &mut TxContext): Coin<Ty0>\n\t47: VecPushBack(12)\n\t48: MoveLoc[3](loc0: u64)\n\t49: LdU64(1)\n\t50: Add\n\t51: StLoc[3](loc0: u64)\n\t52: Branch(34)\nB10:\n\t53: MoveLoc[0](Arg0: &mut Coin<Ty0>)\n\t54: Pop\n\t55: MoveLoc[2](Arg2: &mut TxContext)\n\t56: Pop\n\t57: MoveLoc[5](loc2: vector<Coin<Ty0>>)\n\t58: Ret\n}\npublic zero<Ty0>(Arg0: &mut TxContext): Coin<Ty0> {\nB0:\n\t0: MoveLoc[0](Arg0: &mut TxContext)\n\t1: Call object::new(&mut TxContext): UID\n\t2: Call balance::zero<Ty0>(): Balance<Ty0>\n\t3: PackGeneric[1](Coin<Ty0>)\n\t4: Ret\n}\npublic destroy_zero<Ty0>(Arg0: Coin<Ty0>) {\nB0:\n\t0: MoveLoc[0](Arg0: Coin<Ty0>)\n\t1: UnpackGeneric[1](Coin<Ty0>)\n\t2: StLoc[1](loc0: Balance<Ty0>)\n\t3: Call object::delete(UID)\n\t4: MoveLoc[1](loc0: Balance<Ty0>)\n\t5: Call balance::destroy_zero<Ty0>(Balance<Ty0>)\n\t6: Ret\n}\npublic create_currency<Ty0: drop>(Arg0: Ty0, Arg1: u8, Arg2: vector<u8>, Arg3: vector<u8>, Arg4: vector<u8>, Arg5: Option<Url>, Arg6: &mut TxContext): TreasuryCap<Ty0> * CoinMetadata<Ty0> {\nB0:\n\t0: ImmBorrowLoc[0](Arg0: Ty0)\n\t1: Call types::is_one_time_witness<Ty0>(&Ty0): bool\n\t2: BrFalse(4)\nB1:\n\t3: Branch(8)\nB2:\n\t4: MoveLoc[6](Arg6: &mut TxContext)\n\t5: Pop\n\t6: LdConst[0](U64: 00000000..)\n\t7: Abort\nB3:\n\t8: CopyLoc[6](Arg6: &mut TxContext)\n\t9: Call object::new(&mut TxContext): UID\n\t10: MoveLoc[0](Arg0: Ty0)\n\t11: Call balance::create_supply<Ty0>(Ty0): Supply<Ty0>\n\t12: PackGeneric[0](TreasuryCap<Ty0>)\n\t13: MoveLoc[6](Arg6: &mut TxContext)\n\t14: Call object::new(&mut TxContext): UID\n\t15: MoveLoc[1](Arg1: u8)\n\t16: MoveLoc[3](Arg3: vector<u8>)\n\t17: Call string::utf8(vector<u8>): String\n\t18: MoveLoc[2](Arg2: vector<u8>)\n\t19: Call ascii::string(vector<u8>): String\n\t20: MoveLoc[4](Arg4: vector<u8>)\n\t21: Call string::utf8(vector<u8>): String\n\t22: MoveLoc[5](Arg5: Option<Url>)\n\t23: PackGeneric[2](CoinMetadata<Ty0>)\n\t24: Ret\n}\npublic mint<Ty0>(Arg0: &mut TreasuryCap<Ty0>, Arg1: u64, Arg2: &mut TxContext): Coin<Ty0> {\nB0:\n\t0: MoveLoc[2](Arg2: &mut TxContext)\n\t1: Call object::new(&mut TxContext): UID\n\t2: MoveLoc[0](Arg0: &mut TreasuryCap<Ty0>)\n\t3: MutBorrowFieldGeneric[0](TreasuryCap.total_supply: Supply<Ty0>)\n\t4: MoveLoc[1](Arg1: u64)\n\t5: Call balance::increase_supply<Ty0>(&mut Supply<Ty0>, u64): Balance<Ty0>\n\t6: PackGeneric[1](Coin<Ty0>)\n\t7: Ret\n}\npublic mint_balance<Ty0>(Arg0: &mut TreasuryCap<Ty0>, Arg1: u64): Balance<Ty0> {\nB0:\n\t0: MoveLoc[0](Arg0: &mut TreasuryCap<Ty0>)\n\t1: MutBorrowFieldGeneric[0](TreasuryCap.total_supply: Supply<Ty0>)\n\t2: MoveLoc[1](Arg1: u64)\n\t3: Call balance::increase_supply<Ty0>(&mut Supply<Ty0>, u64): Balance<Ty0>\n\t4: Ret\n}\nentry public burn<Ty0>(Arg0: &mut TreasuryCap<Ty0>, Arg1: Coin<Ty0>): u64 {\nB0:\n\t0: MoveLoc[1](Arg1: Coin<Ty0>)\n\t1: UnpackGeneric[1](Coin<Ty0>)\n\t2: StLoc[2](loc0: Balance<Ty0>)\n\t3: Call object::delete(UID)\n\t4: MoveLoc[0](Arg0: &mut TreasuryCap<Ty0>)\n\t5: MutBorrowFieldGeneric[0](TreasuryCap.total_supply: Supply<Ty0>)\n\t6: MoveLoc[2](loc0: Balance<Ty0>)\n\t7: Call balance::decrease_supply<Ty0>(&mut Supply<Ty0>, Balance<Ty0>): u64\n\t8: Ret\n}\nentry public mint_and_transfer<Ty0>(Arg0: &mut TreasuryCap<Ty0>, Arg1: u64, Arg2: address, Arg3: &mut TxContext) {\nB0:\n\t0: MoveLoc[0](Arg0: &mut TreasuryCap<Ty0>)\n\t1: MoveLoc[1](Arg1: u64)\n\t2: MoveLoc[3](Arg3: &mut TxContext)\n\t3: Call mint<Ty0>(&mut TreasuryCap<Ty0>, u64, &mut TxContext): Coin<Ty0>\n\t4: MoveLoc[2](Arg2: address)\n\t5: Call transfer::public_transfer<Coin<Ty0>>(Coin<Ty0>, address)\n\t6: Ret\n}\nentry public update_name<Ty0>(Arg0: &TreasuryCap<Ty0>, Arg1: &mut CoinMetadata<Ty0>, Arg2: String) {\nB0:\n\t0: MoveLoc[2](Arg2: String)\n\t1: MoveLoc[1](Arg1: &mut CoinMetadata<Ty0>)\n\t2: MutBorrowFieldGeneric[2](CoinMetadata.name: String)\n\t3: WriteRef\n\t4: Ret\n}\nentry public update_symbol<Ty0>(Arg0: &TreasuryCap<Ty0>, Arg1: &mut CoinMetadata<Ty0>, Arg2: String) {\nB0:\n\t0: MoveLoc[2](Arg2: String)\n\t1: MoveLoc[1](Arg1: &mut CoinMetadata<Ty0>)\n\t2: MutBorrowFieldGeneric[3](CoinMetadata.symbol: String)\n\t3: WriteRef\n\t4: Ret\n}\nentry public update_description<Ty0>(Arg0: &TreasuryCap<Ty0>, Arg1: &mut CoinMetadata<Ty0>, Arg2: String) {\nB0:\n\t0: MoveLoc[2](Arg2: String)\n\t1: MoveLoc[1](Arg1: &mut CoinMetadata<Ty0>)\n\t2: MutBorrowFieldGeneric[4](CoinMetadata.description: String)\n\t3: WriteRef\n\t4: Ret\n}\nentry public update_icon_url<Ty0>(Arg0: &TreasuryCap<Ty0>, Arg1: &mut CoinMetadata<Ty0>, Arg2: String) {\nB0:\n\t0: MoveLoc[2](Arg2: String)\n\t1: Call url::new_unsafe(String): Url\n\t2: Call option::some<Url>(Url): Option<Url>\n\t3: MoveLoc[1](Arg1: &mut CoinMetadata<Ty0>)\n\t4: MutBorrowFieldGeneric[5](CoinMetadata.icon_url: Option<Url>)\n\t5: WriteRef\n\t6: Ret\n}\npublic get_decimals<Ty0>(Arg0: &CoinMetadata<Ty0>): u8 {\nB0:\n\t0: MoveLoc[0](Arg0: &CoinMetadata<Ty0>)\n\t1: ImmBorrowFieldGeneric[6](CoinMetadata.decimals: u8)\n\t2: ReadRef\n\t3: Ret\n}\npublic get_name<Ty0>(Arg0: &CoinMetadata<Ty0>): String {\nB0:\n\t0: MoveLoc[0](Arg0: &CoinMetadata<Ty0>)\n\t1: ImmBorrowFieldGeneric[2](CoinMetadata.name: String)\n\t2: ReadRef\n\t3: Ret\n}\npublic get_symbol<Ty0>(Arg0: &CoinMetadata<Ty0>): String {\nB0:\n\t0: MoveLoc[0](Arg0: &CoinMetadata<Ty0>)\n\t1: ImmBorrowFieldGeneric[3](CoinMetadata.symbol: String)\n\t2: ReadRef\n\t3: Ret\n}\npublic get_description<Ty0>(Arg0: &CoinMetadata<Ty0>): String {\nB0:\n\t0: MoveLoc[0](Arg0: &CoinMetadata<Ty0>)\n\t1: ImmBorrowFieldGeneric[4](CoinMetadata.description: String)\n\t2: ReadRef\n\t3: Ret\n}\npublic get_icon_url<Ty0>(Arg0: &CoinMetadata<Ty0>): Option<Url> {\nB0:\n\t0: MoveLoc[0](Arg0: &CoinMetadata<Ty0>)\n\t1: ImmBorrowFieldGeneric[5](CoinMetadata.icon_url: Option<Url>)\n\t2: ReadRef\n\t3: Ret\n}\npublic supply<Ty0>(Arg0: &mut TreasuryCap<Ty0>): &Supply<Ty0> {\nB0:\n\t0: MoveLoc[0](Arg0: &mut TreasuryCap<Ty0>)\n\t1: ImmBorrowFieldGeneric[0](TreasuryCap.total_supply: Supply<Ty0>)\n\t2: Ret\n}\n\nConstants [\n\t0 => u64: 0000000000000000\n\t1 => u64: 0100000000000000\n\t2 => u64: 0200000000000000\n]\n}",
          "display": "// Move bytecode v6\nmodule 2.display {\nuse 0000000000000000000000000000000000000000000000000000000000000001::string;\nuse 0000000000000000000000000000000000000000000000000000000000000002::event;\nuse 0000000000000000000000000000000000000000000000000000000000000002::object;\nuse 0000000000000000000000000000000000000000000000000000000000000002::package;\nuse 0000000000000000000000000000000000000000000000000000000000000002::transfer;\nuse 0000000000000000000000000000000000000000000000000000000000000002::tx_context;\nuse 0000000000000000000000000000000000000000000000000000000000000002::vec_map;\n\n\nstruct Display<phantom Ty0: key> has store, key {\n\tid: UID,\n\tfields: VecMap<String, String>,\n\tversion: u16\n}\nstruct DisplayCreated<phantom Ty0: key> has copy, drop {\n\tid: ID\n}\nstruct VersionUpdated<phantom Ty0: key> has copy, drop {\n\tid: ID,\n\tversion: u16,\n\tfields: VecMap<String, String>\n}\n\npublic new<Ty0: key>(Arg0: &Publisher, Arg1: &mut TxContext): Display<Ty0> {\nB0:\n\t0: MoveLoc[0](Arg0: &Publisher)\n\t1: Call is_authorized<Ty0>(&Publisher): bool\n\t2: BrFalse(4)\nB1:\n\t3: Branch(8)\nB2:\n\t4: MoveLoc[1](Arg1: &mut TxContext)\n\t5: Pop\n\t6: LdConst[0](U64: 00000000..)\n\t7: Abort\nB3:\n\t8: MoveLoc[1](Arg1: &mut TxContext)\n\t9: Call create_internal<Ty0>(&mut TxContext): Display<Ty0>\n\t10: Ret\n}\npublic new_with_fields<Ty0: key>(Arg0: &Publisher, Arg1: vector<String>, Arg2: vector<String>, Arg3: &mut TxContext): Display<Ty0> {\nB0:\n\t0: ImmBorrowLoc[1](Arg1: vector<String>)\n\t1: VecLen(16)\n\t2: StLoc[6](loc2: u64)\n\t3: CopyLoc[6](loc2: u64)\n\t4: ImmBorrowLoc[2](Arg2: vector<String>)\n\t5: VecLen(16)\n\t6: Eq\n\t7: BrFalse(9)\nB1:\n\t8: Branch(15)\nB2:\n\t9: MoveLoc[0](Arg0: &Publisher)\n\t10: Pop\n\t11: MoveLoc[3](Arg3: &mut TxContext)\n\t12: Pop\n\t13: LdConst[1](U64: 01000000..)\n\t14: Abort\nB3:\n\t15: LdU64(0)\n\t16: StLoc[5](loc1: u64)\n\t17: MoveLoc[0](Arg0: &Publisher)\n\t18: MoveLoc[3](Arg3: &mut TxContext)\n\t19: Call new<Ty0>(&Publisher, &mut TxContext): Display<Ty0>\n\t20: StLoc[4](loc0: Display<Ty0>)\nB4:\n\t21: CopyLoc[5](loc1: u64)\n\t22: CopyLoc[6](loc2: u64)\n\t23: Lt\n\t24: BrFalse(41)\nB5:\n\t25: Branch(26)\nB6:\n\t26: MutBorrowLoc[4](loc0: Display<Ty0>)\n\t27: ImmBorrowLoc[1](Arg1: vector<String>)\n\t28: CopyLoc[5](loc1: u64)\n\t29: VecImmBorrow(16)\n\t30: ReadRef\n\t31: ImmBorrowLoc[2](Arg2: vector<String>)\n\t32: CopyLoc[5](loc1: u64)\n\t33: VecImmBorrow(16)\n\t34: ReadRef\n\t35: Call add_internal<Ty0>(&mut Display<Ty0>, String, String)\n\t36: MoveLoc[5](loc1: u64)\n\t37: LdU64(1)\n\t38: Add\n\t39: StLoc[5](loc1: u64)\n\t40: Branch(21)\nB7:\n\t41: MoveLoc[4](loc0: Display<Ty0>)\n\t42: Ret\n}\nentry public create_and_keep<Ty0: key>(Arg0: &Publisher, Arg1: &mut TxContext) {\nB0:\n\t0: MoveLoc[0](Arg0: &Publisher)\n\t1: CopyLoc[1](Arg1: &mut TxContext)\n\t2: Call new<Ty0>(&Publisher, &mut TxContext): Display<Ty0>\n\t3: MoveLoc[1](Arg1: &mut TxContext)\n\t4: FreezeRef\n\t5: Call tx_context::sender(&TxContext): address\n\t6: Call transfer::public_transfer<Display<Ty0>>(Display<Ty0>, address)\n\t7: Ret\n}\nentry public update_version<Ty0: key>(Arg0: &mut Display<Ty0>) {\nL0:\tloc1: VecMap<String, String>\nB0:\n\t0: CopyLoc[0](Arg0: &mut Display<Ty0>)\n\t1: ImmBorrowFieldGeneric[0](Display.version: u16)\n\t2: ReadRef\n\t3: LdU16(1)\n\t4: Add\n\t5: CopyLoc[0](Arg0: &mut Display<Ty0>)\n\t6: MutBorrowFieldGeneric[0](Display.version: u16)\n\t7: WriteRef\n\t8: CopyLoc[0](Arg0: &mut Display<Ty0>)\n\t9: ImmBorrowFieldGeneric[0](Display.version: u16)\n\t10: ReadRef\n\t11: StLoc[1](loc0: u16)\n\t12: CopyLoc[0](Arg0: &mut Display<Ty0>)\n\t13: ImmBorrowFieldGeneric[1](Display.fields: VecMap<String, String>)\n\t14: ReadRef\n\t15: StLoc[2](loc1: VecMap<String, String>)\n\t16: MoveLoc[0](Arg0: &mut Display<Ty0>)\n\t17: ImmBorrowFieldGeneric[2](Display.id: UID)\n\t18: Call object::uid_to_inner(&UID): ID\n\t19: MoveLoc[1](loc0: u16)\n\t20: MoveLoc[2](loc1: VecMap<String, String>)\n\t21: PackGeneric[0](VersionUpdated<Ty0>)\n\t22: Call event::emit<VersionUpdated<Ty0>>(VersionUpdated<Ty0>)\n\t23: Ret\n}\nentry public add<Ty0: key>(Arg0: &mut Display<Ty0>, Arg1: String, Arg2: String) {\nB0:\n\t0: MoveLoc[0](Arg0: &mut Display<Ty0>)\n\t1: MoveLoc[1](Arg1: String)\n\t2: MoveLoc[2](Arg2: String)\n\t3: Call add_internal<Ty0>(&mut Display<Ty0>, String, String)\n\t4: Ret\n}\nentry public add_multiple<Ty0: key>(Arg0: &mut Display<Ty0>, Arg1: vector<String>, Arg2: vector<String>) {\nB0:\n\t0: ImmBorrowLoc[1](Arg1: vector<String>)\n\t1: VecLen(16)\n\t2: StLoc[4](loc1: u64)\n\t3: CopyLoc[4](loc1: u64)\n\t4: ImmBorrowLoc[2](Arg2: vector<String>)\n\t5: VecLen(16)\n\t6: Eq\n\t7: BrFalse(9)\nB1:\n\t8: Branch(13)\nB2:\n\t9: MoveLoc[0](Arg0: &mut Display<Ty0>)\n\t10: Pop\n\t11: LdConst[1](U64: 01000000..)\n\t12: Abort\nB3:\n\t13: LdU64(0)\n\t14: StLoc[3](loc0: u64)\nB4:\n\t15: CopyLoc[3](loc0: u64)\n\t16: CopyLoc[4](loc1: u64)\n\t17: Lt\n\t18: BrFalse(35)\nB5:\n\t19: Branch(20)\nB6:\n\t20: CopyLoc[0](Arg0: &mut Display<Ty0>)\n\t21: ImmBorrowLoc[1](Arg1: vector<String>)\n\t22: CopyLoc[3](loc0: u64)\n\t23: VecImmBorrow(16)\n\t24: ReadRef\n\t25: ImmBorrowLoc[2](Arg2: vector<String>)\n\t26: CopyLoc[3](loc0: u64)\n\t27: VecImmBorrow(16)\n\t28: ReadRef\n\t29: Call add_internal<Ty0>(&mut Display<Ty0>, String, String)\n\t30: MoveLoc[3](loc0: u64)\n\t31: LdU64(1)\n\t32: Add\n\t33: StLoc[3](loc0: u64)\n\t34: Branch(15)\nB7:\n\t35: MoveLoc[0](Arg0: &mut Display<Ty0>)\n\t36: Pop\n\t37: Ret\n}\nentry public edit<Ty0: key>(Arg0: &mut Display<Ty0>, Arg1: String, Arg2: String) {\nB0:\n\t0: CopyLoc[0](Arg0: &mut Display<Ty0>)\n\t1: MutBorrowFieldGeneric[1](Display.fields: VecMap<String, String>)\n\t2: ImmBorrowLoc[1](Arg1: String)\n\t3: Call vec_map::remove<String, String>(&mut VecMap<String, String>, &String): String * String\n\t4: Pop\n\t5: Pop\n\t6: MoveLoc[0](Arg0: &mut Display<Ty0>)\n\t7: MoveLoc[1](Arg1: String)\n\t8: MoveLoc[2](Arg2: String)\n\t9: Call add_internal<Ty0>(&mut Display<Ty0>, String, String)\n\t10: Ret\n}\nentry public remove<Ty0: key>(Arg0: &mut Display<Ty0>, Arg1: String) {\nB0:\n\t0: MoveLoc[0](Arg0: &mut Display<Ty0>)\n\t1: MutBorrowFieldGeneric[1](Display.fields: VecMap<String, String>)\n\t2: ImmBorrowLoc[1](Arg1: String)\n\t3: Call vec_map::remove<String, String>(&mut VecMap<String, String>, &String): String * String\n\t4: Pop\n\t5: Pop\n\t6: Ret\n}\npublic is_authorized<Ty0: key>(Arg0: &Publisher): bool {\nB0:\n\t0: MoveLoc[0](Arg0: &Publisher)\n\t1: Call package::from_package<Ty0>(&Publisher): bool\n\t2: Ret\n}\npublic version<Ty0: key>(Arg0: &Display<Ty0>): u16 {\nB0:\n\t0: MoveLoc[0](Arg0: &Display<Ty0>)\n\t1: ImmBorrowFieldGeneric[0](Display.version: u16)\n\t2: ReadRef\n\t3: Ret\n}\npublic fields<Ty0: key>(Arg0: &Display<Ty0>): &VecMap<String, String> {\nB0:\n\t0: MoveLoc[0](Arg0: &Display<Ty0>)\n\t1: ImmBorrowFieldGeneric[1](Display.fields: VecMap<String, String>)\n\t2: Ret\n}\ncreate_internal<Ty0: key>(Arg0: &mut TxContext): Display<Ty0> {\nB0:\n\t0: MoveLoc[0](Arg0: &mut TxContext)\n\t1: Call object::new(&mut TxContext): UID\n\t2: StLoc[1](loc0: UID)\n\t3: ImmBorrowLoc[1](loc0: UID)\n\t4: Call object::uid_to_inner(&UID): ID\n\t5: PackGeneric[1](DisplayCreated<Ty0>)\n\t6: Call event::emit<DisplayCreated<Ty0>>(DisplayCreated<Ty0>)\n\t7: MoveLoc[1](loc0: UID)\n\t8: Call vec_map::empty<String, String>(): VecMap<String, String>\n\t9: LdU16(0)\n\t10: PackGeneric[2](Display<Ty0>)\n\t11: Ret\n}\nadd_internal<Ty0: key>(Arg0: &mut Display<Ty0>, Arg1: String, Arg2: String) {\nB0:\n\t0: MoveLoc[0](Arg0: &mut Display<Ty0>)\n\t1: MutBorrowFieldGeneric[1](Display.fields: VecMap<String, String>)\n\t2: MoveLoc[1](Arg1: String)\n\t3: MoveLoc[2](Arg2: String)\n\t4: Call vec_map::insert<String, String>(&mut VecMap<String, String>, String, String)\n\t5: Ret\n}\n\nConstants [\n\t0 => u64: 0000000000000000\n\t1 => u64: 0100000000000000\n]\n}",
          "dynamic_field": "// Move bytecode v6\nmodule 2.dynamic_field {\nuse 0000000000000000000000000000000000000000000000000000000000000001::option;\nuse 0000000000000000000000000000000000000000000000000000000000000002::object;\n\n\nstruct Field<Ty0: copy + drop + store, Ty1: store> has key {\n\tid: UID,\n\tname: Ty0,\n\tvalue: Ty1\n}\n\npublic add<Ty0: copy + drop + store, Ty1: store>(Arg0: &mut UID, Arg1: Ty0, Arg2: Ty1) {\nB0:\n\t0: MoveLoc[0](Arg0: &mut UID)\n\t1: FreezeRef\n\t2: Call object::uid_to_address(&UID): address\n\t3: StLoc[5](loc2: address)\n\t4: CopyLoc[5](loc2: address)\n\t5: CopyLoc[1](Arg1: Ty0)\n\t6: Call hash_type_and_key<Ty0>(address, Ty0): address\n\t7: StLoc[4](loc1: address)\n\t8: CopyLoc[5](loc2: address)\n\t9: CopyLoc[4](loc1: address)\n\t10: Call has_child_object(address, address): bool\n\t11: Not\n\t12: BrFalse(14)\nB1:\n\t13: Branch(16)\nB2:\n\t14: LdConst[0](U64: 00000000..)\n\t15: Abort\nB3:\n\t16: MoveLoc[4](loc1: address)\n\t17: Call object::new_uid_from_hash(address): UID\n\t18: MoveLoc[1](Arg1: Ty0)\n\t19: MoveLoc[2](Arg2: Ty1)\n\t20: PackGeneric[0](Field<Ty0, Ty1>)\n\t21: StLoc[3](loc0: Field<Ty0, Ty1>)\n\t22: MoveLoc[5](loc2: address)\n\t23: MoveLoc[3](loc0: Field<Ty0, Ty1>)\n\t24: Call add_child_object<Field<Ty0, Ty1>>(address, Field<Ty0, Ty1>)\n\t25: Ret\n}\npublic borrow<Ty0: copy + drop + store, Ty1: store>(Arg0: &UID, Arg1: Ty0): &Ty1 {\nB0:\n\t0: CopyLoc[0](Arg0: &UID)\n\t1: Call object::uid_to_address(&UID): address\n\t2: MoveLoc[1](Arg1: Ty0)\n\t3: Call hash_type_and_key<Ty0>(address, Ty0): address\n\t4: StLoc[2](loc0: address)\n\t5: MoveLoc[0](Arg0: &UID)\n\t6: MoveLoc[2](loc0: address)\n\t7: Call borrow_child_object<Field<Ty0, Ty1>>(&UID, address): &Field<Ty0, Ty1>\n\t8: ImmBorrowFieldGeneric[0](Field.value: Ty1)\n\t9: Ret\n}\npublic borrow_mut<Ty0: copy + drop + store, Ty1: store>(Arg0: &mut UID, Arg1: Ty0): &mut Ty1 {\nB0:\n\t0: CopyLoc[0](Arg0: &mut UID)\n\t1: FreezeRef\n\t2: Call object::uid_to_address(&UID): address\n\t3: MoveLoc[1](Arg1: Ty0)\n\t4: Call hash_type_and_key<Ty0>(address, Ty0): address\n\t5: StLoc[2](loc0: address)\n\t6: MoveLoc[0](Arg0: &mut UID)\n\t7: MoveLoc[2](loc0: address)\n\t8: Call borrow_child_object_mut<Field<Ty0, Ty1>>(&mut UID, address): &mut Field<Ty0, Ty1>\n\t9: MutBorrowFieldGeneric[0](Field.value: Ty1)\n\t10: Ret\n}\npublic remove<Ty0: copy + drop + store, Ty1: store>(Arg0: &mut UID, Arg1: Ty0): Ty1 {\nL0:\tloc2: Ty1\nB0:\n\t0: MoveLoc[0](Arg0: &mut UID)\n\t1: FreezeRef\n\t2: Call object::uid_to_address(&UID): address\n\t3: StLoc[3](loc1: address)\n\t4: CopyLoc[3](loc1: address)\n\t5: MoveLoc[1](Arg1: Ty0)\n\t6: Call hash_type_and_key<Ty0>(address, Ty0): address\n\t7: StLoc[2](loc0: address)\n\t8: MoveLoc[3](loc1: address)\n\t9: MoveLoc[2](loc0: address)\n\t10: Call remove_child_object<Field<Ty0, Ty1>>(address, address): Field<Ty0, Ty1>\n\t11: UnpackGeneric[0](Field<Ty0, Ty1>)\n\t12: StLoc[4](loc2: Ty1)\n\t13: Pop\n\t14: Call object::delete(UID)\n\t15: MoveLoc[4](loc2: Ty1)\n\t16: Ret\n}\npublic exists_<Ty0: copy + drop + store>(Arg0: &UID, Arg1: Ty0): bool {\nB0:\n\t0: MoveLoc[0](Arg0: &UID)\n\t1: Call object::uid_to_address(&UID): address\n\t2: StLoc[3](loc1: address)\n\t3: CopyLoc[3](loc1: address)\n\t4: MoveLoc[1](Arg1: Ty0)\n\t5: Call hash_type_and_key<Ty0>(address, Ty0): address\n\t6: StLoc[2](loc0: address)\n\t7: MoveLoc[3](loc1: address)\n\t8: MoveLoc[2](loc0: address)\n\t9: Call has_child_object(address, address): bool\n\t10: Ret\n}\npublic remove_if_exists<Ty0: copy + drop + store, Ty1: store>(Arg0: &mut UID, Arg1: Ty0): Option<Ty1> {\nB0:\n\t0: CopyLoc[0](Arg0: &mut UID)\n\t1: CopyLoc[1](Arg1: Ty0)\n\t2: StLoc[2](loc0: Ty0)\n\t3: FreezeRef\n\t4: MoveLoc[2](loc0: Ty0)\n\t5: Call exists_<Ty0>(&UID, Ty0): bool\n\t6: BrFalse(13)\nB1:\n\t7: MoveLoc[0](Arg0: &mut UID)\n\t8: MoveLoc[1](Arg1: Ty0)\n\t9: Call remove<Ty0, Ty1>(&mut UID, Ty0): Ty1\n\t10: Call option::some<Ty1>(Ty1): Option<Ty1>\n\t11: StLoc[3](loc1: Option<Ty1>)\n\t12: Branch(17)\nB2:\n\t13: MoveLoc[0](Arg0: &mut UID)\n\t14: Pop\n\t15: Call option::none<Ty1>(): Option<Ty1>\n\t16: StLoc[3](loc1: Option<Ty1>)\nB3:\n\t17: MoveLoc[3](loc1: Option<Ty1>)\n\t18: Ret\n}\npublic exists_with_type<Ty0: copy + drop + store, Ty1: store>(Arg0: &UID, Arg1: Ty0): bool {\nB0:\n\t0: MoveLoc[0](Arg0: &UID)\n\t1: Call object::uid_to_address(&UID): address\n\t2: StLoc[3](loc1: address)\n\t3: CopyLoc[3](loc1: address)\n\t4: MoveLoc[1](Arg1: Ty0)\n\t5: Call hash_type_and_key<Ty0>(address, Ty0): address\n\t6: StLoc[2](loc0: address)\n\t7: MoveLoc[3](loc1: address)\n\t8: MoveLoc[2](loc0: address)\n\t9: Call has_child_object_with_ty<Field<Ty0, Ty1>>(address, address): bool\n\t10: Ret\n}\npublic(friend) field_info<Ty0: copy + drop + store>(Arg0: &UID, Arg1: Ty0): &UID * address {\nL0:\tloc2: &UID\nL1:\tloc3: &ID\nB0:\n\t0: CopyLoc[0](Arg0: &UID)\n\t1: Call object::uid_to_address(&UID): address\n\t2: MoveLoc[1](Arg1: Ty0)\n\t3: Call hash_type_and_key<Ty0>(address, Ty0): address\n\t4: StLoc[3](loc1: address)\n\t5: MoveLoc[0](Arg0: &UID)\n\t6: MoveLoc[3](loc1: address)\n\t7: Call borrow_child_object<Field<Ty0, ID>>(&UID, address): &Field<Ty0, ID>\n\t8: StLoc[2](loc0: &Field<Ty0, ID>)\n\t9: CopyLoc[2](loc0: &Field<Ty0, ID>)\n\t10: ImmBorrowFieldGeneric[1](Field.id: UID)\n\t11: StLoc[4](loc2: &UID)\n\t12: CopyLoc[2](loc0: &Field<Ty0, ID>)\n\t13: ImmBorrowFieldGeneric[2](Field.name: Ty0)\n\t14: Pop\n\t15: MoveLoc[2](loc0: &Field<Ty0, ID>)\n\t16: ImmBorrowFieldGeneric[3](Field.value: Ty1)\n\t17: StLoc[5](loc3: &ID)\n\t18: MoveLoc[4](loc2: &UID)\n\t19: MoveLoc[5](loc3: &ID)\n\t20: Call object::id_to_address(&ID): address\n\t21: Ret\n}\npublic(friend) field_info_mut<Ty0: copy + drop + store>(Arg0: &mut UID, Arg1: Ty0): &mut UID * address {\nL0:\tloc2: &mut UID\nL1:\tloc3: &mut ID\nB0:\n\t0: CopyLoc[0](Arg0: &mut UID)\n\t1: FreezeRef\n\t2: Call object::uid_to_address(&UID): address\n\t3: MoveLoc[1](Arg1: Ty0)\n\t4: Call hash_type_and_key<Ty0>(address, Ty0): address\n\t5: StLoc[3](loc1: address)\n\t6: MoveLoc[0](Arg0: &mut UID)\n\t7: MoveLoc[3](loc1: address)\n\t8: Call borrow_child_object_mut<Field<Ty0, ID>>(&mut UID, address): &mut Field<Ty0, ID>\n\t9: StLoc[2](loc0: &mut Field<Ty0, ID>)\n\t10: CopyLoc[2](loc0: &mut Field<Ty0, ID>)\n\t11: MutBorrowFieldGeneric[1](Field.id: UID)\n\t12: StLoc[4](loc2: &mut UID)\n\t13: CopyLoc[2](loc0: &mut Field<Ty0, ID>)\n\t14: MutBorrowFieldGeneric[2](Field.name: Ty0)\n\t15: Pop\n\t16: MoveLoc[2](loc0: &mut Field<Ty0, ID>)\n\t17: MutBorrowFieldGeneric[3](Field.value: Ty1)\n\t18: StLoc[5](loc3: &mut ID)\n\t19: MoveLoc[4](loc2: &mut UID)\n\t20: MoveLoc[5](loc3: &mut ID)\n\t21: FreezeRef\n\t22: Call object::id_to_address(&ID): address\n\t23: Ret\n}\nnative public(friend) hash_type_and_key<Ty0: copy + drop + store>(Arg0: address, Arg1: Ty0): address\nnative public(friend) add_child_object<Ty0: key>(Arg0: address, Arg1: Ty0)\nnative public(friend) borrow_child_object<Ty0: key>(Arg0: &UID, Arg1: address): &Ty0\nnative public(friend) borrow_child_object_mut<Ty0: key>(Arg0: &mut UID, Arg1: address): &mut Ty0\nnative public(friend) remove_child_object<Ty0: key>(Arg0: address, Arg1: address): Ty0\nnative public(friend) has_child_object(Arg0: address, Arg1: address): bool\nnative public(friend) has_child_object_with_ty<Ty0: key>(Arg0: address, Arg1: address): bool\n\nConstants [\n\t0 => u64: 0000000000000000\n\t1 => u64: 0100000000000000\n\t2 => u64: 0200000000000000\n\t3 => u64: 0300000000000000\n]\n}",
          "dynamic_object_field": "// Move bytecode v6\nmodule 2.dynamic_object_field {\nuse 0000000000000000000000000000000000000000000000000000000000000001::option;\nuse 0000000000000000000000000000000000000000000000000000000000000002::dynamic_field;\nuse 0000000000000000000000000000000000000000000000000000000000000002::object;\n\n\nstruct Wrapper<Ty0> has copy, drop, store {\n\tname: Ty0\n}\n\npublic add<Ty0: copy + drop + store, Ty1: store + key>(Arg0: &mut UID, Arg1: Ty0, Arg2: Ty1) {\nB0:\n\t0: MoveLoc[1](Arg1: Ty0)\n\t1: PackGeneric[0](Wrapper<Ty0>)\n\t2: StLoc[5](loc2: Wrapper<Ty0>)\n\t3: ImmBorrowLoc[2](Arg2: Ty1)\n\t4: Call object::id<Ty1>(&Ty1): ID\n\t5: StLoc[4](loc1: ID)\n\t6: CopyLoc[0](Arg0: &mut UID)\n\t7: CopyLoc[5](loc2: Wrapper<Ty0>)\n\t8: MoveLoc[4](loc1: ID)\n\t9: Call dynamic_field::add<Wrapper<Ty0>, ID>(&mut UID, Wrapper<Ty0>, ID)\n\t10: MoveLoc[0](Arg0: &mut UID)\n\t11: MoveLoc[5](loc2: Wrapper<Ty0>)\n\t12: StLoc[3](loc0: Wrapper<Ty0>)\n\t13: FreezeRef\n\t14: MoveLoc[3](loc0: Wrapper<Ty0>)\n\t15: Call dynamic_field::field_info<Wrapper<Ty0>>(&UID, Wrapper<Ty0>): &UID * address\n\t16: Pop\n\t17: Call object::uid_to_address(&UID): address\n\t18: MoveLoc[2](Arg2: Ty1)\n\t19: Call dynamic_field::add_child_object<Ty1>(address, Ty1)\n\t20: Ret\n}\npublic borrow<Ty0: copy + drop + store, Ty1: store + key>(Arg0: &UID, Arg1: Ty0): &Ty1 {\nB0:\n\t0: MoveLoc[1](Arg1: Ty0)\n\t1: PackGeneric[0](Wrapper<Ty0>)\n\t2: StLoc[2](loc0: Wrapper<Ty0>)\n\t3: MoveLoc[0](Arg0: &UID)\n\t4: MoveLoc[2](loc0: Wrapper<Ty0>)\n\t5: Call dynamic_field::field_info<Wrapper<Ty0>>(&UID, Wrapper<Ty0>): &UID * address\n\t6: Call dynamic_field::borrow_child_object<Ty1>(&UID, address): &Ty1\n\t7: Ret\n}\npublic borrow_mut<Ty0: copy + drop + store, Ty1: store + key>(Arg0: &mut UID, Arg1: Ty0): &mut Ty1 {\nB0:\n\t0: MoveLoc[1](Arg1: Ty0)\n\t1: PackGeneric[0](Wrapper<Ty0>)\n\t2: StLoc[2](loc0: Wrapper<Ty0>)\n\t3: MoveLoc[0](Arg0: &mut UID)\n\t4: MoveLoc[2](loc0: Wrapper<Ty0>)\n\t5: Call dynamic_field::field_info_mut<Wrapper<Ty0>>(&mut UID, Wrapper<Ty0>): &mut UID * address\n\t6: Call dynamic_field::borrow_child_object_mut<Ty1>(&mut UID, address): &mut Ty1\n\t7: Ret\n}\npublic remove<Ty0: copy + drop + store, Ty1: store + key>(Arg0: &mut UID, Arg1: Ty0): Ty1 {\nL0:\tloc2: Ty1\nL1:\tloc3: address\nB0:\n\t0: MoveLoc[1](Arg1: Ty0)\n\t1: PackGeneric[0](Wrapper<Ty0>)\n\t2: StLoc[3](loc1: Wrapper<Ty0>)\n\t3: CopyLoc[0](Arg0: &mut UID)\n\t4: CopyLoc[3](loc1: Wrapper<Ty0>)\n\t5: StLoc[2](loc0: Wrapper<Ty0>)\n\t6: FreezeRef\n\t7: MoveLoc[2](loc0: Wrapper<Ty0>)\n\t8: Call dynamic_field::field_info<Wrapper<Ty0>>(&UID, Wrapper<Ty0>): &UID * address\n\t9: StLoc[5](loc3: address)\n\t10: Call object::uid_to_address(&UID): address\n\t11: MoveLoc[5](loc3: address)\n\t12: Call dynamic_field::remove_child_object<Ty1>(address, address): Ty1\n\t13: StLoc[4](loc2: Ty1)\n\t14: MoveLoc[0](Arg0: &mut UID)\n\t15: MoveLoc[3](loc1: Wrapper<Ty0>)\n\t16: Call dynamic_field::remove<Wrapper<Ty0>, ID>(&mut UID, Wrapper<Ty0>): ID\n\t17: Pop\n\t18: MoveLoc[4](loc2: Ty1)\n\t19: Ret\n}\npublic exists_<Ty0: copy + drop + store>(Arg0: &UID, Arg1: Ty0): bool {\nB0:\n\t0: MoveLoc[1](Arg1: Ty0)\n\t1: PackGeneric[0](Wrapper<Ty0>)\n\t2: StLoc[2](loc0: Wrapper<Ty0>)\n\t3: MoveLoc[0](Arg0: &UID)\n\t4: MoveLoc[2](loc0: Wrapper<Ty0>)\n\t5: Call dynamic_field::exists_with_type<Wrapper<Ty0>, ID>(&UID, Wrapper<Ty0>): bool\n\t6: Ret\n}\npublic exists_with_type<Ty0: copy + drop + store, Ty1: store + key>(Arg0: &UID, Arg1: Ty0): bool {\nB0:\n\t0: MoveLoc[1](Arg1: Ty0)\n\t1: PackGeneric[0](Wrapper<Ty0>)\n\t2: StLoc[2](loc0: Wrapper<Ty0>)\n\t3: CopyLoc[0](Arg0: &UID)\n\t4: CopyLoc[2](loc0: Wrapper<Ty0>)\n\t5: Call dynamic_field::exists_with_type<Wrapper<Ty0>, ID>(&UID, Wrapper<Ty0>): bool\n\t6: Not\n\t7: BrFalse(12)\nB1:\n\t8: MoveLoc[0](Arg0: &UID)\n\t9: Pop\n\t10: LdFalse\n\t11: Ret\nB2:\n\t12: MoveLoc[0](Arg0: &UID)\n\t13: MoveLoc[2](loc0: Wrapper<Ty0>)\n\t14: Call dynamic_field::field_info<Wrapper<Ty0>>(&UID, Wrapper<Ty0>): &UID * address\n\t15: StLoc[3](loc1: address)\n\t16: Call object::uid_to_address(&UID): address\n\t17: MoveLoc[3](loc1: address)\n\t18: Call dynamic_field::has_child_object_with_ty<Ty1>(address, address): bool\n\t19: Ret\n}\npublic id<Ty0: copy + drop + store>(Arg0: &UID, Arg1: Ty0): Option<ID> {\nB0:\n\t0: MoveLoc[1](Arg1: Ty0)\n\t1: PackGeneric[0](Wrapper<Ty0>)\n\t2: StLoc[2](loc0: Wrapper<Ty0>)\n\t3: CopyLoc[0](Arg0: &UID)\n\t4: CopyLoc[2](loc0: Wrapper<Ty0>)\n\t5: Call dynamic_field::exists_with_type<Wrapper<Ty0>, ID>(&UID, Wrapper<Ty0>): bool\n\t6: Not\n\t7: BrFalse(12)\nB1:\n\t8: MoveLoc[0](Arg0: &UID)\n\t9: Pop\n\t10: Call option::none<ID>(): Option<ID>\n\t11: Ret\nB2:\n\t12: MoveLoc[0](Arg0: &UID)\n\t13: MoveLoc[2](loc0: Wrapper<Ty0>)\n\t14: Call dynamic_field::field_info<Wrapper<Ty0>>(&UID, Wrapper<Ty0>): &UID * address\n\t15: StLoc[3](loc1: address)\n\t16: Pop\n\t17: MoveLoc[3](loc1: address)\n\t18: Call object::id_from_address(address): ID\n\t19: Call option::some<ID>(ID): Option<ID>\n\t20: Ret\n}\n}",
          "ecdsa_k1": "// Move bytecode v6\nmodule 2.ecdsa_k1 {\n\n\nnative public secp256k1_ecrecover(Arg0: &vector<u8>, Arg1: &vector<u8>, Arg2: u8): vector<u8>\nnative public decompress_pubkey(Arg0: &vector<u8>): vector<u8>\nnative public secp256k1_verify(Arg0: &vector<u8>, Arg1: &vector<u8>, Arg2: &vector<u8>, Arg3: u8): bool\n\nConstants [\n\t0 => u64: 0000000000000000\n\t1 => u64: 0100000000000000\n\t2 => u64: 0200000000000000\n\t3 => u8: 00\n\t4 => u8: 01\n]\n}",
          "ecdsa_r1": "// Move bytecode v6\nmodule 2.ecdsa_r1 {\n\n\nnative public secp256r1_ecrecover(Arg0: &vector<u8>, Arg1: &vector<u8>, Arg2: u8): vector<u8>\nnative public secp256r1_verify(Arg0: &vector<u8>, Arg1: &vector<u8>, Arg2: &vector<u8>, Arg3: u8): bool\n\nConstants [\n\t0 => u64: 0000000000000000\n\t1 => u64: 0100000000000000\n\t2 => u8: 00\n\t3 => u8: 01\n]\n}",
          "ecvrf": "// Move bytecode v6\nmodule 2.ecvrf {\n\n\nnative public ecvrf_verify(Arg0: &vector<u8>, Arg1: &vector<u8>, Arg2: &vector<u8>, Arg3: &vector<u8>): bool\n\nConstants [\n\t0 => u64: 0100000000000000\n\t1 => u64: 0200000000000000\n\t2 => u64: 0300000000000000\n]\n}",
          "ed25519": "// Move bytecode v6\nmodule 2.ed25519 {\n\n\nnative public ed25519_verify(Arg0: &vector<u8>, Arg1: &vector<u8>, Arg2: &vector<u8>): bool\n}",
          "event": "// Move bytecode v6\nmodule 2.event {\n\n\nnative public emit<Ty0: copy + drop>(Arg0: Ty0)\n}",
          "groth16": "// Move bytecode v6\nmodule 2.groth16 {\nstruct Curve has copy, drop, store {\n\tid: u8\n}\nstruct PreparedVerifyingKey has copy, drop, store {\n\tvk_gamma_abc_g1_bytes: vector<u8>,\n\talpha_g1_beta_g2_bytes: vector<u8>,\n\tgamma_g2_neg_pc_bytes: vector<u8>,\n\tdelta_g2_neg_pc_bytes: vector<u8>\n}\nstruct PublicProofInputs has copy, drop, store {\n\tbytes: vector<u8>\n}\nstruct ProofPoints has copy, drop, store {\n\tbytes: vector<u8>\n}\n\npublic bls12381(): Curve {\nB0:\n\t0: LdU8(0)\n\t1: Pack[0](Curve)\n\t2: Ret\n}\npublic bn254(): Curve {\nB0:\n\t0: LdU8(1)\n\t1: Pack[0](Curve)\n\t2: Ret\n}\npublic pvk_from_bytes(Arg0: vector<u8>, Arg1: vector<u8>, Arg2: vector<u8>, Arg3: vector<u8>): PreparedVerifyingKey {\nB0:\n\t0: MoveLoc[0](Arg0: vector<u8>)\n\t1: MoveLoc[1](Arg1: vector<u8>)\n\t2: MoveLoc[2](Arg2: vector<u8>)\n\t3: MoveLoc[3](Arg3: vector<u8>)\n\t4: Pack[1](PreparedVerifyingKey)\n\t5: Ret\n}\npublic pvk_to_bytes(Arg0: PreparedVerifyingKey): vector<vector<u8>> {\nB0:\n\t0: VecPack(5, 0)\n\t1: StLoc[1](loc0: vector<vector<u8>>)\n\t2: MutBorrowLoc[1](loc0: vector<vector<u8>>)\n\t3: ImmBorrowLoc[0](Arg0: PreparedVerifyingKey)\n\t4: ImmBorrowField[0](PreparedVerifyingKey.vk_gamma_abc_g1_bytes: vector<u8>)\n\t5: ReadRef\n\t6: VecPushBack(5)\n\t7: MutBorrowLoc[1](loc0: vector<vector<u8>>)\n\t8: ImmBorrowLoc[0](Arg0: PreparedVerifyingKey)\n\t9: ImmBorrowField[1](PreparedVerifyingKey.alpha_g1_beta_g2_bytes: vector<u8>)\n\t10: ReadRef\n\t11: VecPushBack(5)\n\t12: MutBorrowLoc[1](loc0: vector<vector<u8>>)\n\t13: ImmBorrowLoc[0](Arg0: PreparedVerifyingKey)\n\t14: ImmBorrowField[2](PreparedVerifyingKey.gamma_g2_neg_pc_bytes: vector<u8>)\n\t15: ReadRef\n\t16: VecPushBack(5)\n\t17: MutBorrowLoc[1](loc0: vector<vector<u8>>)\n\t18: ImmBorrowLoc[0](Arg0: PreparedVerifyingKey)\n\t19: ImmBorrowField[3](PreparedVerifyingKey.delta_g2_neg_pc_bytes: vector<u8>)\n\t20: ReadRef\n\t21: VecPushBack(5)\n\t22: MoveLoc[1](loc0: vector<vector<u8>>)\n\t23: Ret\n}\npublic public_proof_inputs_from_bytes(Arg0: vector<u8>): PublicProofInputs {\nB0:\n\t0: MoveLoc[0](Arg0: vector<u8>)\n\t1: Pack[2](PublicProofInputs)\n\t2: Ret\n}\npublic proof_points_from_bytes(Arg0: vector<u8>): ProofPoints {\nB0:\n\t0: MoveLoc[0](Arg0: vector<u8>)\n\t1: Pack[3](ProofPoints)\n\t2: Ret\n}\npublic prepare_verifying_key(Arg0: &Curve, Arg1: &vector<u8>): PreparedVerifyingKey {\nB0:\n\t0: MoveLoc[0](Arg0: &Curve)\n\t1: ImmBorrowField[4](Curve.id: u8)\n\t2: ReadRef\n\t3: MoveLoc[1](Arg1: &vector<u8>)\n\t4: Call prepare_verifying_key_internal(u8, &vector<u8>): PreparedVerifyingKey\n\t5: Ret\n}\nnative prepare_verifying_key_internal(Arg0: u8, Arg1: &vector<u8>): PreparedVerifyingKey\npublic verify_groth16_proof(Arg0: &Curve, Arg1: &PreparedVerifyingKey, Arg2: &PublicProofInputs, Arg3: &ProofPoints): bool {\nB0:\n\t0: MoveLoc[0](Arg0: &Curve)\n\t1: ImmBorrowField[4](Curve.id: u8)\n\t2: ReadRef\n\t3: CopyLoc[1](Arg1: &PreparedVerifyingKey)\n\t4: ImmBorrowField[0](PreparedVerifyingKey.vk_gamma_abc_g1_bytes: vector<u8>)\n\t5: CopyLoc[1](Arg1: &PreparedVerifyingKey)\n\t6: ImmBorrowField[1](PreparedVerifyingKey.alpha_g1_beta_g2_bytes: vector<u8>)\n\t7: CopyLoc[1](Arg1: &PreparedVerifyingKey)\n\t8: ImmBorrowField[2](PreparedVerifyingKey.gamma_g2_neg_pc_bytes: vector<u8>)\n\t9: MoveLoc[1](Arg1: &PreparedVerifyingKey)\n\t10: ImmBorrowField[3](PreparedVerifyingKey.delta_g2_neg_pc_bytes: vector<u8>)\n\t11: MoveLoc[2](Arg2: &PublicProofInputs)\n\t12: ImmBorrowField[5](PublicProofInputs.bytes: vector<u8>)\n\t13: MoveLoc[3](Arg3: &ProofPoints)\n\t14: ImmBorrowField[6](ProofPoints.bytes: vector<u8>)\n\t15: Call verify_groth16_proof_internal(u8, &vector<u8>, &vector<u8>, &vector<u8>, &vector<u8>, &vector<u8>, &vector<u8>): bool\n\t16: Ret\n}\nnative verify_groth16_proof_internal(Arg0: u8, Arg1: &vector<u8>, Arg2: &vector<u8>, Arg3: &vector<u8>, Arg4: &vector<u8>, Arg5: &vector<u8>, Arg6: &vector<u8>): bool\n\nConstants [\n\t0 => u64: 0000000000000000\n\t1 => u64: 0100000000000000\n\t2 => u64: 0200000000000000\n]\n}",
          "hash": "// Move bytecode v6\nmodule 2.hash {\n\n\nnative public blake2b256(Arg0: &vector<u8>): vector<u8>\nnative public keccak256(Arg0: &vector<u8>): vector<u8>\n}",
          "hex": "// Move bytecode v6\nmodule 2.hex {\nuse 0000000000000000000000000000000000000000000000000000000000000001::vector;\n\n\n\n\npublic encode(Arg0: vector<u8>): vector<u8> {\nL0:\tloc1: &mut vector<u8>\nL1:\tloc2: u64\nL2:\tloc3: u64\nL3:\tloc4: vector<u8>\nB0:\n\t0: LdU64(0)\n\t1: LdConst[3](Vector(U8): 00)\n\t2: ImmBorrowLoc[0](Arg0: vector<u8>)\n\t3: VecLen(1)\n\t4: StLoc[4](loc3: u64)\n\t5: StLoc[5](loc4: vector<u8>)\n\t6: StLoc[3](loc2: u64)\nB1:\n\t7: CopyLoc[3](loc2: u64)\n\t8: CopyLoc[4](loc3: u64)\n\t9: Lt\n\t10: BrFalse(31)\nB2:\n\t11: Branch(12)\nB3:\n\t12: MutBorrowLoc[5](loc4: vector<u8>)\n\t13: StLoc[2](loc1: &mut vector<u8>)\n\t14: LdConst[2](Vector(Vector(U8)): 80020230..)\n\t15: StLoc[1](loc0: vector<vector<u8>>)\n\t16: MoveLoc[2](loc1: &mut vector<u8>)\n\t17: ImmBorrowLoc[1](loc0: vector<vector<u8>>)\n\t18: ImmBorrowLoc[0](Arg0: vector<u8>)\n\t19: CopyLoc[3](loc2: u64)\n\t20: VecImmBorrow(1)\n\t21: ReadRef\n\t22: CastU64\n\t23: VecImmBorrow(0)\n\t24: ReadRef\n\t25: Call vector::append<u8>(&mut vector<u8>, vector<u8>)\n\t26: MoveLoc[3](loc2: u64)\n\t27: LdU64(1)\n\t28: Add\n\t29: StLoc[3](loc2: u64)\n\t30: Branch(7)\nB4:\n\t31: MoveLoc[5](loc4: vector<u8>)\n\t32: Ret\n}\npublic decode(Arg0: vector<u8>): vector<u8> {\nL0:\tloc1: u64\nL1:\tloc2: u64\nL2:\tloc3: vector<u8>\nB0:\n\t0: LdU64(0)\n\t1: LdConst[3](Vector(U8): 00)\n\t2: ImmBorrowLoc[0](Arg0: vector<u8>)\n\t3: VecLen(1)\n\t4: StLoc[3](loc2: u64)\n\t5: StLoc[4](loc3: vector<u8>)\n\t6: StLoc[2](loc1: u64)\n\t7: CopyLoc[3](loc2: u64)\n\t8: LdU64(2)\n\t9: Mod\n\t10: LdU64(0)\n\t11: Eq\n\t12: BrFalse(14)\nB1:\n\t13: Branch(16)\nB2:\n\t14: LdConst[0](U64: 00000000..)\n\t15: Abort\nB3:\n\t16: CopyLoc[2](loc1: u64)\n\t17: CopyLoc[3](loc2: u64)\n\t18: Lt\n\t19: BrFalse(45)\nB4:\n\t20: Branch(21)\nB5:\n\t21: ImmBorrowLoc[0](Arg0: vector<u8>)\n\t22: CopyLoc[2](loc1: u64)\n\t23: VecImmBorrow(1)\n\t24: ReadRef\n\t25: Call decode_byte(u8): u8\n\t26: LdU8(16)\n\t27: Mul\n\t28: ImmBorrowLoc[0](Arg0: vector<u8>)\n\t29: CopyLoc[2](loc1: u64)\n\t30: LdU64(1)\n\t31: Add\n\t32: VecImmBorrow(1)\n\t33: ReadRef\n\t34: Call decode_byte(u8): u8\n\t35: Add\n\t36: StLoc[1](loc0: u8)\n\t37: MutBorrowLoc[4](loc3: vector<u8>)\n\t38: MoveLoc[1](loc0: u8)\n\t39: VecPushBack(1)\n\t40: MoveLoc[2](loc1: u64)\n\t41: LdU64(2)\n\t42: Add\n\t43: StLoc[2](loc1: u64)\n\t44: Branch(16)\nB6:\n\t45: MoveLoc[4](loc3: vector<u8>)\n\t46: Ret\n}\ndecode_byte(Arg0: u8): u8 {\nL0:\tloc1: bool\nL1:\tloc2: bool\nL2:\tloc3: u8\nL3:\tloc4: u8\nB0:\n\t0: LdU8(48)\n\t1: CopyLoc[0](Arg0: u8)\n\t2: Le\n\t3: BrFalse(9)\nB1:\n\t4: CopyLoc[0](Arg0: u8)\n\t5: LdU8(58)\n\t6: Lt\n\t7: StLoc[1](loc0: bool)\n\t8: Branch(11)\nB2:\n\t9: LdFalse\n\t10: StLoc[1](loc0: bool)\nB3:\n\t11: MoveLoc[1](loc0: bool)\n\t12: BrFalse(18)\nB4:\n\t13: MoveLoc[0](Arg0: u8)\n\t14: LdU8(48)\n\t15: Sub\n\t16: StLoc[5](loc4: u8)\n\t17: Branch(62)\nB5:\n\t18: LdU8(65)\n\t19: CopyLoc[0](Arg0: u8)\n\t20: Le\n\t21: BrFalse(27)\nB6:\n\t22: CopyLoc[0](Arg0: u8)\n\t23: LdU8(71)\n\t24: Lt\n\t25: StLoc[2](loc1: bool)\n\t26: Branch(29)\nB7:\n\t27: LdFalse\n\t28: StLoc[2](loc1: bool)\nB8:\n\t29: MoveLoc[2](loc1: bool)\n\t30: BrFalse(38)\nB9:\n\t31: LdU8(10)\n\t32: MoveLoc[0](Arg0: u8)\n\t33: Add\n\t34: LdU8(65)\n\t35: Sub\n\t36: StLoc[4](loc3: u8)\n\t37: Branch(60)\nB10:\n\t38: LdU8(97)\n\t39: CopyLoc[0](Arg0: u8)\n\t40: Le\n\t41: BrFalse(47)\nB11:\n\t42: CopyLoc[0](Arg0: u8)\n\t43: LdU8(103)\n\t44: Lt\n\t45: StLoc[3](loc2: bool)\n\t46: Branch(49)\nB12:\n\t47: LdFalse\n\t48: StLoc[3](loc2: bool)\nB13:\n\t49: MoveLoc[3](loc2: bool)\n\t50: BrFalse(52)\nB14:\n\t51: Branch(54)\nB15:\n\t52: LdConst[1](U64: 01000000..)\n\t53: Abort\nB16:\n\t54: LdU8(10)\n\t55: MoveLoc[0](Arg0: u8)\n\t56: Add\n\t57: LdU8(97)\n\t58: Sub\n\t59: StLoc[4](loc3: u8)\nB17:\n\t60: MoveLoc[4](loc3: u8)\n\t61: StLoc[5](loc4: u8)\nB18:\n\t62: MoveLoc[5](loc4: u8)\n\t63: Ret\n}\n\nConstants [\n\t0 => u64: 0000000000000000\n\t1 => u64: 0100000000000000\n\t2 => vector<vector<u8>>: 8002023030023031023032023033023034023035023036023037023038023039023061023062023063023064023065023066023130023131023132023133023134023135023136023137023138023139023161023162023163023164023165023166023230023231023232023233023234023235023236023237023238023239023261023262023263023264023265023266023330023331023332023333023334023335023336023337023338023339023361023362023363023364023365023366023430023431023432023433023434023435023436023437023438023439023461023462023463023464023465023466023530023531023532023533023534023535023536023537023538023539023561023562023563023564023565023566023630023631023632023633023634023635023636023637023638023639023661023662023663023664023665023666023730023731023732023733023734023735023736023737023738023739023761023762023763023764023765023766023830023831023832023833023834023835023836023837023838023839023861023862023863023864023865023866023930023931023932023933023934023935023936023937023938023939023961023962023963023964023965023966026130026131026132026133026134026135026136026137026138026139026161026162026163026164026165026166026230026231026232026233026234026235026236026237026238026239026261026262026263026264026265026266026330026331026332026333026334026335026336026337026338026339026361026362026363026364026365026366026430026431026432026433026434026435026436026437026438026439026461026462026463026464026465026466026530026531026532026533026534026535026536026537026538026539026561026562026563026564026565026566026630026631026632026633026634026635026636026637026638026639026661026662026663026664026665026666\n\t3 => vector<u8>: \"\" // interpreted as UTF8 string\n]\n}",
          "hmac": "// Move bytecode v6\nmodule 2.hmac {\n\n\nnative public hmac_sha3_256(Arg0: &vector<u8>, Arg1: &vector<u8>): vector<u8>\n}",
          "kiosk": "// Move bytecode v6\nmodule 2.kiosk {\nuse 0000000000000000000000000000000000000000000000000000000000000001::option;\nuse 0000000000000000000000000000000000000000000000000000000000000002::balance;\nuse 0000000000000000000000000000000000000000000000000000000000000002::coin;\nuse 0000000000000000000000000000000000000000000000000000000000000002::dynamic_field;\nuse 0000000000000000000000000000000000000000000000000000000000000002::dynamic_object_field;\nuse 0000000000000000000000000000000000000000000000000000000000000002::event;\nuse 0000000000000000000000000000000000000000000000000000000000000002::object;\nuse 0000000000000000000000000000000000000000000000000000000000000002::sui;\nuse 0000000000000000000000000000000000000000000000000000000000000002::transfer;\nuse 0000000000000000000000000000000000000000000000000000000000000002::transfer_policy;\nuse 0000000000000000000000000000000000000000000000000000000000000002::tx_context;\n\n\nstruct Kiosk has store, key {\n\tid: UID,\n\tprofits: Balance<SUI>,\n\towner: address,\n\titem_count: u32,\n\tallow_extensions: bool\n}\nstruct KioskOwnerCap has store, key {\n\tid: UID,\n\tfor: ID\n}\nstruct PurchaseCap<phantom Ty0: store + key> has store, key {\n\tid: UID,\n\tkiosk_id: ID,\n\titem_id: ID,\n\tmin_price: u64\n}\nstruct Borrow {\n\tkiosk_id: ID,\n\titem_id: ID\n}\nstruct Item has copy, drop, store {\n\tid: ID\n}\nstruct Listing has copy, drop, store {\n\tid: ID,\n\tis_exclusive: bool\n}\nstruct Lock has copy, drop, store {\n\tid: ID\n}\nstruct ItemListed<phantom Ty0: store + key> has copy, drop {\n\tkiosk: ID,\n\tid: ID,\n\tprice: u64\n}\nstruct ItemPurchased<phantom Ty0: store + key> has copy, drop {\n\tkiosk: ID,\n\tid: ID,\n\tprice: u64\n}\nstruct ItemDelisted<phantom Ty0: store + key> has copy, drop {\n\tkiosk: ID,\n\tid: ID\n}\n\nentry default(Arg0: &mut TxContext) {\nL0:\tloc1: Kiosk\nB0:\n\t0: CopyLoc[0](Arg0: &mut TxContext)\n\t1: Call new(&mut TxContext): Kiosk * KioskOwnerCap\n\t2: StLoc[1](loc0: KioskOwnerCap)\n\t3: StLoc[2](loc1: Kiosk)\n\t4: MoveLoc[1](loc0: KioskOwnerCap)\n\t5: MoveLoc[0](Arg0: &mut TxContext)\n\t6: FreezeRef\n\t7: Call tx_context::sender(&TxContext): address\n\t8: Call transfer::transfer<KioskOwnerCap>(KioskOwnerCap, address)\n\t9: MoveLoc[2](loc1: Kiosk)\n\t10: Call transfer::share_object<Kiosk>(Kiosk)\n\t11: Ret\n}\npublic new(Arg0: &mut TxContext): Kiosk * KioskOwnerCap {\nL0:\tloc1: Kiosk\nB0:\n\t0: CopyLoc[0](Arg0: &mut TxContext)\n\t1: Call object::new(&mut TxContext): UID\n\t2: Call balance::zero<SUI>(): Balance<SUI>\n\t3: CopyLoc[0](Arg0: &mut TxContext)\n\t4: FreezeRef\n\t5: Call tx_context::sender(&TxContext): address\n\t6: LdU32(0)\n\t7: LdFalse\n\t8: Pack[0](Kiosk)\n\t9: StLoc[2](loc1: Kiosk)\n\t10: MoveLoc[0](Arg0: &mut TxContext)\n\t11: Call object::new(&mut TxContext): UID\n\t12: ImmBorrowLoc[2](loc1: Kiosk)\n\t13: Call object::id<Kiosk>(&Kiosk): ID\n\t14: Pack[1](KioskOwnerCap)\n\t15: StLoc[1](loc0: KioskOwnerCap)\n\t16: MoveLoc[2](loc1: Kiosk)\n\t17: MoveLoc[1](loc0: KioskOwnerCap)\n\t18: Ret\n}\npublic close_and_withdraw(Arg0: Kiosk, Arg1: KioskOwnerCap, Arg2: &mut TxContext): Coin<SUI> {\nL0:\tloc3: u32\nL1:\tloc4: Balance<SUI>\nB0:\n\t0: MoveLoc[0](Arg0: Kiosk)\n\t1: Unpack[0](Kiosk)\n\t2: Pop\n\t3: StLoc[6](loc3: u32)\n\t4: Pop\n\t5: StLoc[7](loc4: Balance<SUI>)\n\t6: StLoc[5](loc2: UID)\n\t7: MoveLoc[1](Arg1: KioskOwnerCap)\n\t8: Unpack[1](KioskOwnerCap)\n\t9: StLoc[4](loc1: ID)\n\t10: StLoc[3](loc0: UID)\n\t11: ImmBorrowLoc[5](loc2: UID)\n\t12: Call object::uid_to_inner(&UID): ID\n\t13: MoveLoc[4](loc1: ID)\n\t14: Eq\n\t15: BrFalse(17)\nB1:\n\t16: Branch(21)\nB2:\n\t17: MoveLoc[2](Arg2: &mut TxContext)\n\t18: Pop\n\t19: LdConst[0](U64: 00000000..)\n\t20: Abort\nB3:\n\t21: MoveLoc[6](loc3: u32)\n\t22: LdU32(0)\n\t23: Eq\n\t24: BrFalse(26)\nB4:\n\t25: Branch(30)\nB5:\n\t26: MoveLoc[2](Arg2: &mut TxContext)\n\t27: Pop\n\t28: LdConst[3](U64: 03000000..)\n\t29: Abort\nB6:\n\t30: MoveLoc[3](loc0: UID)\n\t31: Call object::delete(UID)\n\t32: MoveLoc[5](loc2: UID)\n\t33: Call object::delete(UID)\n\t34: MoveLoc[7](loc4: Balance<SUI>)\n\t35: MoveLoc[2](Arg2: &mut TxContext)\n\t36: Call coin::from_balance<SUI>(Balance<SUI>, &mut TxContext): Coin<SUI>\n\t37: Ret\n}\npublic set_owner(Arg0: &mut Kiosk, Arg1: &KioskOwnerCap, Arg2: &TxContext) {\nB0:\n\t0: CopyLoc[0](Arg0: &mut Kiosk)\n\t1: MoveLoc[1](Arg1: &KioskOwnerCap)\n\t2: Call has_access(&mut Kiosk, &KioskOwnerCap): bool\n\t3: BrFalse(5)\nB1:\n\t4: Branch(11)\nB2:\n\t5: MoveLoc[0](Arg0: &mut Kiosk)\n\t6: Pop\n\t7: MoveLoc[2](Arg2: &TxContext)\n\t8: Pop\n\t9: LdConst[0](U64: 00000000..)\n\t10: Abort\nB3:\n\t11: MoveLoc[2](Arg2: &TxContext)\n\t12: Call tx_context::sender(&TxContext): address\n\t13: MoveLoc[0](Arg0: &mut Kiosk)\n\t14: MutBorrowField[0](Kiosk.owner: address)\n\t15: WriteRef\n\t16: Ret\n}\npublic set_owner_custom(Arg0: &mut Kiosk, Arg1: &KioskOwnerCap, Arg2: address) {\nB0:\n\t0: CopyLoc[0](Arg0: &mut Kiosk)\n\t1: MoveLoc[1](Arg1: &KioskOwnerCap)\n\t2: Call has_access(&mut Kiosk, &KioskOwnerCap): bool\n\t3: BrFalse(5)\nB1:\n\t4: Branch(9)\nB2:\n\t5: MoveLoc[0](Arg0: &mut Kiosk)\n\t6: Pop\n\t7: LdConst[0](U64: 00000000..)\n\t8: Abort\nB3:\n\t9: MoveLoc[2](Arg2: address)\n\t10: MoveLoc[0](Arg0: &mut Kiosk)\n\t11: MutBorrowField[0](Kiosk.owner: address)\n\t12: WriteRef\n\t13: Ret\n}\npublic place<Ty0: store + key>(Arg0: &mut Kiosk, Arg1: &KioskOwnerCap, Arg2: Ty0) {\nB0:\n\t0: CopyLoc[0](Arg0: &mut Kiosk)\n\t1: MoveLoc[1](Arg1: &KioskOwnerCap)\n\t2: Call has_access(&mut Kiosk, &KioskOwnerCap): bool\n\t3: BrFalse(5)\nB1:\n\t4: Branch(9)\nB2:\n\t5: MoveLoc[0](Arg0: &mut Kiosk)\n\t6: Pop\n\t7: LdConst[0](U64: 00000000..)\n\t8: Abort\nB3:\n\t9: MoveLoc[0](Arg0: &mut Kiosk)\n\t10: MoveLoc[2](Arg2: Ty0)\n\t11: Call place_internal<Ty0>(&mut Kiosk, Ty0)\n\t12: Ret\n}\npublic lock<Ty0: store + key>(Arg0: &mut Kiosk, Arg1: &KioskOwnerCap, Arg2: &TransferPolicy<Ty0>, Arg3: Ty0) {\nB0:\n\t0: CopyLoc[0](Arg0: &mut Kiosk)\n\t1: MoveLoc[1](Arg1: &KioskOwnerCap)\n\t2: Call has_access(&mut Kiosk, &KioskOwnerCap): bool\n\t3: BrFalse(5)\nB1:\n\t4: Branch(9)\nB2:\n\t5: MoveLoc[0](Arg0: &mut Kiosk)\n\t6: Pop\n\t7: LdConst[0](U64: 00000000..)\n\t8: Abort\nB3:\n\t9: MoveLoc[0](Arg0: &mut Kiosk)\n\t10: MoveLoc[3](Arg3: Ty0)\n\t11: Call lock_internal<Ty0>(&mut Kiosk, Ty0)\n\t12: Ret\n}\npublic take<Ty0: store + key>(Arg0: &mut Kiosk, Arg1: &KioskOwnerCap, Arg2: ID): Ty0 {\nB0:\n\t0: CopyLoc[0](Arg0: &mut Kiosk)\n\t1: MoveLoc[1](Arg1: &KioskOwnerCap)\n\t2: Call has_access(&mut Kiosk, &KioskOwnerCap): bool\n\t3: BrFalse(5)\nB1:\n\t4: Branch(9)\nB2:\n\t5: MoveLoc[0](Arg0: &mut Kiosk)\n\t6: Pop\n\t7: LdConst[0](U64: 00000000..)\n\t8: Abort\nB3:\n\t9: CopyLoc[0](Arg0: &mut Kiosk)\n\t10: CopyLoc[2](Arg2: ID)\n\t11: StLoc[3](loc0: ID)\n\t12: FreezeRef\n\t13: MoveLoc[3](loc0: ID)\n\t14: Call is_locked(&Kiosk, ID): bool\n\t15: Not\n\t16: BrFalse(18)\nB4:\n\t17: Branch(22)\nB5:\n\t18: MoveLoc[0](Arg0: &mut Kiosk)\n\t19: Pop\n\t20: LdConst[8](U64: 08000000..)\n\t21: Abort\nB6:\n\t22: CopyLoc[0](Arg0: &mut Kiosk)\n\t23: CopyLoc[2](Arg2: ID)\n\t24: StLoc[4](loc1: ID)\n\t25: FreezeRef\n\t26: MoveLoc[4](loc1: ID)\n\t27: Call is_listed_exclusively(&Kiosk, ID): bool\n\t28: Not\n\t29: BrFalse(31)\nB7:\n\t30: Branch(35)\nB8:\n\t31: MoveLoc[0](Arg0: &mut Kiosk)\n\t32: Pop\n\t33: LdConst[4](U64: 04000000..)\n\t34: Abort\nB9:\n\t35: CopyLoc[0](Arg0: &mut Kiosk)\n\t36: CopyLoc[2](Arg2: ID)\n\t37: StLoc[5](loc2: ID)\n\t38: FreezeRef\n\t39: MoveLoc[5](loc2: ID)\n\t40: Call has_item(&Kiosk, ID): bool\n\t41: BrFalse(43)\nB10:\n\t42: Branch(47)\nB11:\n\t43: MoveLoc[0](Arg0: &mut Kiosk)\n\t44: Pop\n\t45: LdConst[11](U64: 0b000000..)\n\t46: Abort\nB12:\n\t47: CopyLoc[0](Arg0: &mut Kiosk)\n\t48: ImmBorrowField[1](Kiosk.item_count: u32)\n\t49: ReadRef\n\t50: LdU32(1)\n\t51: Sub\n\t52: CopyLoc[0](Arg0: &mut Kiosk)\n\t53: MutBorrowField[1](Kiosk.item_count: u32)\n\t54: WriteRef\n\t55: CopyLoc[0](Arg0: &mut Kiosk)\n\t56: MutBorrowField[2](Kiosk.id: UID)\n\t57: CopyLoc[2](Arg2: ID)\n\t58: LdFalse\n\t59: Pack[5](Listing)\n\t60: Call dynamic_field::remove_if_exists<Listing, u64>(&mut UID, Listing): Option<u64>\n\t61: Pop\n\t62: MoveLoc[0](Arg0: &mut Kiosk)\n\t63: MutBorrowField[2](Kiosk.id: UID)\n\t64: MoveLoc[2](Arg2: ID)\n\t65: Pack[4](Item)\n\t66: Call dynamic_object_field::remove<Item, Ty0>(&mut UID, Item): Ty0\n\t67: Ret\n}\npublic list<Ty0: store + key>(Arg0: &mut Kiosk, Arg1: &KioskOwnerCap, Arg2: ID, Arg3: u64) {\nB0:\n\t0: CopyLoc[0](Arg0: &mut Kiosk)\n\t1: MoveLoc[1](Arg1: &KioskOwnerCap)\n\t2: Call has_access(&mut Kiosk, &KioskOwnerCap): bool\n\t3: BrFalse(5)\nB1:\n\t4: Branch(9)\nB2:\n\t5: MoveLoc[0](Arg0: &mut Kiosk)\n\t6: Pop\n\t7: LdConst[0](U64: 00000000..)\n\t8: Abort\nB3:\n\t9: CopyLoc[0](Arg0: &mut Kiosk)\n\t10: CopyLoc[2](Arg2: ID)\n\t11: StLoc[4](loc0: ID)\n\t12: FreezeRef\n\t13: MoveLoc[4](loc0: ID)\n\t14: Call has_item_with_type<Ty0>(&Kiosk, ID): bool\n\t15: BrFalse(17)\nB4:\n\t16: Branch(21)\nB5:\n\t17: MoveLoc[0](Arg0: &mut Kiosk)\n\t18: Pop\n\t19: LdConst[11](U64: 0b000000..)\n\t20: Abort\nB6:\n\t21: CopyLoc[0](Arg0: &mut Kiosk)\n\t22: CopyLoc[2](Arg2: ID)\n\t23: StLoc[5](loc1: ID)\n\t24: FreezeRef\n\t25: MoveLoc[5](loc1: ID)\n\t26: Call is_listed_exclusively(&Kiosk, ID): bool\n\t27: Not\n\t28: BrFalse(30)\nB7:\n\t29: Branch(34)\nB8:\n\t30: MoveLoc[0](Arg0: &mut Kiosk)\n\t31: Pop\n\t32: LdConst[4](U64: 04000000..)\n\t33: Abort\nB9:\n\t34: CopyLoc[0](Arg0: &mut Kiosk)\n\t35: MutBorrowField[2](Kiosk.id: UID)\n\t36: CopyLoc[2](Arg2: ID)\n\t37: LdFalse\n\t38: Pack[5](Listing)\n\t39: CopyLoc[3](Arg3: u64)\n\t40: Call dynamic_field::add<Listing, u64>(&mut UID, Listing, u64)\n\t41: MoveLoc[0](Arg0: &mut Kiosk)\n\t42: FreezeRef\n\t43: Call object::id<Kiosk>(&Kiosk): ID\n\t44: MoveLoc[2](Arg2: ID)\n\t45: MoveLoc[3](Arg3: u64)\n\t46: PackGeneric[0](ItemListed<Ty0>)\n\t47: Call event::emit<ItemListed<Ty0>>(ItemListed<Ty0>)\n\t48: Ret\n}\npublic place_and_list<Ty0: store + key>(Arg0: &mut Kiosk, Arg1: &KioskOwnerCap, Arg2: Ty0, Arg3: u64) {\nB0:\n\t0: ImmBorrowLoc[2](Arg2: Ty0)\n\t1: Call object::id<Ty0>(&Ty0): ID\n\t2: StLoc[4](loc0: ID)\n\t3: CopyLoc[0](Arg0: &mut Kiosk)\n\t4: CopyLoc[1](Arg1: &KioskOwnerCap)\n\t5: MoveLoc[2](Arg2: Ty0)\n\t6: Call place<Ty0>(&mut Kiosk, &KioskOwnerCap, Ty0)\n\t7: MoveLoc[0](Arg0: &mut Kiosk)\n\t8: MoveLoc[1](Arg1: &KioskOwnerCap)\n\t9: MoveLoc[4](loc0: ID)\n\t10: MoveLoc[3](Arg3: u64)\n\t11: Call list<Ty0>(&mut Kiosk, &KioskOwnerCap, ID, u64)\n\t12: Ret\n}\npublic delist<Ty0: store + key>(Arg0: &mut Kiosk, Arg1: &KioskOwnerCap, Arg2: ID) {\nB0:\n\t0: CopyLoc[0](Arg0: &mut Kiosk)\n\t1: MoveLoc[1](Arg1: &KioskOwnerCap)\n\t2: Call has_access(&mut Kiosk, &KioskOwnerCap): bool\n\t3: BrFalse(5)\nB1:\n\t4: Branch(9)\nB2:\n\t5: MoveLoc[0](Arg0: &mut Kiosk)\n\t6: Pop\n\t7: LdConst[0](U64: 00000000..)\n\t8: Abort\nB3:\n\t9: CopyLoc[0](Arg0: &mut Kiosk)\n\t10: CopyLoc[2](Arg2: ID)\n\t11: StLoc[3](loc0: ID)\n\t12: FreezeRef\n\t13: MoveLoc[3](loc0: ID)\n\t14: Call has_item_with_type<Ty0>(&Kiosk, ID): bool\n\t15: BrFalse(17)\nB4:\n\t16: Branch(21)\nB5:\n\t17: MoveLoc[0](Arg0: &mut Kiosk)\n\t18: Pop\n\t19: LdConst[11](U64: 0b000000..)\n\t20: Abort\nB6:\n\t21: CopyLoc[0](Arg0: &mut Kiosk)\n\t22: CopyLoc[2](Arg2: ID)\n\t23: StLoc[4](loc1: ID)\n\t24: FreezeRef\n\t25: MoveLoc[4](loc1: ID)\n\t26: Call is_listed_exclusively(&Kiosk, ID): bool\n\t27: Not\n\t28: BrFalse(30)\nB7:\n\t29: Branch(34)\nB8:\n\t30: MoveLoc[0](Arg0: &mut Kiosk)\n\t31: Pop\n\t32: LdConst[4](U64: 04000000..)\n\t33: Abort\nB9:\n\t34: CopyLoc[0](Arg0: &mut Kiosk)\n\t35: CopyLoc[2](Arg2: ID)\n\t36: StLoc[5](loc2: ID)\n\t37: FreezeRef\n\t38: MoveLoc[5](loc2: ID)\n\t39: Call is_listed(&Kiosk, ID): bool\n\t40: BrFalse(42)\nB10:\n\t41: Branch(46)\nB11:\n\t42: MoveLoc[0](Arg0: &mut Kiosk)\n\t43: Pop\n\t44: LdConst[12](U64: 0c000000..)\n\t45: Abort\nB12:\n\t46: CopyLoc[0](Arg0: &mut Kiosk)\n\t47: MutBorrowField[2](Kiosk.id: UID)\n\t48: CopyLoc[2](Arg2: ID)\n\t49: LdFalse\n\t50: Pack[5](Listing)\n\t51: Call dynamic_field::remove<Listing, u64>(&mut UID, Listing): u64\n\t52: Pop\n\t53: MoveLoc[0](Arg0: &mut Kiosk)\n\t54: FreezeRef\n\t55: Call object::id<Kiosk>(&Kiosk): ID\n\t56: MoveLoc[2](Arg2: ID)\n\t57: PackGeneric[1](ItemDelisted<Ty0>)\n\t58: Call event::emit<ItemDelisted<Ty0>>(ItemDelisted<Ty0>)\n\t59: Ret\n}\npublic purchase<Ty0: store + key>(Arg0: &mut Kiosk, Arg1: ID, Arg2: Coin<SUI>): Ty0 * TransferRequest<Ty0> {\nB0:\n\t0: CopyLoc[0](Arg0: &mut Kiosk)\n\t1: MutBorrowField[2](Kiosk.id: UID)\n\t2: CopyLoc[1](Arg1: ID)\n\t3: LdFalse\n\t4: Pack[5](Listing)\n\t5: Call dynamic_field::remove<Listing, u64>(&mut UID, Listing): u64\n\t6: StLoc[4](loc1: u64)\n\t7: CopyLoc[0](Arg0: &mut Kiosk)\n\t8: MutBorrowField[2](Kiosk.id: UID)\n\t9: CopyLoc[1](Arg1: ID)\n\t10: Pack[4](Item)\n\t11: Call dynamic_object_field::remove<Item, Ty0>(&mut UID, Item): Ty0\n\t12: StLoc[3](loc0: Ty0)\n\t13: CopyLoc[0](Arg0: &mut Kiosk)\n\t14: ImmBorrowField[1](Kiosk.item_count: u32)\n\t15: ReadRef\n\t16: LdU32(1)\n\t17: Sub\n\t18: CopyLoc[0](Arg0: &mut Kiosk)\n\t19: MutBorrowField[1](Kiosk.item_count: u32)\n\t20: WriteRef\n\t21: CopyLoc[4](loc1: u64)\n\t22: ImmBorrowLoc[2](Arg2: Coin<SUI>)\n\t23: Call coin::value<SUI>(&Coin<SUI>): u64\n\t24: Eq\n\t25: BrFalse(27)\nB1:\n\t26: Branch(31)\nB2:\n\t27: MoveLoc[0](Arg0: &mut Kiosk)\n\t28: Pop\n\t29: LdConst[1](U64: 01000000..)\n\t30: Abort\nB3:\n\t31: CopyLoc[0](Arg0: &mut Kiosk)\n\t32: MutBorrowField[2](Kiosk.id: UID)\n\t33: CopyLoc[1](Arg1: ID)\n\t34: Pack[6](Lock)\n\t35: Call dynamic_field::remove_if_exists<Lock, bool>(&mut UID, Lock): Option<bool>\n\t36: Pop\n\t37: CopyLoc[0](Arg0: &mut Kiosk)\n\t38: MutBorrowField[3](Kiosk.profits: Balance<SUI>)\n\t39: MoveLoc[2](Arg2: Coin<SUI>)\n\t40: Call coin::put<SUI>(&mut Balance<SUI>, Coin<SUI>)\n\t41: CopyLoc[0](Arg0: &mut Kiosk)\n\t42: FreezeRef\n\t43: Call object::id<Kiosk>(&Kiosk): ID\n\t44: CopyLoc[1](Arg1: ID)\n\t45: CopyLoc[4](loc1: u64)\n\t46: PackGeneric[2](ItemPurchased<Ty0>)\n\t47: Call event::emit<ItemPurchased<Ty0>>(ItemPurchased<Ty0>)\n\t48: MoveLoc[3](loc0: Ty0)\n\t49: MoveLoc[1](Arg1: ID)\n\t50: MoveLoc[4](loc1: u64)\n\t51: MoveLoc[0](Arg0: &mut Kiosk)\n\t52: FreezeRef\n\t53: Call object::id<Kiosk>(&Kiosk): ID\n\t54: Call transfer_policy::new_request<Ty0>(ID, u64, ID): TransferRequest<Ty0>\n\t55: Ret\n}\npublic list_with_purchase_cap<Ty0: store + key>(Arg0: &mut Kiosk, Arg1: &KioskOwnerCap, Arg2: ID, Arg3: u64, Arg4: &mut TxContext): PurchaseCap<Ty0> {\nL0:\tloc5: ID\nB0:\n\t0: CopyLoc[0](Arg0: &mut Kiosk)\n\t1: MoveLoc[1](Arg1: &KioskOwnerCap)\n\t2: Call has_access(&mut Kiosk, &KioskOwnerCap): bool\n\t3: BrFalse(5)\nB1:\n\t4: Branch(11)\nB2:\n\t5: MoveLoc[0](Arg0: &mut Kiosk)\n\t6: Pop\n\t7: MoveLoc[4](Arg4: &mut TxContext)\n\t8: Pop\n\t9: LdConst[0](U64: 00000000..)\n\t10: Abort\nB3:\n\t11: CopyLoc[0](Arg0: &mut Kiosk)\n\t12: CopyLoc[2](Arg2: ID)\n\t13: StLoc[5](loc0: ID)\n\t14: FreezeRef\n\t15: MoveLoc[5](loc0: ID)\n\t16: Call has_item_with_type<Ty0>(&Kiosk, ID): bool\n\t17: BrFalse(19)\nB4:\n\t18: Branch(25)\nB5:\n\t19: MoveLoc[0](Arg0: &mut Kiosk)\n\t20: Pop\n\t21: MoveLoc[4](Arg4: &mut TxContext)\n\t22: Pop\n\t23: LdConst[11](U64: 0b000000..)\n\t24: Abort\nB6:\n\t25: CopyLoc[0](Arg0: &mut Kiosk)\n\t26: CopyLoc[2](Arg2: ID)\n\t27: StLoc[6](loc1: ID)\n\t28: FreezeRef\n\t29: MoveLoc[6](loc1: ID)\n\t30: Call is_listed(&Kiosk, ID): bool\n\t31: Not\n\t32: BrFalse(34)\nB7:\n\t33: Branch(40)\nB8:\n\t34: MoveLoc[0](Arg0: &mut Kiosk)\n\t35: Pop\n\t36: MoveLoc[4](Arg4: &mut TxContext)\n\t37: Pop\n\t38: LdConst[6](U64: 06000000..)\n\t39: Abort\nB9:\n\t40: CopyLoc[0](Arg0: &mut Kiosk)\n\t41: MutBorrowField[2](Kiosk.id: UID)\n\t42: CopyLoc[2](Arg2: ID)\n\t43: LdTrue\n\t44: Pack[5](Listing)\n\t45: CopyLoc[3](Arg3: u64)\n\t46: Call dynamic_field::add<Listing, u64>(&mut UID, Listing, u64)\n\t47: MoveLoc[3](Arg3: u64)\n\t48: StLoc[7](loc2: u64)\n\t49: MoveLoc[2](Arg2: ID)\n\t50: StLoc[8](loc3: ID)\n\t51: MoveLoc[4](Arg4: &mut TxContext)\n\t52: Call object::new(&mut TxContext): UID\n\t53: StLoc[9](loc4: UID)\n\t54: MoveLoc[0](Arg0: &mut Kiosk)\n\t55: FreezeRef\n\t56: Call object::id<Kiosk>(&Kiosk): ID\n\t57: StLoc[10](loc5: ID)\n\t58: MoveLoc[9](loc4: UID)\n\t59: MoveLoc[10](loc5: ID)\n\t60: MoveLoc[8](loc3: ID)\n\t61: MoveLoc[7](loc2: u64)\n\t62: PackGeneric[3](PurchaseCap<Ty0>)\n\t63: Ret\n}\npublic purchase_with_cap<Ty0: store + key>(Arg0: &mut Kiosk, Arg1: PurchaseCap<Ty0>, Arg2: Coin<SUI>): Ty0 * TransferRequest<Ty0> {\nL0:\tloc3: u64\nL1:\tloc4: u64\nB0:\n\t0: MoveLoc[1](Arg1: PurchaseCap<Ty0>)\n\t1: UnpackGeneric[3](PurchaseCap<Ty0>)\n\t2: StLoc[6](loc3: u64)\n\t3: StLoc[4](loc1: ID)\n\t4: StLoc[5](loc2: ID)\n\t5: Call object::delete(UID)\n\t6: MoveLoc[4](loc1: ID)\n\t7: StLoc[3](loc0: ID)\n\t8: ImmBorrowLoc[2](Arg2: Coin<SUI>)\n\t9: Call coin::value<SUI>(&Coin<SUI>): u64\n\t10: StLoc[7](loc4: u64)\n\t11: CopyLoc[7](loc4: u64)\n\t12: MoveLoc[6](loc3: u64)\n\t13: Ge\n\t14: BrFalse(16)\nB1:\n\t15: Branch(20)\nB2:\n\t16: MoveLoc[0](Arg0: &mut Kiosk)\n\t17: Pop\n\t18: LdConst[1](U64: 01000000..)\n\t19: Abort\nB3:\n\t20: CopyLoc[0](Arg0: &mut Kiosk)\n\t21: FreezeRef\n\t22: Call object::id<Kiosk>(&Kiosk): ID\n\t23: MoveLoc[5](loc2: ID)\n\t24: Eq\n\t25: BrFalse(27)\nB4:\n\t26: Branch(31)\nB5:\n\t27: MoveLoc[0](Arg0: &mut Kiosk)\n\t28: Pop\n\t29: LdConst[5](U64: 05000000..)\n\t30: Abort\nB6:\n\t31: CopyLoc[0](Arg0: &mut Kiosk)\n\t32: MutBorrowField[2](Kiosk.id: UID)\n\t33: CopyLoc[3](loc0: ID)\n\t34: LdTrue\n\t35: Pack[5](Listing)\n\t36: Call dynamic_field::remove<Listing, u64>(&mut UID, Listing): u64\n\t37: Pop\n\t38: CopyLoc[0](Arg0: &mut Kiosk)\n\t39: MutBorrowField[3](Kiosk.profits: Balance<SUI>)\n\t40: MoveLoc[2](Arg2: Coin<SUI>)\n\t41: Call coin::put<SUI>(&mut Balance<SUI>, Coin<SUI>)\n\t42: CopyLoc[0](Arg0: &mut Kiosk)\n\t43: ImmBorrowField[1](Kiosk.item_count: u32)\n\t44: ReadRef\n\t45: LdU32(1)\n\t46: Sub\n\t47: CopyLoc[0](Arg0: &mut Kiosk)\n\t48: MutBorrowField[1](Kiosk.item_count: u32)\n\t49: WriteRef\n\t50: CopyLoc[0](Arg0: &mut Kiosk)\n\t51: MutBorrowField[2](Kiosk.id: UID)\n\t52: CopyLoc[3](loc0: ID)\n\t53: Pack[6](Lock)\n\t54: Call dynamic_field::remove_if_exists<Lock, bool>(&mut UID, Lock): Option<bool>\n\t55: Pop\n\t56: CopyLoc[0](Arg0: &mut Kiosk)\n\t57: MutBorrowField[2](Kiosk.id: UID)\n\t58: CopyLoc[3](loc0: ID)\n\t59: Pack[4](Item)\n\t60: Call dynamic_object_field::remove<Item, Ty0>(&mut UID, Item): Ty0\n\t61: MoveLoc[3](loc0: ID)\n\t62: MoveLoc[7](loc4: u64)\n\t63: MoveLoc[0](Arg0: &mut Kiosk)\n\t64: FreezeRef\n\t65: Call object::id<Kiosk>(&Kiosk): ID\n\t66: Call transfer_policy::new_request<Ty0>(ID, u64, ID): TransferRequest<Ty0>\n\t67: Ret\n}\npublic return_purchase_cap<Ty0: store + key>(Arg0: &mut Kiosk, Arg1: PurchaseCap<Ty0>) {\nL0:\tloc2: ID\nB0:\n\t0: MoveLoc[1](Arg1: PurchaseCap<Ty0>)\n\t1: UnpackGeneric[3](PurchaseCap<Ty0>)\n\t2: Pop\n\t3: StLoc[3](loc1: ID)\n\t4: StLoc[4](loc2: ID)\n\t5: StLoc[2](loc0: UID)\n\t6: CopyLoc[0](Arg0: &mut Kiosk)\n\t7: FreezeRef\n\t8: Call object::id<Kiosk>(&Kiosk): ID\n\t9: MoveLoc[4](loc2: ID)\n\t10: Eq\n\t11: BrFalse(13)\nB1:\n\t12: Branch(17)\nB2:\n\t13: MoveLoc[0](Arg0: &mut Kiosk)\n\t14: Pop\n\t15: LdConst[5](U64: 05000000..)\n\t16: Abort\nB3:\n\t17: MoveLoc[0](Arg0: &mut Kiosk)\n\t18: MutBorrowField[2](Kiosk.id: UID)\n\t19: MoveLoc[3](loc1: ID)\n\t20: LdTrue\n\t21: Pack[5](Listing)\n\t22: Call dynamic_field::remove<Listing, u64>(&mut UID, Listing): u64\n\t23: Pop\n\t24: MoveLoc[2](loc0: UID)\n\t25: Call object::delete(UID)\n\t26: Ret\n}\npublic withdraw(Arg0: &mut Kiosk, Arg1: &KioskOwnerCap, Arg2: Option<u64>, Arg3: &mut TxContext): Coin<SUI> {\nB0:\n\t0: CopyLoc[0](Arg0: &mut Kiosk)\n\t1: MoveLoc[1](Arg1: &KioskOwnerCap)\n\t2: Call has_access(&mut Kiosk, &KioskOwnerCap): bool\n\t3: BrFalse(5)\nB1:\n\t4: Branch(11)\nB2:\n\t5: MoveLoc[0](Arg0: &mut Kiosk)\n\t6: Pop\n\t7: MoveLoc[3](Arg3: &mut TxContext)\n\t8: Pop\n\t9: LdConst[0](U64: 00000000..)\n\t10: Abort\nB3:\n\t11: ImmBorrowLoc[2](Arg2: Option<u64>)\n\t12: Call option::is_some<u64>(&Option<u64>): bool\n\t13: BrFalse(33)\nB4:\n\t14: MoveLoc[2](Arg2: Option<u64>)\n\t15: Call option::destroy_some<u64>(Option<u64>): u64\n\t16: StLoc[6](loc2: u64)\n\t17: CopyLoc[6](loc2: u64)\n\t18: CopyLoc[0](Arg0: &mut Kiosk)\n\t19: ImmBorrowField[3](Kiosk.profits: Balance<SUI>)\n\t20: Call balance::value<SUI>(&Balance<SUI>): u64\n\t21: Le\n\t22: BrFalse(24)\nB5:\n\t23: Branch(30)\nB6:\n\t24: MoveLoc[0](Arg0: &mut Kiosk)\n\t25: Pop\n\t26: MoveLoc[3](Arg3: &mut TxContext)\n\t27: Pop\n\t28: LdConst[2](U64: 02000000..)\n\t29: Abort\nB7:\n\t30: MoveLoc[6](loc2: u64)\n\t31: StLoc[4](loc0: u64)\n\t32: Branch(37)\nB8:\n\t33: CopyLoc[0](Arg0: &mut Kiosk)\n\t34: ImmBorrowField[3](Kiosk.profits: Balance<SUI>)\n\t35: Call balance::value<SUI>(&Balance<SUI>): u64\n\t36: StLoc[4](loc0: u64)\nB9:\n\t37: MoveLoc[4](loc0: u64)\n\t38: StLoc[5](loc1: u64)\n\t39: MoveLoc[0](Arg0: &mut Kiosk)\n\t40: MutBorrowField[3](Kiosk.profits: Balance<SUI>)\n\t41: MoveLoc[5](loc1: u64)\n\t42: MoveLoc[3](Arg3: &mut TxContext)\n\t43: Call coin::take<SUI>(&mut Balance<SUI>, u64, &mut TxContext): Coin<SUI>\n\t44: Ret\n}\npublic(friend) lock_internal<Ty0: store + key>(Arg0: &mut Kiosk, Arg1: Ty0) {\nB0:\n\t0: CopyLoc[0](Arg0: &mut Kiosk)\n\t1: MutBorrowField[2](Kiosk.id: UID)\n\t2: ImmBorrowLoc[1](Arg1: Ty0)\n\t3: Call object::id<Ty0>(&Ty0): ID\n\t4: Pack[6](Lock)\n\t5: LdTrue\n\t6: Call dynamic_field::add<Lock, bool>(&mut UID, Lock, bool)\n\t7: MoveLoc[0](Arg0: &mut Kiosk)\n\t8: MoveLoc[1](Arg1: Ty0)\n\t9: Call place_internal<Ty0>(&mut Kiosk, Ty0)\n\t10: Ret\n}\npublic(friend) place_internal<Ty0: store + key>(Arg0: &mut Kiosk, Arg1: Ty0) {\nB0:\n\t0: CopyLoc[0](Arg0: &mut Kiosk)\n\t1: ImmBorrowField[1](Kiosk.item_count: u32)\n\t2: ReadRef\n\t3: LdU32(1)\n\t4: Add\n\t5: CopyLoc[0](Arg0: &mut Kiosk)\n\t6: MutBorrowField[1](Kiosk.item_count: u32)\n\t7: WriteRef\n\t8: MoveLoc[0](Arg0: &mut Kiosk)\n\t9: MutBorrowField[2](Kiosk.id: UID)\n\t10: ImmBorrowLoc[1](Arg1: Ty0)\n\t11: Call object::id<Ty0>(&Ty0): ID\n\t12: Pack[4](Item)\n\t13: MoveLoc[1](Arg1: Ty0)\n\t14: Call dynamic_object_field::add<Item, Ty0>(&mut UID, Item, Ty0)\n\t15: Ret\n}\npublic(friend) uid_mut_internal(Arg0: &mut Kiosk): &mut UID {\nB0:\n\t0: MoveLoc[0](Arg0: &mut Kiosk)\n\t1: MutBorrowField[2](Kiosk.id: UID)\n\t2: Ret\n}\npublic has_item(Arg0: &Kiosk, Arg1: ID): bool {\nB0:\n\t0: MoveLoc[0](Arg0: &Kiosk)\n\t1: ImmBorrowField[2](Kiosk.id: UID)\n\t2: MoveLoc[1](Arg1: ID)\n\t3: Pack[4](Item)\n\t4: Call dynamic_object_field::exists_<Item>(&UID, Item): bool\n\t5: Ret\n}\npublic has_item_with_type<Ty0: store + key>(Arg0: &Kiosk, Arg1: ID): bool {\nB0:\n\t0: MoveLoc[0](Arg0: &Kiosk)\n\t1: ImmBorrowField[2](Kiosk.id: UID)\n\t2: MoveLoc[1](Arg1: ID)\n\t3: Pack[4](Item)\n\t4: Call dynamic_object_field::exists_with_type<Item, Ty0>(&UID, Item): bool\n\t5: Ret\n}\npublic is_locked(Arg0: &Kiosk, Arg1: ID): bool {\nB0:\n\t0: MoveLoc[0](Arg0: &Kiosk)\n\t1: ImmBorrowField[2](Kiosk.id: UID)\n\t2: MoveLoc[1](Arg1: ID)\n\t3: Pack[6](Lock)\n\t4: Call dynamic_field::exists_<Lock>(&UID, Lock): bool\n\t5: Ret\n}\npublic is_listed(Arg0: &Kiosk, Arg1: ID): bool {\nB0:\n\t0: CopyLoc[0](Arg0: &Kiosk)\n\t1: ImmBorrowField[2](Kiosk.id: UID)\n\t2: CopyLoc[1](Arg1: ID)\n\t3: LdFalse\n\t4: Pack[5](Listing)\n\t5: Call dynamic_field::exists_<Listing>(&UID, Listing): bool\n\t6: BrFalse(12)\nB1:\n\t7: MoveLoc[0](Arg0: &Kiosk)\n\t8: Pop\n\t9: LdTrue\n\t10: StLoc[2](loc0: bool)\n\t11: Branch(16)\nB2:\n\t12: MoveLoc[0](Arg0: &Kiosk)\n\t13: MoveLoc[1](Arg1: ID)\n\t14: Call is_listed_exclusively(&Kiosk, ID): bool\n\t15: StLoc[2](loc0: bool)\nB3:\n\t16: MoveLoc[2](loc0: bool)\n\t17: Ret\n}\npublic is_listed_exclusively(Arg0: &Kiosk, Arg1: ID): bool {\nB0:\n\t0: MoveLoc[0](Arg0: &Kiosk)\n\t1: ImmBorrowField[2](Kiosk.id: UID)\n\t2: MoveLoc[1](Arg1: ID)\n\t3: LdTrue\n\t4: Pack[5](Listing)\n\t5: Call dynamic_field::exists_<Listing>(&UID, Listing): bool\n\t6: Ret\n}\npublic has_access(Arg0: &mut Kiosk, Arg1: &KioskOwnerCap): bool {\nB0:\n\t0: MoveLoc[0](Arg0: &mut Kiosk)\n\t1: FreezeRef\n\t2: Call object::id<Kiosk>(&Kiosk): ID\n\t3: MoveLoc[1](Arg1: &KioskOwnerCap)\n\t4: ImmBorrowField[4](KioskOwnerCap.for: ID)\n\t5: ReadRef\n\t6: Eq\n\t7: Ret\n}\npublic uid_mut_as_owner(Arg0: &mut Kiosk, Arg1: &KioskOwnerCap): &mut UID {\nB0:\n\t0: CopyLoc[0](Arg0: &mut Kiosk)\n\t1: MoveLoc[1](Arg1: &KioskOwnerCap)\n\t2: Call has_access(&mut Kiosk, &KioskOwnerCap): bool\n\t3: BrFalse(5)\nB1:\n\t4: Branch(9)\nB2:\n\t5: MoveLoc[0](Arg0: &mut Kiosk)\n\t6: Pop\n\t7: LdConst[0](U64: 00000000..)\n\t8: Abort\nB3:\n\t9: MoveLoc[0](Arg0: &mut Kiosk)\n\t10: MutBorrowField[2](Kiosk.id: UID)\n\t11: Ret\n}\npublic set_allow_extensions(Arg0: &mut Kiosk, Arg1: &KioskOwnerCap, Arg2: bool) {\nB0:\n\t0: CopyLoc[0](Arg0: &mut Kiosk)\n\t1: MoveLoc[1](Arg1: &KioskOwnerCap)\n\t2: Call has_access(&mut Kiosk, &KioskOwnerCap): bool\n\t3: BrFalse(5)\nB1:\n\t4: Branch(9)\nB2:\n\t5: MoveLoc[0](Arg0: &mut Kiosk)\n\t6: Pop\n\t7: LdConst[0](U64: 00000000..)\n\t8: Abort\nB3:\n\t9: MoveLoc[2](Arg2: bool)\n\t10: MoveLoc[0](Arg0: &mut Kiosk)\n\t11: MutBorrowField[5](Kiosk.allow_extensions: bool)\n\t12: WriteRef\n\t13: Ret\n}\npublic uid(Arg0: &Kiosk): &UID {\nB0:\n\t0: MoveLoc[0](Arg0: &Kiosk)\n\t1: ImmBorrowField[2](Kiosk.id: UID)\n\t2: Ret\n}\npublic uid_mut(Arg0: &mut Kiosk): &mut UID {\nB0:\n\t0: CopyLoc[0](Arg0: &mut Kiosk)\n\t1: ImmBorrowField[5](Kiosk.allow_extensions: bool)\n\t2: ReadRef\n\t3: BrFalse(5)\nB1:\n\t4: Branch(9)\nB2:\n\t5: MoveLoc[0](Arg0: &mut Kiosk)\n\t6: Pop\n\t7: LdConst[7](U64: 07000000..)\n\t8: Abort\nB3:\n\t9: MoveLoc[0](Arg0: &mut Kiosk)\n\t10: MutBorrowField[2](Kiosk.id: UID)\n\t11: Ret\n}\npublic owner(Arg0: &Kiosk): address {\nB0:\n\t0: MoveLoc[0](Arg0: &Kiosk)\n\t1: ImmBorrowField[0](Kiosk.owner: address)\n\t2: ReadRef\n\t3: Ret\n}\npublic item_count(Arg0: &Kiosk): u32 {\nB0:\n\t0: MoveLoc[0](Arg0: &Kiosk)\n\t1: ImmBorrowField[1](Kiosk.item_count: u32)\n\t2: ReadRef\n\t3: Ret\n}\npublic profits_amount(Arg0: &Kiosk): u64 {\nB0:\n\t0: MoveLoc[0](Arg0: &Kiosk)\n\t1: ImmBorrowField[3](Kiosk.profits: Balance<SUI>)\n\t2: Call balance::value<SUI>(&Balance<SUI>): u64\n\t3: Ret\n}\npublic profits_mut(Arg0: &mut Kiosk, Arg1: &KioskOwnerCap): &mut Balance<SUI> {\nB0:\n\t0: CopyLoc[0](Arg0: &mut Kiosk)\n\t1: MoveLoc[1](Arg1: &KioskOwnerCap)\n\t2: Call has_access(&mut Kiosk, &KioskOwnerCap): bool\n\t3: BrFalse(5)\nB1:\n\t4: Branch(9)\nB2:\n\t5: MoveLoc[0](Arg0: &mut Kiosk)\n\t6: Pop\n\t7: LdConst[0](U64: 00000000..)\n\t8: Abort\nB3:\n\t9: MoveLoc[0](Arg0: &mut Kiosk)\n\t10: MutBorrowField[3](Kiosk.profits: Balance<SUI>)\n\t11: Ret\n}\npublic borrow<Ty0: store + key>(Arg0: &Kiosk, Arg1: &KioskOwnerCap, Arg2: ID): &Ty0 {\nB0:\n\t0: CopyLoc[0](Arg0: &Kiosk)\n\t1: Call object::id<Kiosk>(&Kiosk): ID\n\t2: MoveLoc[1](Arg1: &KioskOwnerCap)\n\t3: ImmBorrowField[4](KioskOwnerCap.for: ID)\n\t4: ReadRef\n\t5: Eq\n\t6: BrFalse(8)\nB1:\n\t7: Branch(12)\nB2:\n\t8: MoveLoc[0](Arg0: &Kiosk)\n\t9: Pop\n\t10: LdConst[0](U64: 00000000..)\n\t11: Abort\nB3:\n\t12: CopyLoc[0](Arg0: &Kiosk)\n\t13: CopyLoc[2](Arg2: ID)\n\t14: Call has_item(&Kiosk, ID): bool\n\t15: BrFalse(17)\nB4:\n\t16: Branch(21)\nB5:\n\t17: MoveLoc[0](Arg0: &Kiosk)\n\t18: Pop\n\t19: LdConst[11](U64: 0b000000..)\n\t20: Abort\nB6:\n\t21: MoveLoc[0](Arg0: &Kiosk)\n\t22: ImmBorrowField[2](Kiosk.id: UID)\n\t23: MoveLoc[2](Arg2: ID)\n\t24: Pack[4](Item)\n\t25: Call dynamic_object_field::borrow<Item, Ty0>(&UID, Item): &Ty0\n\t26: Ret\n}\npublic borrow_mut<Ty0: store + key>(Arg0: &mut Kiosk, Arg1: &KioskOwnerCap, Arg2: ID): &mut Ty0 {\nB0:\n\t0: CopyLoc[0](Arg0: &mut Kiosk)\n\t1: MoveLoc[1](Arg1: &KioskOwnerCap)\n\t2: Call has_access(&mut Kiosk, &KioskOwnerCap): bool\n\t3: BrFalse(5)\nB1:\n\t4: Branch(9)\nB2:\n\t5: MoveLoc[0](Arg0: &mut Kiosk)\n\t6: Pop\n\t7: LdConst[0](U64: 00000000..)\n\t8: Abort\nB3:\n\t9: CopyLoc[0](Arg0: &mut Kiosk)\n\t10: CopyLoc[2](Arg2: ID)\n\t11: StLoc[3](loc0: ID)\n\t12: FreezeRef\n\t13: MoveLoc[3](loc0: ID)\n\t14: Call has_item(&Kiosk, ID): bool\n\t15: BrFalse(17)\nB4:\n\t16: Branch(21)\nB5:\n\t17: MoveLoc[0](Arg0: &mut Kiosk)\n\t18: Pop\n\t19: LdConst[11](U64: 0b000000..)\n\t20: Abort\nB6:\n\t21: CopyLoc[0](Arg0: &mut Kiosk)\n\t22: CopyLoc[2](Arg2: ID)\n\t23: StLoc[4](loc1: ID)\n\t24: FreezeRef\n\t25: MoveLoc[4](loc1: ID)\n\t26: Call is_listed(&Kiosk, ID): bool\n\t27: Not\n\t28: BrFalse(30)\nB7:\n\t29: Branch(34)\nB8:\n\t30: MoveLoc[0](Arg0: &mut Kiosk)\n\t31: Pop\n\t32: LdConst[9](U64: 09000000..)\n\t33: Abort\nB9:\n\t34: MoveLoc[0](Arg0: &mut Kiosk)\n\t35: MutBorrowField[2](Kiosk.id: UID)\n\t36: MoveLoc[2](Arg2: ID)\n\t37: Pack[4](Item)\n\t38: Call dynamic_object_field::borrow_mut<Item, Ty0>(&mut UID, Item): &mut Ty0\n\t39: Ret\n}\npublic borrow_val<Ty0: store + key>(Arg0: &mut Kiosk, Arg1: &KioskOwnerCap, Arg2: ID): Ty0 * Borrow {\nB0:\n\t0: CopyLoc[0](Arg0: &mut Kiosk)\n\t1: MoveLoc[1](Arg1: &KioskOwnerCap)\n\t2: Call has_access(&mut Kiosk, &KioskOwnerCap): bool\n\t3: BrFalse(5)\nB1:\n\t4: Branch(9)\nB2:\n\t5: MoveLoc[0](Arg0: &mut Kiosk)\n\t6: Pop\n\t7: LdConst[0](U64: 00000000..)\n\t8: Abort\nB3:\n\t9: CopyLoc[0](Arg0: &mut Kiosk)\n\t10: CopyLoc[2](Arg2: ID)\n\t11: StLoc[3](loc0: ID)\n\t12: FreezeRef\n\t13: MoveLoc[3](loc0: ID)\n\t14: Call has_item(&Kiosk, ID): bool\n\t15: BrFalse(17)\nB4:\n\t16: Branch(21)\nB5:\n\t17: MoveLoc[0](Arg0: &mut Kiosk)\n\t18: Pop\n\t19: LdConst[11](U64: 0b000000..)\n\t20: Abort\nB6:\n\t21: CopyLoc[0](Arg0: &mut Kiosk)\n\t22: CopyLoc[2](Arg2: ID)\n\t23: StLoc[4](loc1: ID)\n\t24: FreezeRef\n\t25: MoveLoc[4](loc1: ID)\n\t26: Call is_listed(&Kiosk, ID): bool\n\t27: Not\n\t28: BrFalse(30)\nB7:\n\t29: Branch(34)\nB8:\n\t30: MoveLoc[0](Arg0: &mut Kiosk)\n\t31: Pop\n\t32: LdConst[9](U64: 09000000..)\n\t33: Abort\nB9:\n\t34: CopyLoc[0](Arg0: &mut Kiosk)\n\t35: MutBorrowField[2](Kiosk.id: UID)\n\t36: CopyLoc[2](Arg2: ID)\n\t37: Pack[4](Item)\n\t38: Call dynamic_object_field::remove<Item, Ty0>(&mut UID, Item): Ty0\n\t39: MoveLoc[0](Arg0: &mut Kiosk)\n\t40: FreezeRef\n\t41: Call object::id<Kiosk>(&Kiosk): ID\n\t42: MoveLoc[2](Arg2: ID)\n\t43: Pack[3](Borrow)\n\t44: Ret\n}\npublic return_val<Ty0: store + key>(Arg0: &mut Kiosk, Arg1: Ty0, Arg2: Borrow) {\nB0:\n\t0: MoveLoc[2](Arg2: Borrow)\n\t1: Unpack[3](Borrow)\n\t2: StLoc[3](loc0: ID)\n\t3: StLoc[4](loc1: ID)\n\t4: CopyLoc[0](Arg0: &mut Kiosk)\n\t5: FreezeRef\n\t6: Call object::id<Kiosk>(&Kiosk): ID\n\t7: MoveLoc[4](loc1: ID)\n\t8: Eq\n\t9: BrFalse(11)\nB1:\n\t10: Branch(15)\nB2:\n\t11: MoveLoc[0](Arg0: &mut Kiosk)\n\t12: Pop\n\t13: LdConst[5](U64: 05000000..)\n\t14: Abort\nB3:\n\t15: ImmBorrowLoc[1](Arg1: Ty0)\n\t16: Call object::id<Ty0>(&Ty0): ID\n\t17: CopyLoc[3](loc0: ID)\n\t18: Eq\n\t19: BrFalse(21)\nB4:\n\t20: Branch(25)\nB5:\n\t21: MoveLoc[0](Arg0: &mut Kiosk)\n\t22: Pop\n\t23: LdConst[10](U64: 0a000000..)\n\t24: Abort\nB6:\n\t25: MoveLoc[0](Arg0: &mut Kiosk)\n\t26: MutBorrowField[2](Kiosk.id: UID)\n\t27: MoveLoc[3](loc0: ID)\n\t28: Pack[4](Item)\n\t29: MoveLoc[1](Arg1: Ty0)\n\t30: Call dynamic_object_field::add<Item, Ty0>(&mut UID, Item, Ty0)\n\t31: Ret\n}\npublic kiosk_owner_cap_for(Arg0: &KioskOwnerCap): ID {\nB0:\n\t0: MoveLoc[0](Arg0: &KioskOwnerCap)\n\t1: ImmBorrowField[4](KioskOwnerCap.for: ID)\n\t2: ReadRef\n\t3: Ret\n}\npublic purchase_cap_kiosk<Ty0: store + key>(Arg0: &PurchaseCap<Ty0>): ID {\nB0:\n\t0: MoveLoc[0](Arg0: &PurchaseCap<Ty0>)\n\t1: ImmBorrowFieldGeneric[0](PurchaseCap.kiosk_id: ID)\n\t2: ReadRef\n\t3: Ret\n}\npublic purchase_cap_item<Ty0: store + key>(Arg0: &PurchaseCap<Ty0>): ID {\nB0:\n\t0: MoveLoc[0](Arg0: &PurchaseCap<Ty0>)\n\t1: ImmBorrowFieldGeneric[1](PurchaseCap.item_id: ID)\n\t2: ReadRef\n\t3: Ret\n}\npublic purchase_cap_min_price<Ty0: store + key>(Arg0: &PurchaseCap<Ty0>): u64 {\nB0:\n\t0: MoveLoc[0](Arg0: &PurchaseCap<Ty0>)\n\t1: ImmBorrowFieldGeneric[2](PurchaseCap.min_price: u64)\n\t2: ReadRef\n\t3: Ret\n}\n\nConstants [\n\t0 => u64: 0000000000000000\n\t1 => u64: 0100000000000000\n\t2 => u64: 0200000000000000\n\t3 => u64: 0300000000000000\n\t4 => u64: 0400000000000000\n\t5 => u64: 0500000000000000\n\t6 => u64: 0600000000000000\n\t7 => u64: 0700000000000000\n\t8 => u64: 0800000000000000\n\t9 => u64: 0900000000000000\n\t10 => u64: 0a00000000000000\n\t11 => u64: 0b00000000000000\n\t12 => u64: 0c00000000000000\n]\n}",
          "kiosk_extension": "// Move bytecode v6\nmodule 2.kiosk_extension {\nuse 0000000000000000000000000000000000000000000000000000000000000002::bag;\nuse 0000000000000000000000000000000000000000000000000000000000000002::dynamic_field;\nuse 0000000000000000000000000000000000000000000000000000000000000002::kiosk;\nuse 0000000000000000000000000000000000000000000000000000000000000002::object;\nuse 0000000000000000000000000000000000000000000000000000000000000002::transfer_policy;\nuse 0000000000000000000000000000000000000000000000000000000000000002::tx_context;\n\n\nstruct Extension has store {\n\tstorage: Bag,\n\tpermissions: u128,\n\tis_enabled: bool\n}\nstruct ExtensionKey<phantom Ty0> has copy, drop, store {\n\tdummy_field: bool\n}\n\npublic add<Ty0: drop>(Arg0: Ty0, Arg1: &mut Kiosk, Arg2: &KioskOwnerCap, Arg3: u128, Arg4: &mut TxContext) {\nB0:\n\t0: CopyLoc[1](Arg1: &mut Kiosk)\n\t1: CopyLoc[2](Arg2: &KioskOwnerCap)\n\t2: Call kiosk::has_access(&mut Kiosk, &KioskOwnerCap): bool\n\t3: BrFalse(5)\nB1:\n\t4: Branch(13)\nB2:\n\t5: MoveLoc[1](Arg1: &mut Kiosk)\n\t6: Pop\n\t7: MoveLoc[4](Arg4: &mut TxContext)\n\t8: Pop\n\t9: MoveLoc[2](Arg2: &KioskOwnerCap)\n\t10: Pop\n\t11: LdConst[0](U64: 00000000..)\n\t12: Abort\nB3:\n\t13: MoveLoc[1](Arg1: &mut Kiosk)\n\t14: MoveLoc[2](Arg2: &KioskOwnerCap)\n\t15: Call kiosk::uid_mut_as_owner(&mut Kiosk, &KioskOwnerCap): &mut UID\n\t16: LdFalse\n\t17: PackGeneric[0](ExtensionKey<Ty0>)\n\t18: MoveLoc[4](Arg4: &mut TxContext)\n\t19: Call bag::new(&mut TxContext): Bag\n\t20: MoveLoc[3](Arg3: u128)\n\t21: LdTrue\n\t22: Pack[0](Extension)\n\t23: Call dynamic_field::add<ExtensionKey<Ty0>, Extension>(&mut UID, ExtensionKey<Ty0>, Extension)\n\t24: Ret\n}\npublic disable<Ty0: drop>(Arg0: &mut Kiosk, Arg1: &KioskOwnerCap) {\nB0:\n\t0: CopyLoc[0](Arg0: &mut Kiosk)\n\t1: MoveLoc[1](Arg1: &KioskOwnerCap)\n\t2: Call kiosk::has_access(&mut Kiosk, &KioskOwnerCap): bool\n\t3: BrFalse(5)\nB1:\n\t4: Branch(9)\nB2:\n\t5: MoveLoc[0](Arg0: &mut Kiosk)\n\t6: Pop\n\t7: LdConst[0](U64: 00000000..)\n\t8: Abort\nB3:\n\t9: CopyLoc[0](Arg0: &mut Kiosk)\n\t10: FreezeRef\n\t11: Call is_installed<Ty0>(&Kiosk): bool\n\t12: BrFalse(14)\nB4:\n\t13: Branch(18)\nB5:\n\t14: MoveLoc[0](Arg0: &mut Kiosk)\n\t15: Pop\n\t16: LdConst[2](U64: 03000000..)\n\t17: Abort\nB6:\n\t18: LdFalse\n\t19: MoveLoc[0](Arg0: &mut Kiosk)\n\t20: Call extension_mut<Ty0>(&mut Kiosk): &mut Extension\n\t21: MutBorrowField[0](Extension.is_enabled: bool)\n\t22: WriteRef\n\t23: Ret\n}\npublic enable<Ty0: drop>(Arg0: &mut Kiosk, Arg1: &KioskOwnerCap) {\nB0:\n\t0: CopyLoc[0](Arg0: &mut Kiosk)\n\t1: MoveLoc[1](Arg1: &KioskOwnerCap)\n\t2: Call kiosk::has_access(&mut Kiosk, &KioskOwnerCap): bool\n\t3: BrFalse(5)\nB1:\n\t4: Branch(9)\nB2:\n\t5: MoveLoc[0](Arg0: &mut Kiosk)\n\t6: Pop\n\t7: LdConst[0](U64: 00000000..)\n\t8: Abort\nB3:\n\t9: CopyLoc[0](Arg0: &mut Kiosk)\n\t10: FreezeRef\n\t11: Call is_installed<Ty0>(&Kiosk): bool\n\t12: BrFalse(14)\nB4:\n\t13: Branch(18)\nB5:\n\t14: MoveLoc[0](Arg0: &mut Kiosk)\n\t15: Pop\n\t16: LdConst[2](U64: 03000000..)\n\t17: Abort\nB6:\n\t18: LdTrue\n\t19: MoveLoc[0](Arg0: &mut Kiosk)\n\t20: Call extension_mut<Ty0>(&mut Kiosk): &mut Extension\n\t21: MutBorrowField[0](Extension.is_enabled: bool)\n\t22: WriteRef\n\t23: Ret\n}\npublic remove<Ty0: drop>(Arg0: &mut Kiosk, Arg1: &KioskOwnerCap) {\nB0:\n\t0: CopyLoc[0](Arg0: &mut Kiosk)\n\t1: CopyLoc[1](Arg1: &KioskOwnerCap)\n\t2: Call kiosk::has_access(&mut Kiosk, &KioskOwnerCap): bool\n\t3: BrFalse(5)\nB1:\n\t4: Branch(11)\nB2:\n\t5: MoveLoc[0](Arg0: &mut Kiosk)\n\t6: Pop\n\t7: MoveLoc[1](Arg1: &KioskOwnerCap)\n\t8: Pop\n\t9: LdConst[0](U64: 00000000..)\n\t10: Abort\nB3:\n\t11: CopyLoc[0](Arg0: &mut Kiosk)\n\t12: FreezeRef\n\t13: Call is_installed<Ty0>(&Kiosk): bool\n\t14: BrFalse(16)\nB4:\n\t15: Branch(22)\nB5:\n\t16: MoveLoc[0](Arg0: &mut Kiosk)\n\t17: Pop\n\t18: MoveLoc[1](Arg1: &KioskOwnerCap)\n\t19: Pop\n\t20: LdConst[2](U64: 03000000..)\n\t21: Abort\nB6:\n\t22: MoveLoc[0](Arg0: &mut Kiosk)\n\t23: MoveLoc[1](Arg1: &KioskOwnerCap)\n\t24: Call kiosk::uid_mut_as_owner(&mut Kiosk, &KioskOwnerCap): &mut UID\n\t25: LdFalse\n\t26: PackGeneric[0](ExtensionKey<Ty0>)\n\t27: Call dynamic_field::remove<ExtensionKey<Ty0>, Extension>(&mut UID, ExtensionKey<Ty0>): Extension\n\t28: Unpack[0](Extension)\n\t29: Pop\n\t30: Pop\n\t31: Call bag::destroy_empty(Bag)\n\t32: Ret\n}\npublic storage<Ty0: drop>(Arg0: Ty0, Arg1: &Kiosk): &Bag {\nB0:\n\t0: CopyLoc[1](Arg1: &Kiosk)\n\t1: Call is_installed<Ty0>(&Kiosk): bool\n\t2: BrFalse(4)\nB1:\n\t3: Branch(8)\nB2:\n\t4: MoveLoc[1](Arg1: &Kiosk)\n\t5: Pop\n\t6: LdConst[2](U64: 03000000..)\n\t7: Abort\nB3:\n\t8: MoveLoc[1](Arg1: &Kiosk)\n\t9: Call extension<Ty0>(&Kiosk): &Extension\n\t10: ImmBorrowField[1](Extension.storage: Bag)\n\t11: Ret\n}\npublic storage_mut<Ty0: drop>(Arg0: Ty0, Arg1: &mut Kiosk): &mut Bag {\nB0:\n\t0: CopyLoc[1](Arg1: &mut Kiosk)\n\t1: FreezeRef\n\t2: Call is_installed<Ty0>(&Kiosk): bool\n\t3: BrFalse(5)\nB1:\n\t4: Branch(9)\nB2:\n\t5: MoveLoc[1](Arg1: &mut Kiosk)\n\t6: Pop\n\t7: LdConst[2](U64: 03000000..)\n\t8: Abort\nB3:\n\t9: MoveLoc[1](Arg1: &mut Kiosk)\n\t10: Call extension_mut<Ty0>(&mut Kiosk): &mut Extension\n\t11: MutBorrowField[1](Extension.storage: Bag)\n\t12: Ret\n}\npublic place<Ty0: drop, Ty1: store + key>(Arg0: Ty0, Arg1: &mut Kiosk, Arg2: Ty1, Arg3: &TransferPolicy<Ty1>) {\nB0:\n\t0: CopyLoc[1](Arg1: &mut Kiosk)\n\t1: FreezeRef\n\t2: Call is_installed<Ty0>(&Kiosk): bool\n\t3: BrFalse(5)\nB1:\n\t4: Branch(9)\nB2:\n\t5: MoveLoc[1](Arg1: &mut Kiosk)\n\t6: Pop\n\t7: LdConst[2](U64: 03000000..)\n\t8: Abort\nB3:\n\t9: CopyLoc[1](Arg1: &mut Kiosk)\n\t10: FreezeRef\n\t11: Call can_place<Ty0>(&Kiosk): bool\n\t12: BrFalse(16)\nB4:\n\t13: LdTrue\n\t14: StLoc[4](loc0: bool)\n\t15: Branch(20)\nB5:\n\t16: CopyLoc[1](Arg1: &mut Kiosk)\n\t17: FreezeRef\n\t18: Call can_lock<Ty0>(&Kiosk): bool\n\t19: StLoc[4](loc0: bool)\nB6:\n\t20: MoveLoc[4](loc0: bool)\n\t21: BrFalse(23)\nB7:\n\t22: Branch(27)\nB8:\n\t23: MoveLoc[1](Arg1: &mut Kiosk)\n\t24: Pop\n\t25: LdConst[1](U64: 02000000..)\n\t26: Abort\nB9:\n\t27: MoveLoc[1](Arg1: &mut Kiosk)\n\t28: MoveLoc[2](Arg2: Ty1)\n\t29: Call kiosk::place_internal<Ty1>(&mut Kiosk, Ty1)\n\t30: Ret\n}\npublic lock<Ty0: drop, Ty1: store + key>(Arg0: Ty0, Arg1: &mut Kiosk, Arg2: Ty1, Arg3: &TransferPolicy<Ty1>) {\nB0:\n\t0: CopyLoc[1](Arg1: &mut Kiosk)\n\t1: FreezeRef\n\t2: Call is_installed<Ty0>(&Kiosk): bool\n\t3: BrFalse(5)\nB1:\n\t4: Branch(9)\nB2:\n\t5: MoveLoc[1](Arg1: &mut Kiosk)\n\t6: Pop\n\t7: LdConst[2](U64: 03000000..)\n\t8: Abort\nB3:\n\t9: CopyLoc[1](Arg1: &mut Kiosk)\n\t10: FreezeRef\n\t11: Call can_lock<Ty0>(&Kiosk): bool\n\t12: BrFalse(14)\nB4:\n\t13: Branch(18)\nB5:\n\t14: MoveLoc[1](Arg1: &mut Kiosk)\n\t15: Pop\n\t16: LdConst[1](U64: 02000000..)\n\t17: Abort\nB6:\n\t18: MoveLoc[1](Arg1: &mut Kiosk)\n\t19: MoveLoc[2](Arg2: Ty1)\n\t20: Call kiosk::lock_internal<Ty1>(&mut Kiosk, Ty1)\n\t21: Ret\n}\npublic is_installed<Ty0: drop>(Arg0: &Kiosk): bool {\nB0:\n\t0: MoveLoc[0](Arg0: &Kiosk)\n\t1: Call kiosk::uid(&Kiosk): &UID\n\t2: LdFalse\n\t3: PackGeneric[0](ExtensionKey<Ty0>)\n\t4: Call dynamic_field::exists_<ExtensionKey<Ty0>>(&UID, ExtensionKey<Ty0>): bool\n\t5: Ret\n}\npublic is_enabled<Ty0: drop>(Arg0: &Kiosk): bool {\nB0:\n\t0: MoveLoc[0](Arg0: &Kiosk)\n\t1: Call extension<Ty0>(&Kiosk): &Extension\n\t2: ImmBorrowField[0](Extension.is_enabled: bool)\n\t3: ReadRef\n\t4: Ret\n}\npublic can_place<Ty0: drop>(Arg0: &Kiosk): bool {\nB0:\n\t0: CopyLoc[0](Arg0: &Kiosk)\n\t1: Call is_enabled<Ty0>(&Kiosk): bool\n\t2: BrFalse(13)\nB1:\n\t3: MoveLoc[0](Arg0: &Kiosk)\n\t4: Call extension<Ty0>(&Kiosk): &Extension\n\t5: ImmBorrowField[2](Extension.permissions: u128)\n\t6: ReadRef\n\t7: LdConst[3](U128: 01000000..)\n\t8: BitAnd\n\t9: LdU128(0)\n\t10: Neq\n\t11: StLoc[1](loc0: bool)\n\t12: Branch(17)\nB2:\n\t13: MoveLoc[0](Arg0: &Kiosk)\n\t14: Pop\n\t15: LdFalse\n\t16: StLoc[1](loc0: bool)\nB3:\n\t17: MoveLoc[1](loc0: bool)\n\t18: Ret\n}\npublic can_lock<Ty0: drop>(Arg0: &Kiosk): bool {\nB0:\n\t0: CopyLoc[0](Arg0: &Kiosk)\n\t1: Call is_enabled<Ty0>(&Kiosk): bool\n\t2: BrFalse(13)\nB1:\n\t3: MoveLoc[0](Arg0: &Kiosk)\n\t4: Call extension<Ty0>(&Kiosk): &Extension\n\t5: ImmBorrowField[2](Extension.permissions: u128)\n\t6: ReadRef\n\t7: LdConst[4](U128: 02000000..)\n\t8: BitAnd\n\t9: LdU128(0)\n\t10: Neq\n\t11: StLoc[1](loc0: bool)\n\t12: Branch(17)\nB2:\n\t13: MoveLoc[0](Arg0: &Kiosk)\n\t14: Pop\n\t15: LdFalse\n\t16: StLoc[1](loc0: bool)\nB3:\n\t17: MoveLoc[1](loc0: bool)\n\t18: Ret\n}\nextension<Ty0: drop>(Arg0: &Kiosk): &Extension {\nB0:\n\t0: MoveLoc[0](Arg0: &Kiosk)\n\t1: Call kiosk::uid(&Kiosk): &UID\n\t2: LdFalse\n\t3: PackGeneric[0](ExtensionKey<Ty0>)\n\t4: Call dynamic_field::borrow<ExtensionKey<Ty0>, Extension>(&UID, ExtensionKey<Ty0>): &Extension\n\t5: Ret\n}\nextension_mut<Ty0: drop>(Arg0: &mut Kiosk): &mut Extension {\nB0:\n\t0: MoveLoc[0](Arg0: &mut Kiosk)\n\t1: Call kiosk::uid_mut_internal(&mut Kiosk): &mut UID\n\t2: LdFalse\n\t3: PackGeneric[0](ExtensionKey<Ty0>)\n\t4: Call dynamic_field::borrow_mut<ExtensionKey<Ty0>, Extension>(&mut UID, ExtensionKey<Ty0>): &mut Extension\n\t5: Ret\n}\n\nConstants [\n\t0 => u64: 0000000000000000\n\t1 => u64: 0200000000000000\n\t2 => u64: 0300000000000000\n\t3 => u128: 01000000000000000000000000000000\n\t4 => u128: 02000000000000000000000000000000\n]\n}",
          "linked_table": "// Move bytecode v6\nmodule 2.linked_table {\nuse 0000000000000000000000000000000000000000000000000000000000000001::option;\nuse 0000000000000000000000000000000000000000000000000000000000000002::dynamic_field;\nuse 0000000000000000000000000000000000000000000000000000000000000002::object;\nuse 0000000000000000000000000000000000000000000000000000000000000002::tx_context;\n\n\nstruct LinkedTable<Ty0: copy + drop + store, phantom Ty1: store> has store, key {\n\tid: UID,\n\tsize: u64,\n\thead: Option<Ty0>,\n\ttail: Option<Ty0>\n}\nstruct Node<Ty0: copy + drop + store, Ty1: store> has store {\n\tprev: Option<Ty0>,\n\tnext: Option<Ty0>,\n\tvalue: Ty1\n}\n\npublic new<Ty0: copy + drop + store, Ty1: store>(Arg0: &mut TxContext): LinkedTable<Ty0, Ty1> {\nB0:\n\t0: MoveLoc[0](Arg0: &mut TxContext)\n\t1: Call object::new(&mut TxContext): UID\n\t2: LdU64(0)\n\t3: Call option::none<Ty0>(): Option<Ty0>\n\t4: Call option::none<Ty0>(): Option<Ty0>\n\t5: PackGeneric[0](LinkedTable<Ty0, Ty1>)\n\t6: Ret\n}\npublic front<Ty0: copy + drop + store, Ty1: store>(Arg0: &LinkedTable<Ty0, Ty1>): &Option<Ty0> {\nB0:\n\t0: MoveLoc[0](Arg0: &LinkedTable<Ty0, Ty1>)\n\t1: ImmBorrowFieldGeneric[0](LinkedTable.head: Option<Ty0>)\n\t2: Ret\n}\npublic back<Ty0: copy + drop + store, Ty1: store>(Arg0: &LinkedTable<Ty0, Ty1>): &Option<Ty0> {\nB0:\n\t0: MoveLoc[0](Arg0: &LinkedTable<Ty0, Ty1>)\n\t1: ImmBorrowFieldGeneric[1](LinkedTable.tail: Option<Ty0>)\n\t2: Ret\n}\npublic push_front<Ty0: copy + drop + store, Ty1: store>(Arg0: &mut LinkedTable<Ty0, Ty1>, Arg1: Ty0, Arg2: Ty1) {\nL0:\tloc3: Ty0\nL1:\tloc4: Option<Ty0>\nB0:\n\t0: CopyLoc[0](Arg0: &mut LinkedTable<Ty0, Ty1>)\n\t1: MutBorrowFieldGeneric[0](LinkedTable.head: Option<Ty0>)\n\t2: CopyLoc[1](Arg1: Ty0)\n\t3: Call option::swap_or_fill<Ty0>(&mut Option<Ty0>, Ty0): Option<Ty0>\n\t4: StLoc[5](loc2: Option<Ty0>)\n\t5: CopyLoc[0](Arg0: &mut LinkedTable<Ty0, Ty1>)\n\t6: ImmBorrowFieldGeneric[1](LinkedTable.tail: Option<Ty0>)\n\t7: Call option::is_none<Ty0>(&Option<Ty0>): bool\n\t8: BrFalse(13)\nB1:\n\t9: CopyLoc[0](Arg0: &mut LinkedTable<Ty0, Ty1>)\n\t10: MutBorrowFieldGeneric[1](LinkedTable.tail: Option<Ty0>)\n\t11: CopyLoc[1](Arg1: Ty0)\n\t12: Call option::fill<Ty0>(&mut Option<Ty0>, Ty0)\nB2:\n\t13: Call option::none<Ty0>(): Option<Ty0>\n\t14: StLoc[7](loc4: Option<Ty0>)\n\t15: ImmBorrowLoc[5](loc2: Option<Ty0>)\n\t16: Call option::is_some<Ty0>(&Option<Ty0>): bool\n\t17: BrFalse(33)\nB3:\n\t18: MoveLoc[5](loc2: Option<Ty0>)\n\t19: Call option::destroy_some<Ty0>(Option<Ty0>): Ty0\n\t20: StLoc[6](loc3: Ty0)\n\t21: CopyLoc[1](Arg1: Ty0)\n\t22: Call option::some<Ty0>(Ty0): Option<Ty0>\n\t23: CopyLoc[0](Arg0: &mut LinkedTable<Ty0, Ty1>)\n\t24: MutBorrowFieldGeneric[2](LinkedTable.id: UID)\n\t25: CopyLoc[6](loc3: Ty0)\n\t26: Call dynamic_field::borrow_mut<Ty0, Node<Ty0, Ty1>>(&mut UID, Ty0): &mut Node<Ty0, Ty1>\n\t27: MutBorrowFieldGeneric[3](Node.prev: Option<Ty0>)\n\t28: WriteRef\n\t29: MoveLoc[6](loc3: Ty0)\n\t30: Call option::some<Ty0>(Ty0): Option<Ty0>\n\t31: StLoc[3](loc0: Option<Ty0>)\n\t32: Branch(35)\nB4:\n\t33: Call option::none<Ty0>(): Option<Ty0>\n\t34: StLoc[3](loc0: Option<Ty0>)\nB5:\n\t35: MoveLoc[3](loc0: Option<Ty0>)\n\t36: StLoc[4](loc1: Option<Ty0>)\n\t37: CopyLoc[0](Arg0: &mut LinkedTable<Ty0, Ty1>)\n\t38: MutBorrowFieldGeneric[2](LinkedTable.id: UID)\n\t39: MoveLoc[1](Arg1: Ty0)\n\t40: MoveLoc[7](loc4: Option<Ty0>)\n\t41: MoveLoc[4](loc1: Option<Ty0>)\n\t42: MoveLoc[2](Arg2: Ty1)\n\t43: PackGeneric[1](Node<Ty0, Ty1>)\n\t44: Call dynamic_field::add<Ty0, Node<Ty0, Ty1>>(&mut UID, Ty0, Node<Ty0, Ty1>)\n\t45: CopyLoc[0](Arg0: &mut LinkedTable<Ty0, Ty1>)\n\t46: ImmBorrowFieldGeneric[4](LinkedTable.size: u64)\n\t47: ReadRef\n\t48: LdU64(1)\n\t49: Add\n\t50: MoveLoc[0](Arg0: &mut LinkedTable<Ty0, Ty1>)\n\t51: MutBorrowFieldGeneric[4](LinkedTable.size: u64)\n\t52: WriteRef\n\t53: Ret\n}\npublic push_back<Ty0: copy + drop + store, Ty1: store>(Arg0: &mut LinkedTable<Ty0, Ty1>, Arg1: Ty0, Arg2: Ty1) {\nL0:\tloc3: Ty0\nL1:\tloc4: Option<Ty0>\nB0:\n\t0: CopyLoc[0](Arg0: &mut LinkedTable<Ty0, Ty1>)\n\t1: ImmBorrowFieldGeneric[0](LinkedTable.head: Option<Ty0>)\n\t2: Call option::is_none<Ty0>(&Option<Ty0>): bool\n\t3: BrFalse(8)\nB1:\n\t4: CopyLoc[0](Arg0: &mut LinkedTable<Ty0, Ty1>)\n\t5: MutBorrowFieldGeneric[0](LinkedTable.head: Option<Ty0>)\n\t6: CopyLoc[1](Arg1: Ty0)\n\t7: Call option::fill<Ty0>(&mut Option<Ty0>, Ty0)\nB2:\n\t8: CopyLoc[0](Arg0: &mut LinkedTable<Ty0, Ty1>)\n\t9: MutBorrowFieldGeneric[1](LinkedTable.tail: Option<Ty0>)\n\t10: CopyLoc[1](Arg1: Ty0)\n\t11: Call option::swap_or_fill<Ty0>(&mut Option<Ty0>, Ty0): Option<Ty0>\n\t12: StLoc[5](loc2: Option<Ty0>)\n\t13: ImmBorrowLoc[5](loc2: Option<Ty0>)\n\t14: Call option::is_some<Ty0>(&Option<Ty0>): bool\n\t15: BrFalse(31)\nB3:\n\t16: MoveLoc[5](loc2: Option<Ty0>)\n\t17: Call option::destroy_some<Ty0>(Option<Ty0>): Ty0\n\t18: StLoc[6](loc3: Ty0)\n\t19: CopyLoc[1](Arg1: Ty0)\n\t20: Call option::some<Ty0>(Ty0): Option<Ty0>\n\t21: CopyLoc[0](Arg0: &mut LinkedTable<Ty0, Ty1>)\n\t22: MutBorrowFieldGeneric[2](LinkedTable.id: UID)\n\t23: CopyLoc[6](loc3: Ty0)\n\t24: Call dynamic_field::borrow_mut<Ty0, Node<Ty0, Ty1>>(&mut UID, Ty0): &mut Node<Ty0, Ty1>\n\t25: MutBorrowFieldGeneric[5](Node.next: Option<Ty0>)\n\t26: WriteRef\n\t27: MoveLoc[6](loc3: Ty0)\n\t28: Call option::some<Ty0>(Ty0): Option<Ty0>\n\t29: StLoc[3](loc0: Option<Ty0>)\n\t30: Branch(33)\nB4:\n\t31: Call option::none<Ty0>(): Option<Ty0>\n\t32: StLoc[3](loc0: Option<Ty0>)\nB5:\n\t33: MoveLoc[3](loc0: Option<Ty0>)\n\t34: StLoc[7](loc4: Option<Ty0>)\n\t35: Call option::none<Ty0>(): Option<Ty0>\n\t36: StLoc[4](loc1: Option<Ty0>)\n\t37: CopyLoc[0](Arg0: &mut LinkedTable<Ty0, Ty1>)\n\t38: MutBorrowFieldGeneric[2](LinkedTable.id: UID)\n\t39: MoveLoc[1](Arg1: Ty0)\n\t40: MoveLoc[7](loc4: Option<Ty0>)\n\t41: MoveLoc[4](loc1: Option<Ty0>)\n\t42: MoveLoc[2](Arg2: Ty1)\n\t43: PackGeneric[1](Node<Ty0, Ty1>)\n\t44: Call dynamic_field::add<Ty0, Node<Ty0, Ty1>>(&mut UID, Ty0, Node<Ty0, Ty1>)\n\t45: CopyLoc[0](Arg0: &mut LinkedTable<Ty0, Ty1>)\n\t46: ImmBorrowFieldGeneric[4](LinkedTable.size: u64)\n\t47: ReadRef\n\t48: LdU64(1)\n\t49: Add\n\t50: MoveLoc[0](Arg0: &mut LinkedTable<Ty0, Ty1>)\n\t51: MutBorrowFieldGeneric[4](LinkedTable.size: u64)\n\t52: WriteRef\n\t53: Ret\n}\npublic borrow<Ty0: copy + drop + store, Ty1: store>(Arg0: &LinkedTable<Ty0, Ty1>, Arg1: Ty0): &Ty1 {\nB0:\n\t0: MoveLoc[0](Arg0: &LinkedTable<Ty0, Ty1>)\n\t1: ImmBorrowFieldGeneric[2](LinkedTable.id: UID)\n\t2: MoveLoc[1](Arg1: Ty0)\n\t3: Call dynamic_field::borrow<Ty0, Node<Ty0, Ty1>>(&UID, Ty0): &Node<Ty0, Ty1>\n\t4: ImmBorrowFieldGeneric[6](Node.value: Ty1)\n\t5: Ret\n}\npublic borrow_mut<Ty0: copy + drop + store, Ty1: store>(Arg0: &mut LinkedTable<Ty0, Ty1>, Arg1: Ty0): &mut Ty1 {\nB0:\n\t0: MoveLoc[0](Arg0: &mut LinkedTable<Ty0, Ty1>)\n\t1: MutBorrowFieldGeneric[2](LinkedTable.id: UID)\n\t2: MoveLoc[1](Arg1: Ty0)\n\t3: Call dynamic_field::borrow_mut<Ty0, Node<Ty0, Ty1>>(&mut UID, Ty0): &mut Node<Ty0, Ty1>\n\t4: MutBorrowFieldGeneric[6](Node.value: Ty1)\n\t5: Ret\n}\npublic prev<Ty0: copy + drop + store, Ty1: store>(Arg0: &LinkedTable<Ty0, Ty1>, Arg1: Ty0): &Option<Ty0> {\nB0:\n\t0: MoveLoc[0](Arg0: &LinkedTable<Ty0, Ty1>)\n\t1: ImmBorrowFieldGeneric[2](LinkedTable.id: UID)\n\t2: MoveLoc[1](Arg1: Ty0)\n\t3: Call dynamic_field::borrow<Ty0, Node<Ty0, Ty1>>(&UID, Ty0): &Node<Ty0, Ty1>\n\t4: ImmBorrowFieldGeneric[3](Node.prev: Option<Ty0>)\n\t5: Ret\n}\npublic next<Ty0: copy + drop + store, Ty1: store>(Arg0: &LinkedTable<Ty0, Ty1>, Arg1: Ty0): &Option<Ty0> {\nB0:\n\t0: MoveLoc[0](Arg0: &LinkedTable<Ty0, Ty1>)\n\t1: ImmBorrowFieldGeneric[2](LinkedTable.id: UID)\n\t2: MoveLoc[1](Arg1: Ty0)\n\t3: Call dynamic_field::borrow<Ty0, Node<Ty0, Ty1>>(&UID, Ty0): &Node<Ty0, Ty1>\n\t4: ImmBorrowFieldGeneric[5](Node.next: Option<Ty0>)\n\t5: Ret\n}\npublic remove<Ty0: copy + drop + store, Ty1: store>(Arg0: &mut LinkedTable<Ty0, Ty1>, Arg1: Ty0): Ty1 {\nL0:\tloc2: Ty1\nB0:\n\t0: CopyLoc[0](Arg0: &mut LinkedTable<Ty0, Ty1>)\n\t1: MutBorrowFieldGeneric[2](LinkedTable.id: UID)\n\t2: CopyLoc[1](Arg1: Ty0)\n\t3: Call dynamic_field::remove<Ty0, Node<Ty0, Ty1>>(&mut UID, Ty0): Node<Ty0, Ty1>\n\t4: UnpackGeneric[1](Node<Ty0, Ty1>)\n\t5: StLoc[4](loc2: Ty1)\n\t6: StLoc[2](loc0: Option<Ty0>)\n\t7: StLoc[3](loc1: Option<Ty0>)\n\t8: CopyLoc[0](Arg0: &mut LinkedTable<Ty0, Ty1>)\n\t9: ImmBorrowFieldGeneric[4](LinkedTable.size: u64)\n\t10: ReadRef\n\t11: LdU64(1)\n\t12: Sub\n\t13: CopyLoc[0](Arg0: &mut LinkedTable<Ty0, Ty1>)\n\t14: MutBorrowFieldGeneric[4](LinkedTable.size: u64)\n\t15: WriteRef\n\t16: ImmBorrowLoc[3](loc1: Option<Ty0>)\n\t17: Call option::is_some<Ty0>(&Option<Ty0>): bool\n\t18: BrFalse(28)\nB1:\n\t19: CopyLoc[2](loc0: Option<Ty0>)\n\t20: CopyLoc[0](Arg0: &mut LinkedTable<Ty0, Ty1>)\n\t21: MutBorrowFieldGeneric[2](LinkedTable.id: UID)\n\t22: ImmBorrowLoc[3](loc1: Option<Ty0>)\n\t23: Call option::borrow<Ty0>(&Option<Ty0>): &Ty0\n\t24: ReadRef\n\t25: Call dynamic_field::borrow_mut<Ty0, Node<Ty0, Ty1>>(&mut UID, Ty0): &mut Node<Ty0, Ty1>\n\t26: MutBorrowFieldGeneric[5](Node.next: Option<Ty0>)\n\t27: WriteRef\nB2:\n\t28: ImmBorrowLoc[2](loc0: Option<Ty0>)\n\t29: Call option::is_some<Ty0>(&Option<Ty0>): bool\n\t30: BrFalse(40)\nB3:\n\t31: CopyLoc[3](loc1: Option<Ty0>)\n\t32: CopyLoc[0](Arg0: &mut LinkedTable<Ty0, Ty1>)\n\t33: MutBorrowFieldGeneric[2](LinkedTable.id: UID)\n\t34: ImmBorrowLoc[2](loc0: Option<Ty0>)\n\t35: Call option::borrow<Ty0>(&Option<Ty0>): &Ty0\n\t36: ReadRef\n\t37: Call dynamic_field::borrow_mut<Ty0, Node<Ty0, Ty1>>(&mut UID, Ty0): &mut Node<Ty0, Ty1>\n\t38: MutBorrowFieldGeneric[3](Node.prev: Option<Ty0>)\n\t39: WriteRef\nB4:\n\t40: CopyLoc[0](Arg0: &mut LinkedTable<Ty0, Ty1>)\n\t41: ImmBorrowFieldGeneric[0](LinkedTable.head: Option<Ty0>)\n\t42: Call option::borrow<Ty0>(&Option<Ty0>): &Ty0\n\t43: ImmBorrowLoc[1](Arg1: Ty0)\n\t44: Eq\n\t45: BrFalse(50)\nB5:\n\t46: MoveLoc[2](loc0: Option<Ty0>)\n\t47: CopyLoc[0](Arg0: &mut LinkedTable<Ty0, Ty1>)\n\t48: MutBorrowFieldGeneric[0](LinkedTable.head: Option<Ty0>)\n\t49: WriteRef\nB6:\n\t50: CopyLoc[0](Arg0: &mut LinkedTable<Ty0, Ty1>)\n\t51: ImmBorrowFieldGeneric[1](LinkedTable.tail: Option<Ty0>)\n\t52: Call option::borrow<Ty0>(&Option<Ty0>): &Ty0\n\t53: ImmBorrowLoc[1](Arg1: Ty0)\n\t54: Eq\n\t55: BrFalse(61)\nB7:\n\t56: MoveLoc[3](loc1: Option<Ty0>)\n\t57: MoveLoc[0](Arg0: &mut LinkedTable<Ty0, Ty1>)\n\t58: MutBorrowFieldGeneric[1](LinkedTable.tail: Option<Ty0>)\n\t59: WriteRef\n\t60: Branch(63)\nB8:\n\t61: MoveLoc[0](Arg0: &mut LinkedTable<Ty0, Ty1>)\n\t62: Pop\nB9:\n\t63: MoveLoc[4](loc2: Ty1)\n\t64: Ret\n}\npublic pop_front<Ty0: copy + drop + store, Ty1: store>(Arg0: &mut LinkedTable<Ty0, Ty1>): Ty0 * Ty1 {\nB0:\n\t0: CopyLoc[0](Arg0: &mut LinkedTable<Ty0, Ty1>)\n\t1: ImmBorrowFieldGeneric[0](LinkedTable.head: Option<Ty0>)\n\t2: Call option::is_some<Ty0>(&Option<Ty0>): bool\n\t3: BrFalse(5)\nB1:\n\t4: Branch(9)\nB2:\n\t5: MoveLoc[0](Arg0: &mut LinkedTable<Ty0, Ty1>)\n\t6: Pop\n\t7: LdConst[1](U64: 01000000..)\n\t8: Abort\nB3:\n\t9: CopyLoc[0](Arg0: &mut LinkedTable<Ty0, Ty1>)\n\t10: ImmBorrowFieldGeneric[0](LinkedTable.head: Option<Ty0>)\n\t11: Call option::borrow<Ty0>(&Option<Ty0>): &Ty0\n\t12: ReadRef\n\t13: StLoc[1](loc0: Ty0)\n\t14: CopyLoc[1](loc0: Ty0)\n\t15: MoveLoc[0](Arg0: &mut LinkedTable<Ty0, Ty1>)\n\t16: MoveLoc[1](loc0: Ty0)\n\t17: Call remove<Ty0, Ty1>(&mut LinkedTable<Ty0, Ty1>, Ty0): Ty1\n\t18: Ret\n}\npublic pop_back<Ty0: copy + drop + store, Ty1: store>(Arg0: &mut LinkedTable<Ty0, Ty1>): Ty0 * Ty1 {\nB0:\n\t0: CopyLoc[0](Arg0: &mut LinkedTable<Ty0, Ty1>)\n\t1: ImmBorrowFieldGeneric[1](LinkedTable.tail: Option<Ty0>)\n\t2: Call option::is_some<Ty0>(&Option<Ty0>): bool\n\t3: BrFalse(5)\nB1:\n\t4: Branch(9)\nB2:\n\t5: MoveLoc[0](Arg0: &mut LinkedTable<Ty0, Ty1>)\n\t6: Pop\n\t7: LdConst[1](U64: 01000000..)\n\t8: Abort\nB3:\n\t9: CopyLoc[0](Arg0: &mut LinkedTable<Ty0, Ty1>)\n\t10: ImmBorrowFieldGeneric[1](LinkedTable.tail: Option<Ty0>)\n\t11: Call option::borrow<Ty0>(&Option<Ty0>): &Ty0\n\t12: ReadRef\n\t13: StLoc[1](loc0: Ty0)\n\t14: CopyLoc[1](loc0: Ty0)\n\t15: MoveLoc[0](Arg0: &mut LinkedTable<Ty0, Ty1>)\n\t16: MoveLoc[1](loc0: Ty0)\n\t17: Call remove<Ty0, Ty1>(&mut LinkedTable<Ty0, Ty1>, Ty0): Ty1\n\t18: Ret\n}\npublic contains<Ty0: copy + drop + store, Ty1: store>(Arg0: &LinkedTable<Ty0, Ty1>, Arg1: Ty0): bool {\nB0:\n\t0: MoveLoc[0](Arg0: &LinkedTable<Ty0, Ty1>)\n\t1: ImmBorrowFieldGeneric[2](LinkedTable.id: UID)\n\t2: MoveLoc[1](Arg1: Ty0)\n\t3: Call dynamic_field::exists_with_type<Ty0, Node<Ty0, Ty1>>(&UID, Ty0): bool\n\t4: Ret\n}\npublic length<Ty0: copy + drop + store, Ty1: store>(Arg0: &LinkedTable<Ty0, Ty1>): u64 {\nB0:\n\t0: MoveLoc[0](Arg0: &LinkedTable<Ty0, Ty1>)\n\t1: ImmBorrowFieldGeneric[4](LinkedTable.size: u64)\n\t2: ReadRef\n\t3: Ret\n}\npublic is_empty<Ty0: copy + drop + store, Ty1: store>(Arg0: &LinkedTable<Ty0, Ty1>): bool {\nB0:\n\t0: MoveLoc[0](Arg0: &LinkedTable<Ty0, Ty1>)\n\t1: ImmBorrowFieldGeneric[4](LinkedTable.size: u64)\n\t2: ReadRef\n\t3: LdU64(0)\n\t4: Eq\n\t5: Ret\n}\npublic destroy_empty<Ty0: copy + drop + store, Ty1: store>(Arg0: LinkedTable<Ty0, Ty1>) {\nL0:\tloc1: u64\nB0:\n\t0: MoveLoc[0](Arg0: LinkedTable<Ty0, Ty1>)\n\t1: UnpackGeneric[0](LinkedTable<Ty0, Ty1>)\n\t2: Pop\n\t3: Pop\n\t4: StLoc[2](loc1: u64)\n\t5: StLoc[1](loc0: UID)\n\t6: MoveLoc[2](loc1: u64)\n\t7: LdU64(0)\n\t8: Eq\n\t9: BrFalse(11)\nB1:\n\t10: Branch(13)\nB2:\n\t11: LdConst[0](U64: 00000000..)\n\t12: Abort\nB3:\n\t13: MoveLoc[1](loc0: UID)\n\t14: Call object::delete(UID)\n\t15: Ret\n}\npublic drop<Ty0: copy + drop + store, Ty1: drop + store>(Arg0: LinkedTable<Ty0, Ty1>) {\nB0:\n\t0: MoveLoc[0](Arg0: LinkedTable<Ty0, Ty1>)\n\t1: UnpackGeneric[0](LinkedTable<Ty0, Ty1>)\n\t2: Pop\n\t3: Pop\n\t4: Pop\n\t5: Call object::delete(UID)\n\t6: Ret\n}\n\nConstants [\n\t0 => u64: 0000000000000000\n\t1 => u64: 0100000000000000\n]\n}",
          "math": "// Move bytecode v6\nmodule 2.math {\n\n\npublic max(Arg0: u64, Arg1: u64): u64 {\nB0:\n\t0: CopyLoc[0](Arg0: u64)\n\t1: CopyLoc[1](Arg1: u64)\n\t2: Gt\n\t3: BrFalse(7)\nB1:\n\t4: MoveLoc[0](Arg0: u64)\n\t5: StLoc[2](loc0: u64)\n\t6: Branch(9)\nB2:\n\t7: MoveLoc[1](Arg1: u64)\n\t8: StLoc[2](loc0: u64)\nB3:\n\t9: MoveLoc[2](loc0: u64)\n\t10: Ret\n}\npublic min(Arg0: u64, Arg1: u64): u64 {\nB0:\n\t0: CopyLoc[0](Arg0: u64)\n\t1: CopyLoc[1](Arg1: u64)\n\t2: Lt\n\t3: BrFalse(7)\nB1:\n\t4: MoveLoc[0](Arg0: u64)\n\t5: StLoc[2](loc0: u64)\n\t6: Branch(9)\nB2:\n\t7: MoveLoc[1](Arg1: u64)\n\t8: StLoc[2](loc0: u64)\nB3:\n\t9: MoveLoc[2](loc0: u64)\n\t10: Ret\n}\npublic diff(Arg0: u64, Arg1: u64): u64 {\nB0:\n\t0: CopyLoc[0](Arg0: u64)\n\t1: CopyLoc[1](Arg1: u64)\n\t2: Gt\n\t3: BrFalse(9)\nB1:\n\t4: MoveLoc[0](Arg0: u64)\n\t5: MoveLoc[1](Arg1: u64)\n\t6: Sub\n\t7: StLoc[2](loc0: u64)\n\t8: Branch(13)\nB2:\n\t9: MoveLoc[1](Arg1: u64)\n\t10: MoveLoc[0](Arg0: u64)\n\t11: Sub\n\t12: StLoc[2](loc0: u64)\nB3:\n\t13: MoveLoc[2](loc0: u64)\n\t14: Ret\n}\npublic pow(Arg0: u64, Arg1: u8): u64 {\nB0:\n\t0: LdU64(1)\n\t1: StLoc[2](loc0: u64)\nB1:\n\t2: CopyLoc[1](Arg1: u8)\n\t3: LdU8(1)\n\t4: Ge\n\t5: BrFalse(31)\nB2:\n\t6: Branch(7)\nB3:\n\t7: CopyLoc[1](Arg1: u8)\n\t8: LdU8(2)\n\t9: Mod\n\t10: LdU8(0)\n\t11: Eq\n\t12: BrFalse(22)\nB4:\n\t13: CopyLoc[0](Arg0: u64)\n\t14: MoveLoc[0](Arg0: u64)\n\t15: Mul\n\t16: StLoc[0](Arg0: u64)\n\t17: MoveLoc[1](Arg1: u8)\n\t18: LdU8(2)\n\t19: Div\n\t20: StLoc[1](Arg1: u8)\n\t21: Branch(30)\nB5:\n\t22: MoveLoc[2](loc0: u64)\n\t23: CopyLoc[0](Arg0: u64)\n\t24: Mul\n\t25: StLoc[2](loc0: u64)\n\t26: MoveLoc[1](Arg1: u8)\n\t27: LdU8(1)\n\t28: Sub\n\t29: StLoc[1](Arg1: u8)\nB6:\n\t30: Branch(2)\nB7:\n\t31: MoveLoc[2](loc0: u64)\n\t32: Ret\n}\npublic sqrt(Arg0: u64): u64 {\nL0:\tloc1: u128\nL1:\tloc2: u128\nB0:\n\t0: LdU128(18446744073709551616)\n\t1: StLoc[1](loc0: u128)\n\t2: LdU128(0)\n\t3: StLoc[2](loc1: u128)\n\t4: MoveLoc[0](Arg0: u64)\n\t5: CastU128\n\t6: StLoc[3](loc2: u128)\nB1:\n\t7: CopyLoc[1](loc0: u128)\n\t8: LdU128(0)\n\t9: Neq\n\t10: BrFalse(40)\nB2:\n\t11: Branch(12)\nB3:\n\t12: CopyLoc[3](loc2: u128)\n\t13: CopyLoc[2](loc1: u128)\n\t14: CopyLoc[1](loc0: u128)\n\t15: Add\n\t16: Ge\n\t17: BrFalse(31)\nB4:\n\t18: MoveLoc[3](loc2: u128)\n\t19: CopyLoc[2](loc1: u128)\n\t20: CopyLoc[1](loc0: u128)\n\t21: Add\n\t22: Sub\n\t23: StLoc[3](loc2: u128)\n\t24: MoveLoc[2](loc1: u128)\n\t25: LdU8(1)\n\t26: Shr\n\t27: CopyLoc[1](loc0: u128)\n\t28: Add\n\t29: StLoc[2](loc1: u128)\n\t30: Branch(35)\nB5:\n\t31: MoveLoc[2](loc1: u128)\n\t32: LdU8(1)\n\t33: Shr\n\t34: StLoc[2](loc1: u128)\nB6:\n\t35: MoveLoc[1](loc0: u128)\n\t36: LdU8(2)\n\t37: Shr\n\t38: StLoc[1](loc0: u128)\n\t39: Branch(7)\nB7:\n\t40: MoveLoc[2](loc1: u128)\n\t41: CastU64\n\t42: Ret\n}\npublic sqrt_u128(Arg0: u128): u128 {\nL0:\tloc1: u256\nL1:\tloc2: u256\nB0:\n\t0: LdU256(340282366920938463463374607431768211456)\n\t1: StLoc[1](loc0: u256)\n\t2: LdU256(0)\n\t3: StLoc[2](loc1: u256)\n\t4: MoveLoc[0](Arg0: u128)\n\t5: CastU256\n\t6: StLoc[3](loc2: u256)\nB1:\n\t7: CopyLoc[1](loc0: u256)\n\t8: LdU256(0)\n\t9: Neq\n\t10: BrFalse(40)\nB2:\n\t11: Branch(12)\nB3:\n\t12: CopyLoc[3](loc2: u256)\n\t13: CopyLoc[2](loc1: u256)\n\t14: CopyLoc[1](loc0: u256)\n\t15: Add\n\t16: Ge\n\t17: BrFalse(31)\nB4:\n\t18: MoveLoc[3](loc2: u256)\n\t19: CopyLoc[2](loc1: u256)\n\t20: CopyLoc[1](loc0: u256)\n\t21: Add\n\t22: Sub\n\t23: StLoc[3](loc2: u256)\n\t24: MoveLoc[2](loc1: u256)\n\t25: LdU8(1)\n\t26: Shr\n\t27: CopyLoc[1](loc0: u256)\n\t28: Add\n\t29: StLoc[2](loc1: u256)\n\t30: Branch(35)\nB5:\n\t31: MoveLoc[2](loc1: u256)\n\t32: LdU8(1)\n\t33: Shr\n\t34: StLoc[2](loc1: u256)\nB6:\n\t35: MoveLoc[1](loc0: u256)\n\t36: LdU8(2)\n\t37: Shr\n\t38: StLoc[1](loc0: u256)\n\t39: Branch(7)\nB7:\n\t40: MoveLoc[2](loc1: u256)\n\t41: CastU128\n\t42: Ret\n}\npublic divide_and_round_up(Arg0: u64, Arg1: u64): u64 {\nB0:\n\t0: CopyLoc[0](Arg0: u64)\n\t1: CopyLoc[1](Arg1: u64)\n\t2: Mod\n\t3: LdU64(0)\n\t4: Eq\n\t5: BrFalse(11)\nB1:\n\t6: MoveLoc[0](Arg0: u64)\n\t7: MoveLoc[1](Arg1: u64)\n\t8: Div\n\t9: StLoc[2](loc0: u64)\n\t10: Branch(17)\nB2:\n\t11: MoveLoc[0](Arg0: u64)\n\t12: MoveLoc[1](Arg1: u64)\n\t13: Div\n\t14: LdU64(1)\n\t15: Add\n\t16: StLoc[2](loc0: u64)\nB3:\n\t17: MoveLoc[2](loc0: u64)\n\t18: Ret\n}\n}",
          "object": "// Move bytecode v6\nmodule 2.object {\nuse 0000000000000000000000000000000000000000000000000000000000000001::bcs;\nuse 0000000000000000000000000000000000000000000000000000000000000002::address;\nuse 0000000000000000000000000000000000000000000000000000000000000002::tx_context;\n\n\nstruct ID has copy, drop, store {\n\tbytes: address\n}\nstruct UID has store {\n\tid: ID\n}\n\npublic id_to_bytes(Arg0: &ID): vector<u8> {\nB0:\n\t0: MoveLoc[0](Arg0: &ID)\n\t1: ImmBorrowField[0](ID.bytes: address)\n\t2: Call bcs::to_bytes<address>(&address): vector<u8>\n\t3: Ret\n}\npublic id_to_address(Arg0: &ID): address {\nB0:\n\t0: MoveLoc[0](Arg0: &ID)\n\t1: ImmBorrowField[0](ID.bytes: address)\n\t2: ReadRef\n\t3: Ret\n}\npublic id_from_bytes(Arg0: vector<u8>): ID {\nB0:\n\t0: MoveLoc[0](Arg0: vector<u8>)\n\t1: Call address::from_bytes(vector<u8>): address\n\t2: Call id_from_address(address): ID\n\t3: Ret\n}\npublic id_from_address(Arg0: address): ID {\nB0:\n\t0: MoveLoc[0](Arg0: address)\n\t1: Pack[0](ID)\n\t2: Ret\n}\nsui_system_state(Arg0: &TxContext): UID {\nB0:\n\t0: MoveLoc[0](Arg0: &TxContext)\n\t1: Call tx_context::sender(&TxContext): address\n\t2: LdConst[4](Address: 00000000..)\n\t3: Eq\n\t4: BrFalse(6)\nB1:\n\t5: Branch(8)\nB2:\n\t6: LdConst[3](U64: 00000000..)\n\t7: Abort\nB3:\n\t8: LdConst[0](Address: 00000000..)\n\t9: Pack[0](ID)\n\t10: Pack[1](UID)\n\t11: Ret\n}\npublic(friend) clock(): UID {\nB0:\n\t0: LdConst[1](Address: 00000000..)\n\t1: Pack[0](ID)\n\t2: Pack[1](UID)\n\t3: Ret\n}\npublic(friend) authenticator_state(): UID {\nB0:\n\t0: LdConst[2](Address: 00000000..)\n\t1: Pack[0](ID)\n\t2: Pack[1](UID)\n\t3: Ret\n}\npublic uid_as_inner(Arg0: &UID): &ID {\nB0:\n\t0: MoveLoc[0](Arg0: &UID)\n\t1: ImmBorrowField[1](UID.id: ID)\n\t2: Ret\n}\npublic uid_to_inner(Arg0: &UID): ID {\nB0:\n\t0: MoveLoc[0](Arg0: &UID)\n\t1: ImmBorrowField[1](UID.id: ID)\n\t2: ReadRef\n\t3: Ret\n}\npublic uid_to_bytes(Arg0: &UID): vector<u8> {\nB0:\n\t0: MoveLoc[0](Arg0: &UID)\n\t1: ImmBorrowField[1](UID.id: ID)\n\t2: ImmBorrowField[0](ID.bytes: address)\n\t3: Call bcs::to_bytes<address>(&address): vector<u8>\n\t4: Ret\n}\npublic uid_to_address(Arg0: &UID): address {\nB0:\n\t0: MoveLoc[0](Arg0: &UID)\n\t1: ImmBorrowField[1](UID.id: ID)\n\t2: ImmBorrowField[0](ID.bytes: address)\n\t3: ReadRef\n\t4: Ret\n}\npublic new(Arg0: &mut TxContext): UID {\nB0:\n\t0: MoveLoc[0](Arg0: &mut TxContext)\n\t1: Call tx_context::fresh_object_address(&mut TxContext): address\n\t2: Pack[0](ID)\n\t3: Pack[1](UID)\n\t4: Ret\n}\npublic delete(Arg0: UID) {\nB0:\n\t0: MoveLoc[0](Arg0: UID)\n\t1: Unpack[1](UID)\n\t2: Unpack[0](ID)\n\t3: Call delete_impl(address)\n\t4: Ret\n}\npublic id<Ty0: key>(Arg0: &Ty0): ID {\nB0:\n\t0: MoveLoc[0](Arg0: &Ty0)\n\t1: Call borrow_uid<Ty0>(&Ty0): &UID\n\t2: ImmBorrowField[1](UID.id: ID)\n\t3: ReadRef\n\t4: Ret\n}\npublic borrow_id<Ty0: key>(Arg0: &Ty0): &ID {\nB0:\n\t0: MoveLoc[0](Arg0: &Ty0)\n\t1: Call borrow_uid<Ty0>(&Ty0): &UID\n\t2: ImmBorrowField[1](UID.id: ID)\n\t3: Ret\n}\npublic id_bytes<Ty0: key>(Arg0: &Ty0): vector<u8> {\nB0:\n\t0: MoveLoc[0](Arg0: &Ty0)\n\t1: Call borrow_uid<Ty0>(&Ty0): &UID\n\t2: ImmBorrowField[1](UID.id: ID)\n\t3: Call bcs::to_bytes<ID>(&ID): vector<u8>\n\t4: Ret\n}\npublic id_address<Ty0: key>(Arg0: &Ty0): address {\nB0:\n\t0: MoveLoc[0](Arg0: &Ty0)\n\t1: Call borrow_uid<Ty0>(&Ty0): &UID\n\t2: ImmBorrowField[1](UID.id: ID)\n\t3: ImmBorrowField[0](ID.bytes: address)\n\t4: ReadRef\n\t5: Ret\n}\nnative borrow_uid<Ty0: key>(Arg0: &Ty0): &UID\npublic(friend) new_uid_from_hash(Arg0: address): UID {\nB0:\n\t0: CopyLoc[0](Arg0: address)\n\t1: Call record_new_uid(address)\n\t2: MoveLoc[0](Arg0: address)\n\t3: Pack[0](ID)\n\t4: Pack[1](UID)\n\t5: Ret\n}\nnative delete_impl(Arg0: address)\nnative record_new_uid(Arg0: address)\n\nConstants [\n\t0 => address: 0000000000000000000000000000000000000000000000000000000000000005\n\t1 => address: 0000000000000000000000000000000000000000000000000000000000000006\n\t2 => address: 0000000000000000000000000000000000000000000000000000000000000007\n\t3 => u64: 0000000000000000\n\t4 => address: 0000000000000000000000000000000000000000000000000000000000000000\n]\n}",
          "object_bag": "// Move bytecode v6\nmodule 2.object_bag {\nuse 0000000000000000000000000000000000000000000000000000000000000001::option;\nuse 0000000000000000000000000000000000000000000000000000000000000002::dynamic_object_field;\nuse 0000000000000000000000000000000000000000000000000000000000000002::object;\nuse 0000000000000000000000000000000000000000000000000000000000000002::tx_context;\n\n\nstruct ObjectBag has store, key {\n\tid: UID,\n\tsize: u64\n}\n\npublic new(Arg0: &mut TxContext): ObjectBag {\nB0:\n\t0: MoveLoc[0](Arg0: &mut TxContext)\n\t1: Call object::new(&mut TxContext): UID\n\t2: LdU64(0)\n\t3: Pack[0](ObjectBag)\n\t4: Ret\n}\npublic add<Ty0: copy + drop + store, Ty1: store + key>(Arg0: &mut ObjectBag, Arg1: Ty0, Arg2: Ty1) {\nB0:\n\t0: CopyLoc[0](Arg0: &mut ObjectBag)\n\t1: MutBorrowField[0](ObjectBag.id: UID)\n\t2: MoveLoc[1](Arg1: Ty0)\n\t3: MoveLoc[2](Arg2: Ty1)\n\t4: Call dynamic_object_field::add<Ty0, Ty1>(&mut UID, Ty0, Ty1)\n\t5: CopyLoc[0](Arg0: &mut ObjectBag)\n\t6: ImmBorrowField[1](ObjectBag.size: u64)\n\t7: ReadRef\n\t8: LdU64(1)\n\t9: Add\n\t10: MoveLoc[0](Arg0: &mut ObjectBag)\n\t11: MutBorrowField[1](ObjectBag.size: u64)\n\t12: WriteRef\n\t13: Ret\n}\npublic borrow<Ty0: copy + drop + store, Ty1: store + key>(Arg0: &ObjectBag, Arg1: Ty0): &Ty1 {\nB0:\n\t0: MoveLoc[0](Arg0: &ObjectBag)\n\t1: ImmBorrowField[0](ObjectBag.id: UID)\n\t2: MoveLoc[1](Arg1: Ty0)\n\t3: Call dynamic_object_field::borrow<Ty0, Ty1>(&UID, Ty0): &Ty1\n\t4: Ret\n}\npublic borrow_mut<Ty0: copy + drop + store, Ty1: store + key>(Arg0: &mut ObjectBag, Arg1: Ty0): &mut Ty1 {\nB0:\n\t0: MoveLoc[0](Arg0: &mut ObjectBag)\n\t1: MutBorrowField[0](ObjectBag.id: UID)\n\t2: MoveLoc[1](Arg1: Ty0)\n\t3: Call dynamic_object_field::borrow_mut<Ty0, Ty1>(&mut UID, Ty0): &mut Ty1\n\t4: Ret\n}\npublic remove<Ty0: copy + drop + store, Ty1: store + key>(Arg0: &mut ObjectBag, Arg1: Ty0): Ty1 {\nB0:\n\t0: CopyLoc[0](Arg0: &mut ObjectBag)\n\t1: MutBorrowField[0](ObjectBag.id: UID)\n\t2: MoveLoc[1](Arg1: Ty0)\n\t3: Call dynamic_object_field::remove<Ty0, Ty1>(&mut UID, Ty0): Ty1\n\t4: StLoc[2](loc0: Ty1)\n\t5: CopyLoc[0](Arg0: &mut ObjectBag)\n\t6: ImmBorrowField[1](ObjectBag.size: u64)\n\t7: ReadRef\n\t8: LdU64(1)\n\t9: Sub\n\t10: MoveLoc[0](Arg0: &mut ObjectBag)\n\t11: MutBorrowField[1](ObjectBag.size: u64)\n\t12: WriteRef\n\t13: MoveLoc[2](loc0: Ty1)\n\t14: Ret\n}\npublic contains<Ty0: copy + drop + store>(Arg0: &ObjectBag, Arg1: Ty0): bool {\nB0:\n\t0: MoveLoc[0](Arg0: &ObjectBag)\n\t1: ImmBorrowField[0](ObjectBag.id: UID)\n\t2: MoveLoc[1](Arg1: Ty0)\n\t3: Call dynamic_object_field::exists_<Ty0>(&UID, Ty0): bool\n\t4: Ret\n}\npublic contains_with_type<Ty0: copy + drop + store, Ty1: store + key>(Arg0: &ObjectBag, Arg1: Ty0): bool {\nB0:\n\t0: MoveLoc[0](Arg0: &ObjectBag)\n\t1: ImmBorrowField[0](ObjectBag.id: UID)\n\t2: MoveLoc[1](Arg1: Ty0)\n\t3: Call dynamic_object_field::exists_with_type<Ty0, Ty1>(&UID, Ty0): bool\n\t4: Ret\n}\npublic length(Arg0: &ObjectBag): u64 {\nB0:\n\t0: MoveLoc[0](Arg0: &ObjectBag)\n\t1: ImmBorrowField[1](ObjectBag.size: u64)\n\t2: ReadRef\n\t3: Ret\n}\npublic is_empty(Arg0: &ObjectBag): bool {\nB0:\n\t0: MoveLoc[0](Arg0: &ObjectBag)\n\t1: ImmBorrowField[1](ObjectBag.size: u64)\n\t2: ReadRef\n\t3: LdU64(0)\n\t4: Eq\n\t5: Ret\n}\npublic destroy_empty(Arg0: ObjectBag) {\nL0:\tloc1: u64\nB0:\n\t0: MoveLoc[0](Arg0: ObjectBag)\n\t1: Unpack[0](ObjectBag)\n\t2: StLoc[2](loc1: u64)\n\t3: StLoc[1](loc0: UID)\n\t4: MoveLoc[2](loc1: u64)\n\t5: LdU64(0)\n\t6: Eq\n\t7: BrFalse(9)\nB1:\n\t8: Branch(11)\nB2:\n\t9: LdConst[0](U64: 00000000..)\n\t10: Abort\nB3:\n\t11: MoveLoc[1](loc0: UID)\n\t12: Call object::delete(UID)\n\t13: Ret\n}\npublic value_id<Ty0: copy + drop + store>(Arg0: &ObjectBag, Arg1: Ty0): Option<ID> {\nB0:\n\t0: MoveLoc[0](Arg0: &ObjectBag)\n\t1: ImmBorrowField[0](ObjectBag.id: UID)\n\t2: MoveLoc[1](Arg1: Ty0)\n\t3: Call dynamic_object_field::id<Ty0>(&UID, Ty0): Option<ID>\n\t4: Ret\n}\n\nConstants [\n\t0 => u64: 0000000000000000\n]\n}",
          "object_table": "// Move bytecode v6\nmodule 2.object_table {\nuse 0000000000000000000000000000000000000000000000000000000000000001::option;\nuse 0000000000000000000000000000000000000000000000000000000000000002::dynamic_object_field;\nuse 0000000000000000000000000000000000000000000000000000000000000002::object;\nuse 0000000000000000000000000000000000000000000000000000000000000002::tx_context;\n\n\nstruct ObjectTable<phantom Ty0: copy + drop + store, phantom Ty1: store + key> has store, key {\n\tid: UID,\n\tsize: u64\n}\n\npublic new<Ty0: copy + drop + store, Ty1: store + key>(Arg0: &mut TxContext): ObjectTable<Ty0, Ty1> {\nB0:\n\t0: MoveLoc[0](Arg0: &mut TxContext)\n\t1: Call object::new(&mut TxContext): UID\n\t2: LdU64(0)\n\t3: PackGeneric[0](ObjectTable<Ty0, Ty1>)\n\t4: Ret\n}\npublic add<Ty0: copy + drop + store, Ty1: store + key>(Arg0: &mut ObjectTable<Ty0, Ty1>, Arg1: Ty0, Arg2: Ty1) {\nB0:\n\t0: CopyLoc[0](Arg0: &mut ObjectTable<Ty0, Ty1>)\n\t1: MutBorrowFieldGeneric[0](ObjectTable.id: UID)\n\t2: MoveLoc[1](Arg1: Ty0)\n\t3: MoveLoc[2](Arg2: Ty1)\n\t4: Call dynamic_object_field::add<Ty0, Ty1>(&mut UID, Ty0, Ty1)\n\t5: CopyLoc[0](Arg0: &mut ObjectTable<Ty0, Ty1>)\n\t6: ImmBorrowFieldGeneric[1](ObjectTable.size: u64)\n\t7: ReadRef\n\t8: LdU64(1)\n\t9: Add\n\t10: MoveLoc[0](Arg0: &mut ObjectTable<Ty0, Ty1>)\n\t11: MutBorrowFieldGeneric[1](ObjectTable.size: u64)\n\t12: WriteRef\n\t13: Ret\n}\npublic borrow<Ty0: copy + drop + store, Ty1: store + key>(Arg0: &ObjectTable<Ty0, Ty1>, Arg1: Ty0): &Ty1 {\nB0:\n\t0: MoveLoc[0](Arg0: &ObjectTable<Ty0, Ty1>)\n\t1: ImmBorrowFieldGeneric[0](ObjectTable.id: UID)\n\t2: MoveLoc[1](Arg1: Ty0)\n\t3: Call dynamic_object_field::borrow<Ty0, Ty1>(&UID, Ty0): &Ty1\n\t4: Ret\n}\npublic borrow_mut<Ty0: copy + drop + store, Ty1: store + key>(Arg0: &mut ObjectTable<Ty0, Ty1>, Arg1: Ty0): &mut Ty1 {\nB0:\n\t0: MoveLoc[0](Arg0: &mut ObjectTable<Ty0, Ty1>)\n\t1: MutBorrowFieldGeneric[0](ObjectTable.id: UID)\n\t2: MoveLoc[1](Arg1: Ty0)\n\t3: Call dynamic_object_field::borrow_mut<Ty0, Ty1>(&mut UID, Ty0): &mut Ty1\n\t4: Ret\n}\npublic remove<Ty0: copy + drop + store, Ty1: store + key>(Arg0: &mut ObjectTable<Ty0, Ty1>, Arg1: Ty0): Ty1 {\nB0:\n\t0: CopyLoc[0](Arg0: &mut ObjectTable<Ty0, Ty1>)\n\t1: MutBorrowFieldGeneric[0](ObjectTable.id: UID)\n\t2: MoveLoc[1](Arg1: Ty0)\n\t3: Call dynamic_object_field::remove<Ty0, Ty1>(&mut UID, Ty0): Ty1\n\t4: StLoc[2](loc0: Ty1)\n\t5: CopyLoc[0](Arg0: &mut ObjectTable<Ty0, Ty1>)\n\t6: ImmBorrowFieldGeneric[1](ObjectTable.size: u64)\n\t7: ReadRef\n\t8: LdU64(1)\n\t9: Sub\n\t10: MoveLoc[0](Arg0: &mut ObjectTable<Ty0, Ty1>)\n\t11: MutBorrowFieldGeneric[1](ObjectTable.size: u64)\n\t12: WriteRef\n\t13: MoveLoc[2](loc0: Ty1)\n\t14: Ret\n}\npublic contains<Ty0: copy + drop + store, Ty1: store + key>(Arg0: &ObjectTable<Ty0, Ty1>, Arg1: Ty0): bool {\nB0:\n\t0: MoveLoc[0](Arg0: &ObjectTable<Ty0, Ty1>)\n\t1: ImmBorrowFieldGeneric[0](ObjectTable.id: UID)\n\t2: MoveLoc[1](Arg1: Ty0)\n\t3: Call dynamic_object_field::exists_<Ty0>(&UID, Ty0): bool\n\t4: Ret\n}\npublic length<Ty0: copy + drop + store, Ty1: store + key>(Arg0: &ObjectTable<Ty0, Ty1>): u64 {\nB0:\n\t0: MoveLoc[0](Arg0: &ObjectTable<Ty0, Ty1>)\n\t1: ImmBorrowFieldGeneric[1](ObjectTable.size: u64)\n\t2: ReadRef\n\t3: Ret\n}\npublic is_empty<Ty0: copy + drop + store, Ty1: store + key>(Arg0: &ObjectTable<Ty0, Ty1>): bool {\nB0:\n\t0: MoveLoc[0](Arg0: &ObjectTable<Ty0, Ty1>)\n\t1: ImmBorrowFieldGeneric[1](ObjectTable.size: u64)\n\t2: ReadRef\n\t3: LdU64(0)\n\t4: Eq\n\t5: Ret\n}\npublic destroy_empty<Ty0: copy + drop + store, Ty1: store + key>(Arg0: ObjectTable<Ty0, Ty1>) {\nL0:\tloc1: u64\nB0:\n\t0: MoveLoc[0](Arg0: ObjectTable<Ty0, Ty1>)\n\t1: UnpackGeneric[0](ObjectTable<Ty0, Ty1>)\n\t2: StLoc[2](loc1: u64)\n\t3: StLoc[1](loc0: UID)\n\t4: MoveLoc[2](loc1: u64)\n\t5: LdU64(0)\n\t6: Eq\n\t7: BrFalse(9)\nB1:\n\t8: Branch(11)\nB2:\n\t9: LdConst[0](U64: 00000000..)\n\t10: Abort\nB3:\n\t11: MoveLoc[1](loc0: UID)\n\t12: Call object::delete(UID)\n\t13: Ret\n}\npublic value_id<Ty0: copy + drop + store, Ty1: store + key>(Arg0: &ObjectTable<Ty0, Ty1>, Arg1: Ty0): Option<ID> {\nB0:\n\t0: MoveLoc[0](Arg0: &ObjectTable<Ty0, Ty1>)\n\t1: ImmBorrowFieldGeneric[0](ObjectTable.id: UID)\n\t2: MoveLoc[1](Arg1: Ty0)\n\t3: Call dynamic_object_field::id<Ty0>(&UID, Ty0): Option<ID>\n\t4: Ret\n}\n\nConstants [\n\t0 => u64: 0000000000000000\n]\n}",
          "package": "// Move bytecode v6\nmodule 2.package {\nuse 0000000000000000000000000000000000000000000000000000000000000001::ascii;\nuse 0000000000000000000000000000000000000000000000000000000000000001::type_name;\nuse 0000000000000000000000000000000000000000000000000000000000000002::object;\nuse 0000000000000000000000000000000000000000000000000000000000000002::transfer;\nuse 0000000000000000000000000000000000000000000000000000000000000002::tx_context;\nuse 0000000000000000000000000000000000000000000000000000000000000002::types;\n\n\nstruct Publisher has store, key {\n\tid: UID,\n\tpackage: String,\n\tmodule_name: String\n}\nstruct UpgradeCap has store, key {\n\tid: UID,\n\tpackage: ID,\n\tversion: u64,\n\tpolicy: u8\n}\nstruct UpgradeTicket {\n\tcap: ID,\n\tpackage: ID,\n\tpolicy: u8,\n\tdigest: vector<u8>\n}\nstruct UpgradeReceipt {\n\tcap: ID,\n\tpackage: ID\n}\n\npublic claim<Ty0: drop>(Arg0: Ty0, Arg1: &mut TxContext): Publisher {\nB0:\n\t0: ImmBorrowLoc[0](Arg0: Ty0)\n\t1: Call types::is_one_time_witness<Ty0>(&Ty0): bool\n\t2: BrFalse(4)\nB1:\n\t3: Branch(8)\nB2:\n\t4: MoveLoc[1](Arg1: &mut TxContext)\n\t5: Pop\n\t6: LdConst[0](U64: 00000000..)\n\t7: Abort\nB3:\n\t8: Call type_name::get_with_original_ids<Ty0>(): TypeName\n\t9: StLoc[2](loc0: TypeName)\n\t10: MoveLoc[1](Arg1: &mut TxContext)\n\t11: Call object::new(&mut TxContext): UID\n\t12: ImmBorrowLoc[2](loc0: TypeName)\n\t13: Call type_name::get_address(&TypeName): String\n\t14: ImmBorrowLoc[2](loc0: TypeName)\n\t15: Call type_name::get_module(&TypeName): String\n\t16: Pack[0](Publisher)\n\t17: Ret\n}\npublic claim_and_keep<Ty0: drop>(Arg0: Ty0, Arg1: &mut TxContext) {\nB0:\n\t0: MoveLoc[0](Arg0: Ty0)\n\t1: CopyLoc[1](Arg1: &mut TxContext)\n\t2: Call claim<Ty0>(Ty0, &mut TxContext): Publisher\n\t3: MoveLoc[1](Arg1: &mut TxContext)\n\t4: FreezeRef\n\t5: Call tx_context::sender(&TxContext): address\n\t6: Call transfer::public_transfer<Publisher>(Publisher, address)\n\t7: Ret\n}\npublic burn_publisher(Arg0: Publisher) {\nB0:\n\t0: MoveLoc[0](Arg0: Publisher)\n\t1: Unpack[0](Publisher)\n\t2: Pop\n\t3: Pop\n\t4: Call object::delete(UID)\n\t5: Ret\n}\npublic from_package<Ty0>(Arg0: &Publisher): bool {\nB0:\n\t0: Call type_name::get_with_original_ids<Ty0>(): TypeName\n\t1: StLoc[1](loc0: TypeName)\n\t2: ImmBorrowLoc[1](loc0: TypeName)\n\t3: Call type_name::get_address(&TypeName): String\n\t4: MoveLoc[0](Arg0: &Publisher)\n\t5: ImmBorrowField[0](Publisher.package: String)\n\t6: ReadRef\n\t7: Eq\n\t8: Ret\n}\npublic from_module<Ty0>(Arg0: &Publisher): bool {\nL0:\tloc1: TypeName\nB0:\n\t0: Call type_name::get_with_original_ids<Ty0>(): TypeName\n\t1: StLoc[2](loc1: TypeName)\n\t2: ImmBorrowLoc[2](loc1: TypeName)\n\t3: Call type_name::get_address(&TypeName): String\n\t4: CopyLoc[0](Arg0: &Publisher)\n\t5: ImmBorrowField[0](Publisher.package: String)\n\t6: ReadRef\n\t7: Eq\n\t8: BrFalse(17)\nB1:\n\t9: ImmBorrowLoc[2](loc1: TypeName)\n\t10: Call type_name::get_module(&TypeName): String\n\t11: MoveLoc[0](Arg0: &Publisher)\n\t12: ImmBorrowField[1](Publisher.module_name: String)\n\t13: ReadRef\n\t14: Eq\n\t15: StLoc[1](loc0: bool)\n\t16: Branch(21)\nB2:\n\t17: MoveLoc[0](Arg0: &Publisher)\n\t18: Pop\n\t19: LdFalse\n\t20: StLoc[1](loc0: bool)\nB3:\n\t21: MoveLoc[1](loc0: bool)\n\t22: Ret\n}\npublic published_module(Arg0: &Publisher): &String {\nB0:\n\t0: MoveLoc[0](Arg0: &Publisher)\n\t1: ImmBorrowField[1](Publisher.module_name: String)\n\t2: Ret\n}\npublic published_package(Arg0: &Publisher): &String {\nB0:\n\t0: MoveLoc[0](Arg0: &Publisher)\n\t1: ImmBorrowField[0](Publisher.package: String)\n\t2: Ret\n}\npublic upgrade_package(Arg0: &UpgradeCap): ID {\nB0:\n\t0: MoveLoc[0](Arg0: &UpgradeCap)\n\t1: ImmBorrowField[2](UpgradeCap.package: ID)\n\t2: ReadRef\n\t3: Ret\n}\npublic version(Arg0: &UpgradeCap): u64 {\nB0:\n\t0: MoveLoc[0](Arg0: &UpgradeCap)\n\t1: ImmBorrowField[3](UpgradeCap.version: u64)\n\t2: ReadRef\n\t3: Ret\n}\npublic upgrade_policy(Arg0: &UpgradeCap): u8 {\nB0:\n\t0: MoveLoc[0](Arg0: &UpgradeCap)\n\t1: ImmBorrowField[4](UpgradeCap.policy: u8)\n\t2: ReadRef\n\t3: Ret\n}\npublic ticket_package(Arg0: &UpgradeTicket): ID {\nB0:\n\t0: MoveLoc[0](Arg0: &UpgradeTicket)\n\t1: ImmBorrowField[5](UpgradeTicket.package: ID)\n\t2: ReadRef\n\t3: Ret\n}\npublic ticket_policy(Arg0: &UpgradeTicket): u8 {\nB0:\n\t0: MoveLoc[0](Arg0: &UpgradeTicket)\n\t1: ImmBorrowField[6](UpgradeTicket.policy: u8)\n\t2: ReadRef\n\t3: Ret\n}\npublic receipt_cap(Arg0: &UpgradeReceipt): ID {\nB0:\n\t0: MoveLoc[0](Arg0: &UpgradeReceipt)\n\t1: ImmBorrowField[7](UpgradeReceipt.cap: ID)\n\t2: ReadRef\n\t3: Ret\n}\npublic receipt_package(Arg0: &UpgradeReceipt): ID {\nB0:\n\t0: MoveLoc[0](Arg0: &UpgradeReceipt)\n\t1: ImmBorrowField[8](UpgradeReceipt.package: ID)\n\t2: ReadRef\n\t3: Ret\n}\npublic ticket_digest(Arg0: &UpgradeTicket): &vector<u8> {\nB0:\n\t0: MoveLoc[0](Arg0: &UpgradeTicket)\n\t1: ImmBorrowField[9](UpgradeTicket.digest: vector<u8>)\n\t2: Ret\n}\npublic compatible_policy(): u8 {\nB0:\n\t0: LdConst[5](U8: 00)\n\t1: Ret\n}\npublic additive_policy(): u8 {\nB0:\n\t0: LdConst[6](U8: 80)\n\t1: Ret\n}\npublic dep_only_policy(): u8 {\nB0:\n\t0: LdConst[7](U8: c0)\n\t1: Ret\n}\nentry public only_additive_upgrades(Arg0: &mut UpgradeCap) {\nB0:\n\t0: MoveLoc[0](Arg0: &mut UpgradeCap)\n\t1: LdConst[6](U8: 80)\n\t2: Call restrict(&mut UpgradeCap, u8)\n\t3: Ret\n}\nentry public only_dep_upgrades(Arg0: &mut UpgradeCap) {\nB0:\n\t0: MoveLoc[0](Arg0: &mut UpgradeCap)\n\t1: LdConst[7](U8: c0)\n\t2: Call restrict(&mut UpgradeCap, u8)\n\t3: Ret\n}\nentry public make_immutable(Arg0: UpgradeCap) {\nB0:\n\t0: MoveLoc[0](Arg0: UpgradeCap)\n\t1: Unpack[1](UpgradeCap)\n\t2: Pop\n\t3: Pop\n\t4: Pop\n\t5: Call object::delete(UID)\n\t6: Ret\n}\npublic authorize_upgrade(Arg0: &mut UpgradeCap, Arg1: u8, Arg2: vector<u8>): UpgradeTicket {\nB0:\n\t0: LdConst[8](Address: 00000000..)\n\t1: Call object::id_from_address(address): ID\n\t2: StLoc[3](loc0: ID)\n\t3: CopyLoc[0](Arg0: &mut UpgradeCap)\n\t4: ImmBorrowField[2](UpgradeCap.package: ID)\n\t5: ReadRef\n\t6: CopyLoc[3](loc0: ID)\n\t7: Neq\n\t8: BrFalse(10)\nB1:\n\t9: Branch(14)\nB2:\n\t10: MoveLoc[0](Arg0: &mut UpgradeCap)\n\t11: Pop\n\t12: LdConst[2](U64: 02000000..)\n\t13: Abort\nB3:\n\t14: CopyLoc[1](Arg1: u8)\n\t15: CopyLoc[0](Arg0: &mut UpgradeCap)\n\t16: ImmBorrowField[4](UpgradeCap.policy: u8)\n\t17: ReadRef\n\t18: Ge\n\t19: BrFalse(21)\nB4:\n\t20: Branch(25)\nB5:\n\t21: MoveLoc[0](Arg0: &mut UpgradeCap)\n\t22: Pop\n\t23: LdConst[1](U64: 01000000..)\n\t24: Abort\nB6:\n\t25: CopyLoc[0](Arg0: &mut UpgradeCap)\n\t26: ImmBorrowField[2](UpgradeCap.package: ID)\n\t27: ReadRef\n\t28: StLoc[4](loc1: ID)\n\t29: MoveLoc[3](loc0: ID)\n\t30: CopyLoc[0](Arg0: &mut UpgradeCap)\n\t31: MutBorrowField[2](UpgradeCap.package: ID)\n\t32: WriteRef\n\t33: MoveLoc[0](Arg0: &mut UpgradeCap)\n\t34: FreezeRef\n\t35: Call object::id<UpgradeCap>(&UpgradeCap): ID\n\t36: MoveLoc[4](loc1: ID)\n\t37: MoveLoc[1](Arg1: u8)\n\t38: MoveLoc[2](Arg2: vector<u8>)\n\t39: Pack[2](UpgradeTicket)\n\t40: Ret\n}\npublic commit_upgrade(Arg0: &mut UpgradeCap, Arg1: UpgradeReceipt) {\nB0:\n\t0: MoveLoc[1](Arg1: UpgradeReceipt)\n\t1: Unpack[3](UpgradeReceipt)\n\t2: StLoc[3](loc1: ID)\n\t3: StLoc[2](loc0: ID)\n\t4: CopyLoc[0](Arg0: &mut UpgradeCap)\n\t5: FreezeRef\n\t6: Call object::id<UpgradeCap>(&UpgradeCap): ID\n\t7: MoveLoc[2](loc0: ID)\n\t8: Eq\n\t9: BrFalse(11)\nB1:\n\t10: Branch(15)\nB2:\n\t11: MoveLoc[0](Arg0: &mut UpgradeCap)\n\t12: Pop\n\t13: LdConst[4](U64: 04000000..)\n\t14: Abort\nB3:\n\t15: CopyLoc[0](Arg0: &mut UpgradeCap)\n\t16: ImmBorrowField[2](UpgradeCap.package: ID)\n\t17: Call object::id_to_address(&ID): address\n\t18: LdConst[8](Address: 00000000..)\n\t19: Eq\n\t20: BrFalse(22)\nB4:\n\t21: Branch(26)\nB5:\n\t22: MoveLoc[0](Arg0: &mut UpgradeCap)\n\t23: Pop\n\t24: LdConst[3](U64: 03000000..)\n\t25: Abort\nB6:\n\t26: MoveLoc[3](loc1: ID)\n\t27: CopyLoc[0](Arg0: &mut UpgradeCap)\n\t28: MutBorrowField[2](UpgradeCap.package: ID)\n\t29: WriteRef\n\t30: CopyLoc[0](Arg0: &mut UpgradeCap)\n\t31: ImmBorrowField[3](UpgradeCap.version: u64)\n\t32: ReadRef\n\t33: LdU64(1)\n\t34: Add\n\t35: MoveLoc[0](Arg0: &mut UpgradeCap)\n\t36: MutBorrowField[3](UpgradeCap.version: u64)\n\t37: WriteRef\n\t38: Ret\n}\nrestrict(Arg0: &mut UpgradeCap, Arg1: u8) {\nB0:\n\t0: CopyLoc[0](Arg0: &mut UpgradeCap)\n\t1: ImmBorrowField[4](UpgradeCap.policy: u8)\n\t2: ReadRef\n\t3: CopyLoc[1](Arg1: u8)\n\t4: Le\n\t5: BrFalse(7)\nB1:\n\t6: Branch(11)\nB2:\n\t7: MoveLoc[0](Arg0: &mut UpgradeCap)\n\t8: Pop\n\t9: LdConst[1](U64: 01000000..)\n\t10: Abort\nB3:\n\t11: MoveLoc[1](Arg1: u8)\n\t12: MoveLoc[0](Arg0: &mut UpgradeCap)\n\t13: MutBorrowField[4](UpgradeCap.policy: u8)\n\t14: WriteRef\n\t15: Ret\n}\n\nConstants [\n\t0 => u64: 0000000000000000\n\t1 => u64: 0100000000000000\n\t2 => u64: 0200000000000000\n\t3 => u64: 0300000000000000\n\t4 => u64: 0400000000000000\n\t5 => u8: 00\n\t6 => u8: 80\n\t7 => u8: c0\n\t8 => address: 0000000000000000000000000000000000000000000000000000000000000000\n]\n}",
          "pay": "// Move bytecode v6\nmodule 2.pay {\nuse 0000000000000000000000000000000000000000000000000000000000000002::coin;\nuse 0000000000000000000000000000000000000000000000000000000000000002::transfer;\nuse 0000000000000000000000000000000000000000000000000000000000000002::tx_context;\n\n\n\n\npublic keep<Ty0>(Arg0: Coin<Ty0>, Arg1: &TxContext) {\nB0:\n\t0: MoveLoc[0](Arg0: Coin<Ty0>)\n\t1: MoveLoc[1](Arg1: &TxContext)\n\t2: Call tx_context::sender(&TxContext): address\n\t3: Call transfer::public_transfer<Coin<Ty0>>(Coin<Ty0>, address)\n\t4: Ret\n}\nentry public split<Ty0>(Arg0: &mut Coin<Ty0>, Arg1: u64, Arg2: &mut TxContext) {\nB0:\n\t0: MoveLoc[0](Arg0: &mut Coin<Ty0>)\n\t1: MoveLoc[1](Arg1: u64)\n\t2: CopyLoc[2](Arg2: &mut TxContext)\n\t3: Call coin::split<Ty0>(&mut Coin<Ty0>, u64, &mut TxContext): Coin<Ty0>\n\t4: MoveLoc[2](Arg2: &mut TxContext)\n\t5: FreezeRef\n\t6: Call keep<Ty0>(Coin<Ty0>, &TxContext)\n\t7: Ret\n}\nentry public split_vec<Ty0>(Arg0: &mut Coin<Ty0>, Arg1: vector<u64>, Arg2: &mut TxContext) {\nB0:\n\t0: LdU64(0)\n\t1: ImmBorrowLoc[1](Arg1: vector<u64>)\n\t2: VecLen(14)\n\t3: StLoc[4](loc1: u64)\n\t4: StLoc[3](loc0: u64)\nB1:\n\t5: CopyLoc[3](loc0: u64)\n\t6: CopyLoc[4](loc1: u64)\n\t7: Lt\n\t8: BrFalse(22)\nB2:\n\t9: Branch(10)\nB3:\n\t10: CopyLoc[0](Arg0: &mut Coin<Ty0>)\n\t11: ImmBorrowLoc[1](Arg1: vector<u64>)\n\t12: CopyLoc[3](loc0: u64)\n\t13: VecImmBorrow(14)\n\t14: ReadRef\n\t15: CopyLoc[2](Arg2: &mut TxContext)\n\t16: Call split<Ty0>(&mut Coin<Ty0>, u64, &mut TxContext)\n\t17: MoveLoc[3](loc0: u64)\n\t18: LdU64(1)\n\t19: Add\n\t20: StLoc[3](loc0: u64)\n\t21: Branch(5)\nB4:\n\t22: MoveLoc[0](Arg0: &mut Coin<Ty0>)\n\t23: Pop\n\t24: MoveLoc[2](Arg2: &mut TxContext)\n\t25: Pop\n\t26: Ret\n}\nentry public split_and_transfer<Ty0>(Arg0: &mut Coin<Ty0>, Arg1: u64, Arg2: address, Arg3: &mut TxContext) {\nB0:\n\t0: MoveLoc[0](Arg0: &mut Coin<Ty0>)\n\t1: MoveLoc[1](Arg1: u64)\n\t2: MoveLoc[3](Arg3: &mut TxContext)\n\t3: Call coin::split<Ty0>(&mut Coin<Ty0>, u64, &mut TxContext): Coin<Ty0>\n\t4: MoveLoc[2](Arg2: address)\n\t5: Call transfer::public_transfer<Coin<Ty0>>(Coin<Ty0>, address)\n\t6: Ret\n}\nentry public divide_and_keep<Ty0>(Arg0: &mut Coin<Ty0>, Arg1: u64, Arg2: &mut TxContext) {\nB0:\n\t0: MoveLoc[0](Arg0: &mut Coin<Ty0>)\n\t1: MoveLoc[1](Arg1: u64)\n\t2: CopyLoc[2](Arg2: &mut TxContext)\n\t3: Call coin::divide_into_n<Ty0>(&mut Coin<Ty0>, u64, &mut TxContext): vector<Coin<Ty0>>\n\t4: StLoc[5](loc2: vector<Coin<Ty0>>)\n\t5: LdU64(0)\n\t6: ImmBorrowLoc[5](loc2: vector<Coin<Ty0>>)\n\t7: VecLen(10)\n\t8: StLoc[4](loc1: u64)\n\t9: StLoc[3](loc0: u64)\nB1:\n\t10: CopyLoc[3](loc0: u64)\n\t11: CopyLoc[4](loc1: u64)\n\t12: Lt\n\t13: BrFalse(26)\nB2:\n\t14: Branch(15)\nB3:\n\t15: MutBorrowLoc[5](loc2: vector<Coin<Ty0>>)\n\t16: VecPopBack(10)\n\t17: CopyLoc[2](Arg2: &mut TxContext)\n\t18: FreezeRef\n\t19: Call tx_context::sender(&TxContext): address\n\t20: Call transfer::public_transfer<Coin<Ty0>>(Coin<Ty0>, address)\n\t21: MoveLoc[3](loc0: u64)\n\t22: LdU64(1)\n\t23: Add\n\t24: StLoc[3](loc0: u64)\n\t25: Branch(10)\nB4:\n\t26: MoveLoc[2](Arg2: &mut TxContext)\n\t27: Pop\n\t28: MoveLoc[5](loc2: vector<Coin<Ty0>>)\n\t29: VecUnpack(10, 0)\n\t30: Ret\n}\nentry public join<Ty0>(Arg0: &mut Coin<Ty0>, Arg1: Coin<Ty0>) {\nB0:\n\t0: MoveLoc[0](Arg0: &mut Coin<Ty0>)\n\t1: MoveLoc[1](Arg1: Coin<Ty0>)\n\t2: Call coin::join<Ty0>(&mut Coin<Ty0>, Coin<Ty0>)\n\t3: Ret\n}\nentry public join_vec<Ty0>(Arg0: &mut Coin<Ty0>, Arg1: vector<Coin<Ty0>>) {\nL0:\tloc2: u64\nB0:\n\t0: LdU64(0)\n\t1: ImmBorrowLoc[1](Arg1: vector<Coin<Ty0>>)\n\t2: VecLen(10)\n\t3: StLoc[4](loc2: u64)\n\t4: StLoc[3](loc1: u64)\nB1:\n\t5: CopyLoc[3](loc1: u64)\n\t6: CopyLoc[4](loc2: u64)\n\t7: Lt\n\t8: BrFalse(21)\nB2:\n\t9: Branch(10)\nB3:\n\t10: MutBorrowLoc[1](Arg1: vector<Coin<Ty0>>)\n\t11: VecPopBack(10)\n\t12: StLoc[2](loc0: Coin<Ty0>)\n\t13: CopyLoc[0](Arg0: &mut Coin<Ty0>)\n\t14: MoveLoc[2](loc0: Coin<Ty0>)\n\t15: Call coin::join<Ty0>(&mut Coin<Ty0>, Coin<Ty0>)\n\t16: MoveLoc[3](loc1: u64)\n\t17: LdU64(1)\n\t18: Add\n\t19: StLoc[3](loc1: u64)\n\t20: Branch(5)\nB4:\n\t21: MoveLoc[0](Arg0: &mut Coin<Ty0>)\n\t22: Pop\n\t23: MoveLoc[1](Arg1: vector<Coin<Ty0>>)\n\t24: VecUnpack(10, 0)\n\t25: Ret\n}\nentry public join_vec_and_transfer<Ty0>(Arg0: vector<Coin<Ty0>>, Arg1: address) {\nB0:\n\t0: ImmBorrowLoc[0](Arg0: vector<Coin<Ty0>>)\n\t1: VecLen(10)\n\t2: LdU64(0)\n\t3: Gt\n\t4: BrFalse(6)\nB1:\n\t5: Branch(8)\nB2:\n\t6: LdConst[0](U64: 00000000..)\n\t7: Abort\nB3:\n\t8: MutBorrowLoc[0](Arg0: vector<Coin<Ty0>>)\n\t9: VecPopBack(10)\n\t10: StLoc[2](loc0: Coin<Ty0>)\n\t11: MutBorrowLoc[2](loc0: Coin<Ty0>)\n\t12: MoveLoc[0](Arg0: vector<Coin<Ty0>>)\n\t13: Call join_vec<Ty0>(&mut Coin<Ty0>, vector<Coin<Ty0>>)\n\t14: MoveLoc[2](loc0: Coin<Ty0>)\n\t15: MoveLoc[1](Arg1: address)\n\t16: Call transfer::public_transfer<Coin<Ty0>>(Coin<Ty0>, address)\n\t17: Ret\n}\n\nConstants [\n\t0 => u64: 0000000000000000\n]\n}",
          "priority_queue": "// Move bytecode v6\nmodule 2.priority_queue {\nuse 0000000000000000000000000000000000000000000000000000000000000001::vector;\n\n\nstruct PriorityQueue<Ty0: drop> has drop, store {\n\tentries: vector<Entry<Ty0>>\n}\nstruct Entry<Ty0: drop> has drop, store {\n\tpriority: u64,\n\tvalue: Ty0\n}\n\npublic new<Ty0: drop>(Arg0: vector<Entry<Ty0>>): PriorityQueue<Ty0> {\nL0:\tloc1: u64\nB0:\n\t0: ImmBorrowLoc[0](Arg0: vector<Entry<Ty0>>)\n\t1: VecLen(6)\n\t2: StLoc[2](loc1: u64)\n\t3: CopyLoc[2](loc1: u64)\n\t4: LdU64(2)\n\t5: Div\n\t6: StLoc[1](loc0: u64)\nB1:\n\t7: CopyLoc[1](loc0: u64)\n\t8: LdU64(0)\n\t9: Gt\n\t10: BrFalse(21)\nB2:\n\t11: Branch(12)\nB3:\n\t12: MoveLoc[1](loc0: u64)\n\t13: LdU64(1)\n\t14: Sub\n\t15: StLoc[1](loc0: u64)\n\t16: MutBorrowLoc[0](Arg0: vector<Entry<Ty0>>)\n\t17: CopyLoc[2](loc1: u64)\n\t18: CopyLoc[1](loc0: u64)\n\t19: Call max_heapify_recursive<Ty0>(&mut vector<Entry<Ty0>>, u64, u64)\n\t20: Branch(7)\nB4:\n\t21: MoveLoc[0](Arg0: vector<Entry<Ty0>>)\n\t22: PackGeneric[0](PriorityQueue<Ty0>)\n\t23: Ret\n}\npublic pop_max<Ty0: drop>(Arg0: &mut PriorityQueue<Ty0>): u64 * Ty0 {\nL0:\tloc1: u64\nL1:\tloc2: Ty0\nB0:\n\t0: CopyLoc[0](Arg0: &mut PriorityQueue<Ty0>)\n\t1: ImmBorrowFieldGeneric[0](PriorityQueue.entries: vector<Entry<Ty0>>)\n\t2: VecLen(6)\n\t3: StLoc[1](loc0: u64)\n\t4: CopyLoc[1](loc0: u64)\n\t5: LdU64(0)\n\t6: Gt\n\t7: BrFalse(9)\nB1:\n\t8: Branch(13)\nB2:\n\t9: MoveLoc[0](Arg0: &mut PriorityQueue<Ty0>)\n\t10: Pop\n\t11: LdConst[0](U64: 00000000..)\n\t12: Abort\nB3:\n\t13: CopyLoc[0](Arg0: &mut PriorityQueue<Ty0>)\n\t14: MutBorrowFieldGeneric[0](PriorityQueue.entries: vector<Entry<Ty0>>)\n\t15: LdU64(0)\n\t16: Call vector::swap_remove<Entry<Ty0>>(&mut vector<Entry<Ty0>>, u64): Entry<Ty0>\n\t17: UnpackGeneric[1](Entry<Ty0>)\n\t18: StLoc[3](loc2: Ty0)\n\t19: StLoc[2](loc1: u64)\n\t20: MoveLoc[0](Arg0: &mut PriorityQueue<Ty0>)\n\t21: MutBorrowFieldGeneric[0](PriorityQueue.entries: vector<Entry<Ty0>>)\n\t22: MoveLoc[1](loc0: u64)\n\t23: LdU64(1)\n\t24: Sub\n\t25: LdU64(0)\n\t26: Call max_heapify_recursive<Ty0>(&mut vector<Entry<Ty0>>, u64, u64)\n\t27: MoveLoc[2](loc1: u64)\n\t28: MoveLoc[3](loc2: Ty0)\n\t29: Ret\n}\npublic insert<Ty0: drop>(Arg0: &mut PriorityQueue<Ty0>, Arg1: u64, Arg2: Ty0) {\nB0:\n\t0: CopyLoc[0](Arg0: &mut PriorityQueue<Ty0>)\n\t1: MutBorrowFieldGeneric[0](PriorityQueue.entries: vector<Entry<Ty0>>)\n\t2: MoveLoc[1](Arg1: u64)\n\t3: MoveLoc[2](Arg2: Ty0)\n\t4: PackGeneric[1](Entry<Ty0>)\n\t5: VecPushBack(6)\n\t6: CopyLoc[0](Arg0: &mut PriorityQueue<Ty0>)\n\t7: ImmBorrowFieldGeneric[0](PriorityQueue.entries: vector<Entry<Ty0>>)\n\t8: VecLen(6)\n\t9: LdU64(1)\n\t10: Sub\n\t11: StLoc[3](loc0: u64)\n\t12: MoveLoc[0](Arg0: &mut PriorityQueue<Ty0>)\n\t13: MutBorrowFieldGeneric[0](PriorityQueue.entries: vector<Entry<Ty0>>)\n\t14: MoveLoc[3](loc0: u64)\n\t15: Call restore_heap_recursive<Ty0>(&mut vector<Entry<Ty0>>, u64)\n\t16: Ret\n}\npublic new_entry<Ty0: drop>(Arg0: u64, Arg1: Ty0): Entry<Ty0> {\nB0:\n\t0: MoveLoc[0](Arg0: u64)\n\t1: MoveLoc[1](Arg1: Ty0)\n\t2: PackGeneric[1](Entry<Ty0>)\n\t3: Ret\n}\npublic create_entries<Ty0: drop>(Arg0: vector<u64>, Arg1: vector<Ty0>): vector<Entry<Ty0>> {\nL0:\tloc2: u64\nL1:\tloc3: vector<Entry<Ty0>>\nL2:\tloc4: Ty0\nB0:\n\t0: ImmBorrowLoc[0](Arg0: vector<u64>)\n\t1: VecLen(16)\n\t2: StLoc[3](loc1: u64)\n\t3: ImmBorrowLoc[1](Arg1: vector<Ty0>)\n\t4: VecLen(13)\n\t5: CopyLoc[3](loc1: u64)\n\t6: Eq\n\t7: BrFalse(9)\nB1:\n\t8: Branch(11)\nB2:\n\t9: LdU64(0)\n\t10: Abort\nB3:\n\t11: VecPack(6, 0)\n\t12: StLoc[5](loc3: vector<Entry<Ty0>>)\n\t13: LdU64(0)\n\t14: StLoc[2](loc0: u64)\nB4:\n\t15: CopyLoc[2](loc0: u64)\n\t16: CopyLoc[3](loc1: u64)\n\t17: Lt\n\t18: BrFalse(38)\nB5:\n\t19: Branch(20)\nB6:\n\t20: MutBorrowLoc[0](Arg0: vector<u64>)\n\t21: LdU64(0)\n\t22: Call vector::remove<u64>(&mut vector<u64>, u64): u64\n\t23: StLoc[4](loc2: u64)\n\t24: MutBorrowLoc[1](Arg1: vector<Ty0>)\n\t25: LdU64(0)\n\t26: Call vector::remove<Ty0>(&mut vector<Ty0>, u64): Ty0\n\t27: StLoc[6](loc4: Ty0)\n\t28: MutBorrowLoc[5](loc3: vector<Entry<Ty0>>)\n\t29: MoveLoc[4](loc2: u64)\n\t30: MoveLoc[6](loc4: Ty0)\n\t31: PackGeneric[1](Entry<Ty0>)\n\t32: VecPushBack(6)\n\t33: MoveLoc[2](loc0: u64)\n\t34: LdU64(1)\n\t35: Add\n\t36: StLoc[2](loc0: u64)\n\t37: Branch(15)\nB7:\n\t38: MoveLoc[5](loc3: vector<Entry<Ty0>>)\n\t39: Ret\n}\nrestore_heap_recursive<Ty0: drop>(Arg0: &mut vector<Entry<Ty0>>, Arg1: u64) {\nL0:\tloc2: &mut vector<Entry<Ty0>>\nL1:\tloc3: u64\nL2:\tloc4: u64\nB0:\n\t0: CopyLoc[1](Arg1: u64)\n\t1: LdU64(0)\n\t2: Eq\n\t3: BrFalse(7)\nB1:\n\t4: MoveLoc[0](Arg0: &mut vector<Entry<Ty0>>)\n\t5: Pop\n\t6: Ret\nB2:\n\t7: CopyLoc[1](Arg1: u64)\n\t8: LdU64(1)\n\t9: Sub\n\t10: LdU64(2)\n\t11: Div\n\t12: StLoc[6](loc4: u64)\n\t13: CopyLoc[0](Arg0: &mut vector<Entry<Ty0>>)\n\t14: CopyLoc[1](Arg1: u64)\n\t15: StLoc[3](loc1: u64)\n\t16: StLoc[2](loc0: &mut vector<Entry<Ty0>>)\n\t17: CopyLoc[0](Arg0: &mut vector<Entry<Ty0>>)\n\t18: CopyLoc[6](loc4: u64)\n\t19: StLoc[5](loc3: u64)\n\t20: StLoc[4](loc2: &mut vector<Entry<Ty0>>)\n\t21: MoveLoc[2](loc0: &mut vector<Entry<Ty0>>)\n\t22: FreezeRef\n\t23: MoveLoc[3](loc1: u64)\n\t24: VecImmBorrow(6)\n\t25: ImmBorrowFieldGeneric[1](Entry.priority: u64)\n\t26: ReadRef\n\t27: MoveLoc[4](loc2: &mut vector<Entry<Ty0>>)\n\t28: FreezeRef\n\t29: MoveLoc[5](loc3: u64)\n\t30: VecImmBorrow(6)\n\t31: ImmBorrowFieldGeneric[1](Entry.priority: u64)\n\t32: ReadRef\n\t33: Gt\n\t34: BrFalse(43)\nB3:\n\t35: CopyLoc[0](Arg0: &mut vector<Entry<Ty0>>)\n\t36: MoveLoc[1](Arg1: u64)\n\t37: CopyLoc[6](loc4: u64)\n\t38: VecSwap(6)\n\t39: MoveLoc[0](Arg0: &mut vector<Entry<Ty0>>)\n\t40: MoveLoc[6](loc4: u64)\n\t41: Call restore_heap_recursive<Ty0>(&mut vector<Entry<Ty0>>, u64)\n\t42: Branch(45)\nB4:\n\t43: MoveLoc[0](Arg0: &mut vector<Entry<Ty0>>)\n\t44: Pop\nB5:\n\t45: Ret\n}\nmax_heapify_recursive<Ty0: drop>(Arg0: &mut vector<Entry<Ty0>>, Arg1: u64, Arg2: u64) {\nL0:\tloc3: &mut vector<Entry<Ty0>>\nL1:\tloc4: u64\nL2:\tloc5: bool\nL3:\tloc6: &mut vector<Entry<Ty0>>\nL4:\tloc7: u64\nL5:\tloc8: &mut vector<Entry<Ty0>>\nL6:\tloc9: u64\nL7:\tloc10: u64\nL8:\tloc11: u64\nL9:\tloc12: u64\nB0:\n\t0: CopyLoc[1](Arg1: u64)\n\t1: LdU64(0)\n\t2: Eq\n\t3: BrFalse(7)\nB1:\n\t4: MoveLoc[0](Arg0: &mut vector<Entry<Ty0>>)\n\t5: Pop\n\t6: Ret\nB2:\n\t7: CopyLoc[2](Arg2: u64)\n\t8: CopyLoc[1](Arg1: u64)\n\t9: Lt\n\t10: BrFalse(12)\nB3:\n\t11: Branch(16)\nB4:\n\t12: MoveLoc[0](Arg0: &mut vector<Entry<Ty0>>)\n\t13: Pop\n\t14: LdU64(1)\n\t15: Abort\nB5:\n\t16: CopyLoc[2](Arg2: u64)\n\t17: LdU64(2)\n\t18: Mul\n\t19: LdU64(1)\n\t20: Add\n\t21: StLoc[13](loc10: u64)\n\t22: CopyLoc[13](loc10: u64)\n\t23: LdU64(1)\n\t24: Add\n\t25: StLoc[15](loc12: u64)\n\t26: CopyLoc[2](Arg2: u64)\n\t27: StLoc[14](loc11: u64)\n\t28: CopyLoc[13](loc10: u64)\n\t29: CopyLoc[1](Arg1: u64)\n\t30: Lt\n\t31: BrFalse(55)\nB6:\n\t32: CopyLoc[0](Arg0: &mut vector<Entry<Ty0>>)\n\t33: CopyLoc[13](loc10: u64)\n\t34: StLoc[5](loc2: u64)\n\t35: StLoc[3](loc0: &mut vector<Entry<Ty0>>)\n\t36: CopyLoc[0](Arg0: &mut vector<Entry<Ty0>>)\n\t37: CopyLoc[14](loc11: u64)\n\t38: StLoc[7](loc4: u64)\n\t39: StLoc[6](loc3: &mut vector<Entry<Ty0>>)\n\t40: MoveLoc[3](loc0: &mut vector<Entry<Ty0>>)\n\t41: FreezeRef\n\t42: MoveLoc[5](loc2: u64)\n\t43: VecImmBorrow(6)\n\t44: ImmBorrowFieldGeneric[1](Entry.priority: u64)\n\t45: ReadRef\n\t46: MoveLoc[6](loc3: &mut vector<Entry<Ty0>>)\n\t47: FreezeRef\n\t48: MoveLoc[7](loc4: u64)\n\t49: VecImmBorrow(6)\n\t50: ImmBorrowFieldGeneric[1](Entry.priority: u64)\n\t51: ReadRef\n\t52: Gt\n\t53: StLoc[8](loc5: bool)\n\t54: Branch(57)\nB7:\n\t55: LdFalse\n\t56: StLoc[8](loc5: bool)\nB8:\n\t57: MoveLoc[8](loc5: bool)\n\t58: BrFalse(61)\nB9:\n\t59: MoveLoc[13](loc10: u64)\n\t60: StLoc[14](loc11: u64)\nB10:\n\t61: CopyLoc[15](loc12: u64)\n\t62: CopyLoc[1](Arg1: u64)\n\t63: Lt\n\t64: BrFalse(88)\nB11:\n\t65: CopyLoc[0](Arg0: &mut vector<Entry<Ty0>>)\n\t66: CopyLoc[15](loc12: u64)\n\t67: StLoc[10](loc7: u64)\n\t68: StLoc[9](loc6: &mut vector<Entry<Ty0>>)\n\t69: CopyLoc[0](Arg0: &mut vector<Entry<Ty0>>)\n\t70: CopyLoc[14](loc11: u64)\n\t71: StLoc[12](loc9: u64)\n\t72: StLoc[11](loc8: &mut vector<Entry<Ty0>>)\n\t73: MoveLoc[9](loc6: &mut vector<Entry<Ty0>>)\n\t74: FreezeRef\n\t75: MoveLoc[10](loc7: u64)\n\t76: VecImmBorrow(6)\n\t77: ImmBorrowFieldGeneric[1](Entry.priority: u64)\n\t78: ReadRef\n\t79: MoveLoc[11](loc8: &mut vector<Entry<Ty0>>)\n\t80: FreezeRef\n\t81: MoveLoc[12](loc9: u64)\n\t82: VecImmBorrow(6)\n\t83: ImmBorrowFieldGeneric[1](Entry.priority: u64)\n\t84: ReadRef\n\t85: Gt\n\t86: StLoc[4](loc1: bool)\n\t87: Branch(90)\nB12:\n\t88: LdFalse\n\t89: StLoc[4](loc1: bool)\nB13:\n\t90: MoveLoc[4](loc1: bool)\n\t91: BrFalse(94)\nB14:\n\t92: MoveLoc[15](loc12: u64)\n\t93: StLoc[14](loc11: u64)\nB15:\n\t94: CopyLoc[14](loc11: u64)\n\t95: CopyLoc[2](Arg2: u64)\n\t96: Neq\n\t97: BrFalse(107)\nB16:\n\t98: CopyLoc[0](Arg0: &mut vector<Entry<Ty0>>)\n\t99: CopyLoc[14](loc11: u64)\n\t100: MoveLoc[2](Arg2: u64)\n\t101: VecSwap(6)\n\t102: MoveLoc[0](Arg0: &mut vector<Entry<Ty0>>)\n\t103: MoveLoc[1](Arg1: u64)\n\t104: MoveLoc[14](loc11: u64)\n\t105: Call max_heapify_recursive<Ty0>(&mut vector<Entry<Ty0>>, u64, u64)\n\t106: Branch(109)\nB17:\n\t107: MoveLoc[0](Arg0: &mut vector<Entry<Ty0>>)\n\t108: Pop\nB18:\n\t109: Ret\n}\npublic priorities<Ty0: drop>(Arg0: &PriorityQueue<Ty0>): vector<u64> {\nL0:\tloc1: vector<u64>\nB0:\n\t0: LdConst[1](Vector(U64): 00)\n\t1: StLoc[2](loc1: vector<u64>)\n\t2: LdU64(0)\n\t3: StLoc[1](loc0: u64)\nB1:\n\t4: CopyLoc[1](loc0: u64)\n\t5: CopyLoc[0](Arg0: &PriorityQueue<Ty0>)\n\t6: ImmBorrowFieldGeneric[0](PriorityQueue.entries: vector<Entry<Ty0>>)\n\t7: VecLen(6)\n\t8: Lt\n\t9: BrFalse(24)\nB2:\n\t10: Branch(11)\nB3:\n\t11: MutBorrowLoc[2](loc1: vector<u64>)\n\t12: CopyLoc[0](Arg0: &PriorityQueue<Ty0>)\n\t13: ImmBorrowFieldGeneric[0](PriorityQueue.entries: vector<Entry<Ty0>>)\n\t14: CopyLoc[1](loc0: u64)\n\t15: VecImmBorrow(6)\n\t16: ImmBorrowFieldGeneric[1](Entry.priority: u64)\n\t17: ReadRef\n\t18: VecPushBack(16)\n\t19: MoveLoc[1](loc0: u64)\n\t20: LdU64(1)\n\t21: Add\n\t22: StLoc[1](loc0: u64)\n\t23: Branch(4)\nB4:\n\t24: MoveLoc[0](Arg0: &PriorityQueue<Ty0>)\n\t25: Pop\n\t26: MoveLoc[2](loc1: vector<u64>)\n\t27: Ret\n}\n\nConstants [\n\t0 => u64: 0000000000000000\n\t1 => vector<u64>: 00\n]\n}",
          "prover": "// Move bytecode v6\nmodule 2.prover {\n\n\n\n\nConstants [\n\t0 => u64: 0100000000000000\n\t1 => u64: 0200000000000000\n\t2 => u64: 0300000000000000\n]\n}",
          "sui": "// Move bytecode v6\nmodule 2.sui {\nuse 0000000000000000000000000000000000000000000000000000000000000001::option;\nuse 0000000000000000000000000000000000000000000000000000000000000002::balance;\nuse 0000000000000000000000000000000000000000000000000000000000000002::coin;\nuse 0000000000000000000000000000000000000000000000000000000000000002::transfer;\nuse 0000000000000000000000000000000000000000000000000000000000000002::tx_context;\nuse 0000000000000000000000000000000000000000000000000000000000000002::url;\n\n\nstruct SUI has drop {\n\tdummy_field: bool\n}\n\nnew(Arg0: &mut TxContext): Balance<SUI> {\nL0:\tloc1: Supply<SUI>\nL1:\tloc2: Balance<SUI>\nL2:\tloc3: TreasuryCap<SUI>\nB0:\n\t0: CopyLoc[0](Arg0: &mut TxContext)\n\t1: FreezeRef\n\t2: Call tx_context::sender(&TxContext): address\n\t3: LdConst[5](Address: 00000000..)\n\t4: Eq\n\t5: BrFalse(7)\nB1:\n\t6: Branch(11)\nB2:\n\t7: MoveLoc[0](Arg0: &mut TxContext)\n\t8: Pop\n\t9: LdConst[1](U64: 01000000..)\n\t10: Abort\nB3:\n\t11: CopyLoc[0](Arg0: &mut TxContext)\n\t12: FreezeRef\n\t13: Call tx_context::epoch(&TxContext): u64\n\t14: LdU64(0)\n\t15: Eq\n\t16: BrFalse(18)\nB4:\n\t17: Branch(22)\nB5:\n\t18: MoveLoc[0](Arg0: &mut TxContext)\n\t19: Pop\n\t20: LdConst[0](U64: 00000000..)\n\t21: Abort\nB6:\n\t22: LdFalse\n\t23: Pack[0](SUI)\n\t24: LdU8(9)\n\t25: LdConst[6](Vector(U8): 03535549)\n\t26: LdConst[7](Vector(U8): 03537569)\n\t27: LdConst[8](Vector(U8): 00)\n\t28: Call option::none<Url>(): Option<Url>\n\t29: MoveLoc[0](Arg0: &mut TxContext)\n\t30: Call coin::create_currency<SUI>(SUI, u8, vector<u8>, vector<u8>, vector<u8>, Option<Url>, &mut TxContext): TreasuryCap<SUI> * CoinMetadata<SUI>\n\t31: StLoc[1](loc0: CoinMetadata<SUI>)\n\t32: StLoc[4](loc3: TreasuryCap<SUI>)\n\t33: MoveLoc[1](loc0: CoinMetadata<SUI>)\n\t34: Call transfer::public_freeze_object<CoinMetadata<SUI>>(CoinMetadata<SUI>)\n\t35: MoveLoc[4](loc3: TreasuryCap<SUI>)\n\t36: Call coin::treasury_into_supply<SUI>(TreasuryCap<SUI>): Supply<SUI>\n\t37: StLoc[2](loc1: Supply<SUI>)\n\t38: MutBorrowLoc[2](loc1: Supply<SUI>)\n\t39: LdConst[4](U64: 0000e889..)\n\t40: Call balance::increase_supply<SUI>(&mut Supply<SUI>, u64): Balance<SUI>\n\t41: StLoc[3](loc2: Balance<SUI>)\n\t42: MoveLoc[2](loc1: Supply<SUI>)\n\t43: Call balance::destroy_supply<SUI>(Supply<SUI>): u64\n\t44: Pop\n\t45: MoveLoc[3](loc2: Balance<SUI>)\n\t46: Ret\n}\nentry public transfer(Arg0: Coin<SUI>, Arg1: address) {\nB0:\n\t0: MoveLoc[0](Arg0: Coin<SUI>)\n\t1: MoveLoc[1](Arg1: address)\n\t2: Call transfer::public_transfer<Coin<SUI>>(Coin<SUI>, address)\n\t3: Ret\n}\n\nConstants [\n\t0 => u64: 0000000000000000\n\t1 => u64: 0100000000000000\n\t2 => u64: 00ca9a3b00000000\n\t3 => u64: 00e40b5402000000\n\t4 => u64: 0000e8890423c78a\n\t5 => address: 0000000000000000000000000000000000000000000000000000000000000000\n\t6 => vector<u8>: \"SUI\" // interpreted as UTF8 string\n\t7 => vector<u8>: \"Sui\" // interpreted as UTF8 string\n\t8 => vector<u8>: \"\" // interpreted as UTF8 string\n]\n}",
          "table": "// Move bytecode v6\nmodule 2.table {\nuse 0000000000000000000000000000000000000000000000000000000000000002::dynamic_field;\nuse 0000000000000000000000000000000000000000000000000000000000000002::object;\nuse 0000000000000000000000000000000000000000000000000000000000000002::tx_context;\n\n\nstruct Table<phantom Ty0: copy + drop + store, phantom Ty1: store> has store, key {\n\tid: UID,\n\tsize: u64\n}\n\npublic new<Ty0: copy + drop + store, Ty1: store>(Arg0: &mut TxContext): Table<Ty0, Ty1> {\nB0:\n\t0: MoveLoc[0](Arg0: &mut TxContext)\n\t1: Call object::new(&mut TxContext): UID\n\t2: LdU64(0)\n\t3: PackGeneric[0](Table<Ty0, Ty1>)\n\t4: Ret\n}\npublic add<Ty0: copy + drop + store, Ty1: store>(Arg0: &mut Table<Ty0, Ty1>, Arg1: Ty0, Arg2: Ty1) {\nB0:\n\t0: CopyLoc[0](Arg0: &mut Table<Ty0, Ty1>)\n\t1: MutBorrowFieldGeneric[0](Table.id: UID)\n\t2: MoveLoc[1](Arg1: Ty0)\n\t3: MoveLoc[2](Arg2: Ty1)\n\t4: Call dynamic_field::add<Ty0, Ty1>(&mut UID, Ty0, Ty1)\n\t5: CopyLoc[0](Arg0: &mut Table<Ty0, Ty1>)\n\t6: ImmBorrowFieldGeneric[1](Table.size: u64)\n\t7: ReadRef\n\t8: LdU64(1)\n\t9: Add\n\t10: MoveLoc[0](Arg0: &mut Table<Ty0, Ty1>)\n\t11: MutBorrowFieldGeneric[1](Table.size: u64)\n\t12: WriteRef\n\t13: Ret\n}\npublic borrow<Ty0: copy + drop + store, Ty1: store>(Arg0: &Table<Ty0, Ty1>, Arg1: Ty0): &Ty1 {\nB0:\n\t0: MoveLoc[0](Arg0: &Table<Ty0, Ty1>)\n\t1: ImmBorrowFieldGeneric[0](Table.id: UID)\n\t2: MoveLoc[1](Arg1: Ty0)\n\t3: Call dynamic_field::borrow<Ty0, Ty1>(&UID, Ty0): &Ty1\n\t4: Ret\n}\npublic borrow_mut<Ty0: copy + drop + store, Ty1: store>(Arg0: &mut Table<Ty0, Ty1>, Arg1: Ty0): &mut Ty1 {\nB0:\n\t0: MoveLoc[0](Arg0: &mut Table<Ty0, Ty1>)\n\t1: MutBorrowFieldGeneric[0](Table.id: UID)\n\t2: MoveLoc[1](Arg1: Ty0)\n\t3: Call dynamic_field::borrow_mut<Ty0, Ty1>(&mut UID, Ty0): &mut Ty1\n\t4: Ret\n}\npublic remove<Ty0: copy + drop + store, Ty1: store>(Arg0: &mut Table<Ty0, Ty1>, Arg1: Ty0): Ty1 {\nB0:\n\t0: CopyLoc[0](Arg0: &mut Table<Ty0, Ty1>)\n\t1: MutBorrowFieldGeneric[0](Table.id: UID)\n\t2: MoveLoc[1](Arg1: Ty0)\n\t3: Call dynamic_field::remove<Ty0, Ty1>(&mut UID, Ty0): Ty1\n\t4: StLoc[2](loc0: Ty1)\n\t5: CopyLoc[0](Arg0: &mut Table<Ty0, Ty1>)\n\t6: ImmBorrowFieldGeneric[1](Table.size: u64)\n\t7: ReadRef\n\t8: LdU64(1)\n\t9: Sub\n\t10: MoveLoc[0](Arg0: &mut Table<Ty0, Ty1>)\n\t11: MutBorrowFieldGeneric[1](Table.size: u64)\n\t12: WriteRef\n\t13: MoveLoc[2](loc0: Ty1)\n\t14: Ret\n}\npublic contains<Ty0: copy + drop + store, Ty1: store>(Arg0: &Table<Ty0, Ty1>, Arg1: Ty0): bool {\nB0:\n\t0: MoveLoc[0](Arg0: &Table<Ty0, Ty1>)\n\t1: ImmBorrowFieldGeneric[0](Table.id: UID)\n\t2: MoveLoc[1](Arg1: Ty0)\n\t3: Call dynamic_field::exists_with_type<Ty0, Ty1>(&UID, Ty0): bool\n\t4: Ret\n}\npublic length<Ty0: copy + drop + store, Ty1: store>(Arg0: &Table<Ty0, Ty1>): u64 {\nB0:\n\t0: MoveLoc[0](Arg0: &Table<Ty0, Ty1>)\n\t1: ImmBorrowFieldGeneric[1](Table.size: u64)\n\t2: ReadRef\n\t3: Ret\n}\npublic is_empty<Ty0: copy + drop + store, Ty1: store>(Arg0: &Table<Ty0, Ty1>): bool {\nB0:\n\t0: MoveLoc[0](Arg0: &Table<Ty0, Ty1>)\n\t1: ImmBorrowFieldGeneric[1](Table.size: u64)\n\t2: ReadRef\n\t3: LdU64(0)\n\t4: Eq\n\t5: Ret\n}\npublic destroy_empty<Ty0: copy + drop + store, Ty1: store>(Arg0: Table<Ty0, Ty1>) {\nL0:\tloc1: u64\nB0:\n\t0: MoveLoc[0](Arg0: Table<Ty0, Ty1>)\n\t1: UnpackGeneric[0](Table<Ty0, Ty1>)\n\t2: StLoc[2](loc1: u64)\n\t3: StLoc[1](loc0: UID)\n\t4: MoveLoc[2](loc1: u64)\n\t5: LdU64(0)\n\t6: Eq\n\t7: BrFalse(9)\nB1:\n\t8: Branch(11)\nB2:\n\t9: LdConst[0](U64: 00000000..)\n\t10: Abort\nB3:\n\t11: MoveLoc[1](loc0: UID)\n\t12: Call object::delete(UID)\n\t13: Ret\n}\npublic drop<Ty0: copy + drop + store, Ty1: drop + store>(Arg0: Table<Ty0, Ty1>) {\nB0:\n\t0: MoveLoc[0](Arg0: Table<Ty0, Ty1>)\n\t1: UnpackGeneric[0](Table<Ty0, Ty1>)\n\t2: Pop\n\t3: Call object::delete(UID)\n\t4: Ret\n}\n\nConstants [\n\t0 => u64: 0000000000000000\n]\n}",
          "table_vec": "// Move bytecode v6\nmodule 2.table_vec {\nuse 0000000000000000000000000000000000000000000000000000000000000002::table;\nuse 0000000000000000000000000000000000000000000000000000000000000002::tx_context;\n\n\nstruct TableVec<phantom Ty0: store> has store {\n\tcontents: Table<u64, Ty0>\n}\n\npublic empty<Ty0: store>(Arg0: &mut TxContext): TableVec<Ty0> {\nB0:\n\t0: MoveLoc[0](Arg0: &mut TxContext)\n\t1: Call table::new<u64, Ty0>(&mut TxContext): Table<u64, Ty0>\n\t2: PackGeneric[0](TableVec<Ty0>)\n\t3: Ret\n}\npublic singleton<Ty0: store>(Arg0: Ty0, Arg1: &mut TxContext): TableVec<Ty0> {\nB0:\n\t0: MoveLoc[1](Arg1: &mut TxContext)\n\t1: Call empty<Ty0>(&mut TxContext): TableVec<Ty0>\n\t2: StLoc[2](loc0: TableVec<Ty0>)\n\t3: MutBorrowLoc[2](loc0: TableVec<Ty0>)\n\t4: MoveLoc[0](Arg0: Ty0)\n\t5: Call push_back<Ty0>(&mut TableVec<Ty0>, Ty0)\n\t6: MoveLoc[2](loc0: TableVec<Ty0>)\n\t7: Ret\n}\npublic length<Ty0: store>(Arg0: &TableVec<Ty0>): u64 {\nB0:\n\t0: MoveLoc[0](Arg0: &TableVec<Ty0>)\n\t1: ImmBorrowFieldGeneric[0](TableVec.contents: Table<u64, Ty0>)\n\t2: Call table::length<u64, Ty0>(&Table<u64, Ty0>): u64\n\t3: Ret\n}\npublic is_empty<Ty0: store>(Arg0: &TableVec<Ty0>): bool {\nB0:\n\t0: MoveLoc[0](Arg0: &TableVec<Ty0>)\n\t1: Call length<Ty0>(&TableVec<Ty0>): u64\n\t2: LdU64(0)\n\t3: Eq\n\t4: Ret\n}\npublic borrow<Ty0: store>(Arg0: &TableVec<Ty0>, Arg1: u64): &Ty0 {\nB0:\n\t0: CopyLoc[0](Arg0: &TableVec<Ty0>)\n\t1: Call length<Ty0>(&TableVec<Ty0>): u64\n\t2: CopyLoc[1](Arg1: u64)\n\t3: Gt\n\t4: BrFalse(6)\nB1:\n\t5: Branch(10)\nB2:\n\t6: MoveLoc[0](Arg0: &TableVec<Ty0>)\n\t7: Pop\n\t8: LdConst[0](U64: 00000000..)\n\t9: Abort\nB3:\n\t10: MoveLoc[0](Arg0: &TableVec<Ty0>)\n\t11: ImmBorrowFieldGeneric[0](TableVec.contents: Table<u64, Ty0>)\n\t12: MoveLoc[1](Arg1: u64)\n\t13: Call table::borrow<u64, Ty0>(&Table<u64, Ty0>, u64): &Ty0\n\t14: Ret\n}\npublic push_back<Ty0: store>(Arg0: &mut TableVec<Ty0>, Arg1: Ty0) {\nB0:\n\t0: CopyLoc[0](Arg0: &mut TableVec<Ty0>)\n\t1: FreezeRef\n\t2: Call length<Ty0>(&TableVec<Ty0>): u64\n\t3: StLoc[2](loc0: u64)\n\t4: MoveLoc[0](Arg0: &mut TableVec<Ty0>)\n\t5: MutBorrowFieldGeneric[0](TableVec.contents: Table<u64, Ty0>)\n\t6: MoveLoc[2](loc0: u64)\n\t7: MoveLoc[1](Arg1: Ty0)\n\t8: Call table::add<u64, Ty0>(&mut Table<u64, Ty0>, u64, Ty0)\n\t9: Ret\n}\npublic borrow_mut<Ty0: store>(Arg0: &mut TableVec<Ty0>, Arg1: u64): &mut Ty0 {\nB0:\n\t0: CopyLoc[0](Arg0: &mut TableVec<Ty0>)\n\t1: FreezeRef\n\t2: Call length<Ty0>(&TableVec<Ty0>): u64\n\t3: CopyLoc[1](Arg1: u64)\n\t4: Gt\n\t5: BrFalse(7)\nB1:\n\t6: Branch(11)\nB2:\n\t7: MoveLoc[0](Arg0: &mut TableVec<Ty0>)\n\t8: Pop\n\t9: LdConst[0](U64: 00000000..)\n\t10: Abort\nB3:\n\t11: MoveLoc[0](Arg0: &mut TableVec<Ty0>)\n\t12: MutBorrowFieldGeneric[0](TableVec.contents: Table<u64, Ty0>)\n\t13: MoveLoc[1](Arg1: u64)\n\t14: Call table::borrow_mut<u64, Ty0>(&mut Table<u64, Ty0>, u64): &mut Ty0\n\t15: Ret\n}\npublic pop_back<Ty0: store>(Arg0: &mut TableVec<Ty0>): Ty0 {\nB0:\n\t0: CopyLoc[0](Arg0: &mut TableVec<Ty0>)\n\t1: FreezeRef\n\t2: Call length<Ty0>(&TableVec<Ty0>): u64\n\t3: StLoc[1](loc0: u64)\n\t4: CopyLoc[1](loc0: u64)\n\t5: LdU64(0)\n\t6: Gt\n\t7: BrFalse(9)\nB1:\n\t8: Branch(13)\nB2:\n\t9: MoveLoc[0](Arg0: &mut TableVec<Ty0>)\n\t10: Pop\n\t11: LdConst[0](U64: 00000000..)\n\t12: Abort\nB3:\n\t13: MoveLoc[0](Arg0: &mut TableVec<Ty0>)\n\t14: MutBorrowFieldGeneric[0](TableVec.contents: Table<u64, Ty0>)\n\t15: MoveLoc[1](loc0: u64)\n\t16: LdU64(1)\n\t17: Sub\n\t18: Call table::remove<u64, Ty0>(&mut Table<u64, Ty0>, u64): Ty0\n\t19: Ret\n}\npublic destroy_empty<Ty0: store>(Arg0: TableVec<Ty0>) {\nB0:\n\t0: ImmBorrowLoc[0](Arg0: TableVec<Ty0>)\n\t1: Call length<Ty0>(&TableVec<Ty0>): u64\n\t2: LdU64(0)\n\t3: Eq\n\t4: BrFalse(6)\nB1:\n\t5: Branch(8)\nB2:\n\t6: LdConst[1](U64: 01000000..)\n\t7: Abort\nB3:\n\t8: MoveLoc[0](Arg0: TableVec<Ty0>)\n\t9: UnpackGeneric[0](TableVec<Ty0>)\n\t10: Call table::destroy_empty<u64, Ty0>(Table<u64, Ty0>)\n\t11: Ret\n}\npublic drop<Ty0: drop + store>(Arg0: TableVec<Ty0>) {\nB0:\n\t0: MoveLoc[0](Arg0: TableVec<Ty0>)\n\t1: UnpackGeneric[0](TableVec<Ty0>)\n\t2: Call table::drop<u64, Ty0>(Table<u64, Ty0>)\n\t3: Ret\n}\npublic swap<Ty0: store>(Arg0: &mut TableVec<Ty0>, Arg1: u64, Arg2: u64) {\nB0:\n\t0: CopyLoc[0](Arg0: &mut TableVec<Ty0>)\n\t1: FreezeRef\n\t2: Call length<Ty0>(&TableVec<Ty0>): u64\n\t3: CopyLoc[1](Arg1: u64)\n\t4: Gt\n\t5: BrFalse(7)\nB1:\n\t6: Branch(11)\nB2:\n\t7: MoveLoc[0](Arg0: &mut TableVec<Ty0>)\n\t8: Pop\n\t9: LdConst[0](U64: 00000000..)\n\t10: Abort\nB3:\n\t11: CopyLoc[0](Arg0: &mut TableVec<Ty0>)\n\t12: FreezeRef\n\t13: Call length<Ty0>(&TableVec<Ty0>): u64\n\t14: CopyLoc[2](Arg2: u64)\n\t15: Gt\n\t16: BrFalse(18)\nB4:\n\t17: Branch(22)\nB5:\n\t18: MoveLoc[0](Arg0: &mut TableVec<Ty0>)\n\t19: Pop\n\t20: LdConst[0](U64: 00000000..)\n\t21: Abort\nB6:\n\t22: CopyLoc[1](Arg1: u64)\n\t23: CopyLoc[2](Arg2: u64)\n\t24: Eq\n\t25: BrFalse(29)\nB7:\n\t26: MoveLoc[0](Arg0: &mut TableVec<Ty0>)\n\t27: Pop\n\t28: Ret\nB8:\n\t29: CopyLoc[0](Arg0: &mut TableVec<Ty0>)\n\t30: MutBorrowFieldGeneric[0](TableVec.contents: Table<u64, Ty0>)\n\t31: CopyLoc[1](Arg1: u64)\n\t32: Call table::remove<u64, Ty0>(&mut Table<u64, Ty0>, u64): Ty0\n\t33: StLoc[3](loc0: Ty0)\n\t34: CopyLoc[0](Arg0: &mut TableVec<Ty0>)\n\t35: MutBorrowFieldGeneric[0](TableVec.contents: Table<u64, Ty0>)\n\t36: CopyLoc[2](Arg2: u64)\n\t37: Call table::remove<u64, Ty0>(&mut Table<u64, Ty0>, u64): Ty0\n\t38: StLoc[4](loc1: Ty0)\n\t39: CopyLoc[0](Arg0: &mut TableVec<Ty0>)\n\t40: MutBorrowFieldGeneric[0](TableVec.contents: Table<u64, Ty0>)\n\t41: MoveLoc[2](Arg2: u64)\n\t42: MoveLoc[3](loc0: Ty0)\n\t43: Call table::add<u64, Ty0>(&mut Table<u64, Ty0>, u64, Ty0)\n\t44: MoveLoc[0](Arg0: &mut TableVec<Ty0>)\n\t45: MutBorrowFieldGeneric[0](TableVec.contents: Table<u64, Ty0>)\n\t46: MoveLoc[1](Arg1: u64)\n\t47: MoveLoc[4](loc1: Ty0)\n\t48: Call table::add<u64, Ty0>(&mut Table<u64, Ty0>, u64, Ty0)\n\t49: Ret\n}\npublic swap_remove<Ty0: store>(Arg0: &mut TableVec<Ty0>, Arg1: u64): Ty0 {\nB0:\n\t0: CopyLoc[0](Arg0: &mut TableVec<Ty0>)\n\t1: FreezeRef\n\t2: Call length<Ty0>(&TableVec<Ty0>): u64\n\t3: CopyLoc[1](Arg1: u64)\n\t4: Gt\n\t5: BrFalse(7)\nB1:\n\t6: Branch(11)\nB2:\n\t7: MoveLoc[0](Arg0: &mut TableVec<Ty0>)\n\t8: Pop\n\t9: LdConst[0](U64: 00000000..)\n\t10: Abort\nB3:\n\t11: CopyLoc[0](Arg0: &mut TableVec<Ty0>)\n\t12: FreezeRef\n\t13: Call length<Ty0>(&TableVec<Ty0>): u64\n\t14: LdU64(1)\n\t15: Sub\n\t16: StLoc[2](loc0: u64)\n\t17: CopyLoc[0](Arg0: &mut TableVec<Ty0>)\n\t18: MoveLoc[1](Arg1: u64)\n\t19: MoveLoc[2](loc0: u64)\n\t20: Call swap<Ty0>(&mut TableVec<Ty0>, u64, u64)\n\t21: MoveLoc[0](Arg0: &mut TableVec<Ty0>)\n\t22: Call pop_back<Ty0>(&mut TableVec<Ty0>): Ty0\n\t23: Ret\n}\n\nConstants [\n\t0 => u64: 0000000000000000\n\t1 => u64: 0100000000000000\n]\n}",
          "transfer": "// Move bytecode v6\nmodule 2.transfer {\nuse 0000000000000000000000000000000000000000000000000000000000000002::object;\n\n\nstruct Receiving<phantom Ty0: key> has drop {\n\tid: ID,\n\tversion: u64\n}\n\npublic transfer<Ty0: key>(Arg0: Ty0, Arg1: address) {\nB0:\n\t0: MoveLoc[0](Arg0: Ty0)\n\t1: MoveLoc[1](Arg1: address)\n\t2: Call transfer_impl<Ty0>(Ty0, address)\n\t3: Ret\n}\npublic public_transfer<Ty0: store + key>(Arg0: Ty0, Arg1: address) {\nB0:\n\t0: MoveLoc[0](Arg0: Ty0)\n\t1: MoveLoc[1](Arg1: address)\n\t2: Call transfer_impl<Ty0>(Ty0, address)\n\t3: Ret\n}\npublic freeze_object<Ty0: key>(Arg0: Ty0) {\nB0:\n\t0: MoveLoc[0](Arg0: Ty0)\n\t1: Call freeze_object_impl<Ty0>(Ty0)\n\t2: Ret\n}\npublic public_freeze_object<Ty0: store + key>(Arg0: Ty0) {\nB0:\n\t0: MoveLoc[0](Arg0: Ty0)\n\t1: Call freeze_object_impl<Ty0>(Ty0)\n\t2: Ret\n}\npublic share_object<Ty0: key>(Arg0: Ty0) {\nB0:\n\t0: MoveLoc[0](Arg0: Ty0)\n\t1: Call share_object_impl<Ty0>(Ty0)\n\t2: Ret\n}\npublic public_share_object<Ty0: store + key>(Arg0: Ty0) {\nB0:\n\t0: MoveLoc[0](Arg0: Ty0)\n\t1: Call share_object_impl<Ty0>(Ty0)\n\t2: Ret\n}\npublic receive<Ty0: key>(Arg0: &mut UID, Arg1: Receiving<Ty0>): Ty0 {\nB0:\n\t0: MoveLoc[1](Arg1: Receiving<Ty0>)\n\t1: UnpackGeneric[0](Receiving<Ty0>)\n\t2: StLoc[3](loc1: u64)\n\t3: StLoc[2](loc0: ID)\n\t4: MoveLoc[0](Arg0: &mut UID)\n\t5: FreezeRef\n\t6: Call object::uid_to_address(&UID): address\n\t7: MoveLoc[2](loc0: ID)\n\t8: MoveLoc[3](loc1: u64)\n\t9: Call receive_impl<Ty0>(address, ID, u64): Ty0\n\t10: Ret\n}\nnative public(friend) freeze_object_impl<Ty0: key>(Arg0: Ty0)\nnative public(friend) share_object_impl<Ty0: key>(Arg0: Ty0)\nnative public(friend) transfer_impl<Ty0: key>(Arg0: Ty0, Arg1: address)\nnative receive_impl<Ty0: key>(Arg0: address, Arg1: ID, Arg2: u64): Ty0\n\nConstants [\n\t0 => u64: 0000000000000000\n]\n}",
          "transfer_policy": "// Move bytecode v6\nmodule 2.transfer_policy {\nuse 0000000000000000000000000000000000000000000000000000000000000001::option;\nuse 0000000000000000000000000000000000000000000000000000000000000001::type_name;\nuse 0000000000000000000000000000000000000000000000000000000000000002::balance;\nuse 0000000000000000000000000000000000000000000000000000000000000002::coin;\nuse 0000000000000000000000000000000000000000000000000000000000000002::dynamic_field;\nuse 0000000000000000000000000000000000000000000000000000000000000002::event;\nuse 0000000000000000000000000000000000000000000000000000000000000002::object;\nuse 0000000000000000000000000000000000000000000000000000000000000002::package;\nuse 0000000000000000000000000000000000000000000000000000000000000002::sui;\nuse 0000000000000000000000000000000000000000000000000000000000000002::transfer;\nuse 0000000000000000000000000000000000000000000000000000000000000002::tx_context;\nuse 0000000000000000000000000000000000000000000000000000000000000002::vec_set;\n\n\nstruct TransferRequest<phantom Ty0> {\n\titem: ID,\n\tpaid: u64,\n\tfrom: ID,\n\treceipts: VecSet<TypeName>\n}\nstruct TransferPolicy<phantom Ty0> has store, key {\n\tid: UID,\n\tbalance: Balance<SUI>,\n\trules: VecSet<TypeName>\n}\nstruct TransferPolicyCap<phantom Ty0> has store, key {\n\tid: UID,\n\tpolicy_id: ID\n}\nstruct TransferPolicyCreated<phantom Ty0> has copy, drop {\n\tid: ID\n}\nstruct RuleKey<phantom Ty0: drop> has copy, drop, store {\n\tdummy_field: bool\n}\n\npublic new_request<Ty0>(Arg0: ID, Arg1: u64, Arg2: ID): TransferRequest<Ty0> {\nB0:\n\t0: MoveLoc[0](Arg0: ID)\n\t1: MoveLoc[1](Arg1: u64)\n\t2: MoveLoc[2](Arg2: ID)\n\t3: Call vec_set::empty<TypeName>(): VecSet<TypeName>\n\t4: PackGeneric[0](TransferRequest<Ty0>)\n\t5: Ret\n}\npublic new<Ty0>(Arg0: &Publisher, Arg1: &mut TxContext): TransferPolicy<Ty0> * TransferPolicyCap<Ty0> {\nL0:\tloc2: Balance<SUI>\nL1:\tloc3: UID\nL2:\tloc4: ID\nB0:\n\t0: MoveLoc[0](Arg0: &Publisher)\n\t1: Call package::from_package<Ty0>(&Publisher): bool\n\t2: BrFalse(4)\nB1:\n\t3: Branch(8)\nB2:\n\t4: MoveLoc[1](Arg1: &mut TxContext)\n\t5: Pop\n\t6: LdU64(0)\n\t7: Abort\nB3:\n\t8: CopyLoc[1](Arg1: &mut TxContext)\n\t9: Call object::new(&mut TxContext): UID\n\t10: StLoc[5](loc3: UID)\n\t11: ImmBorrowLoc[5](loc3: UID)\n\t12: Call object::uid_to_inner(&UID): ID\n\t13: StLoc[6](loc4: ID)\n\t14: CopyLoc[6](loc4: ID)\n\t15: PackGeneric[1](TransferPolicyCreated<Ty0>)\n\t16: Call event::emit<TransferPolicyCreated<Ty0>>(TransferPolicyCreated<Ty0>)\n\t17: MoveLoc[5](loc3: UID)\n\t18: StLoc[2](loc0: UID)\n\t19: Call vec_set::empty<TypeName>(): VecSet<TypeName>\n\t20: StLoc[3](loc1: VecSet<TypeName>)\n\t21: Call balance::zero<SUI>(): Balance<SUI>\n\t22: StLoc[4](loc2: Balance<SUI>)\n\t23: MoveLoc[2](loc0: UID)\n\t24: MoveLoc[4](loc2: Balance<SUI>)\n\t25: MoveLoc[3](loc1: VecSet<TypeName>)\n\t26: PackGeneric[2](TransferPolicy<Ty0>)\n\t27: MoveLoc[1](Arg1: &mut TxContext)\n\t28: Call object::new(&mut TxContext): UID\n\t29: MoveLoc[6](loc4: ID)\n\t30: PackGeneric[3](TransferPolicyCap<Ty0>)\n\t31: Ret\n}\nentry default<Ty0>(Arg0: &Publisher, Arg1: &mut TxContext) {\nB0:\n\t0: MoveLoc[0](Arg0: &Publisher)\n\t1: CopyLoc[1](Arg1: &mut TxContext)\n\t2: Call new<Ty0>(&Publisher, &mut TxContext): TransferPolicy<Ty0> * TransferPolicyCap<Ty0>\n\t3: StLoc[2](loc0: TransferPolicyCap<Ty0>)\n\t4: Call transfer::share_object<TransferPolicy<Ty0>>(TransferPolicy<Ty0>)\n\t5: MoveLoc[2](loc0: TransferPolicyCap<Ty0>)\n\t6: MoveLoc[1](Arg1: &mut TxContext)\n\t7: FreezeRef\n\t8: Call tx_context::sender(&TxContext): address\n\t9: Call transfer::transfer<TransferPolicyCap<Ty0>>(TransferPolicyCap<Ty0>, address)\n\t10: Ret\n}\npublic withdraw<Ty0>(Arg0: &mut TransferPolicy<Ty0>, Arg1: &TransferPolicyCap<Ty0>, Arg2: Option<u64>, Arg3: &mut TxContext): Coin<SUI> {\nB0:\n\t0: CopyLoc[0](Arg0: &mut TransferPolicy<Ty0>)\n\t1: FreezeRef\n\t2: Call object::id<TransferPolicy<Ty0>>(&TransferPolicy<Ty0>): ID\n\t3: MoveLoc[1](Arg1: &TransferPolicyCap<Ty0>)\n\t4: ImmBorrowFieldGeneric[0](TransferPolicyCap.policy_id: ID)\n\t5: ReadRef\n\t6: Eq\n\t7: BrFalse(9)\nB1:\n\t8: Branch(15)\nB2:\n\t9: MoveLoc[0](Arg0: &mut TransferPolicy<Ty0>)\n\t10: Pop\n\t11: MoveLoc[3](Arg3: &mut TxContext)\n\t12: Pop\n\t13: LdConst[4](U64: 04000000..)\n\t14: Abort\nB3:\n\t15: ImmBorrowLoc[2](Arg2: Option<u64>)\n\t16: Call option::is_some<u64>(&Option<u64>): bool\n\t17: BrFalse(37)\nB4:\n\t18: MoveLoc[2](Arg2: Option<u64>)\n\t19: Call option::destroy_some<u64>(Option<u64>): u64\n\t20: StLoc[6](loc2: u64)\n\t21: CopyLoc[6](loc2: u64)\n\t22: CopyLoc[0](Arg0: &mut TransferPolicy<Ty0>)\n\t23: ImmBorrowFieldGeneric[1](TransferPolicy.balance: Balance<SUI>)\n\t24: Call balance::value<SUI>(&Balance<SUI>): u64\n\t25: Le\n\t26: BrFalse(28)\nB5:\n\t27: Branch(34)\nB6:\n\t28: MoveLoc[0](Arg0: &mut TransferPolicy<Ty0>)\n\t29: Pop\n\t30: MoveLoc[3](Arg3: &mut TxContext)\n\t31: Pop\n\t32: LdConst[5](U64: 05000000..)\n\t33: Abort\nB7:\n\t34: MoveLoc[6](loc2: u64)\n\t35: StLoc[4](loc0: u64)\n\t36: Branch(41)\nB8:\n\t37: CopyLoc[0](Arg0: &mut TransferPolicy<Ty0>)\n\t38: ImmBorrowFieldGeneric[1](TransferPolicy.balance: Balance<SUI>)\n\t39: Call balance::value<SUI>(&Balance<SUI>): u64\n\t40: StLoc[4](loc0: u64)\nB9:\n\t41: MoveLoc[4](loc0: u64)\n\t42: StLoc[5](loc1: u64)\n\t43: MoveLoc[0](Arg0: &mut TransferPolicy<Ty0>)\n\t44: MutBorrowFieldGeneric[1](TransferPolicy.balance: Balance<SUI>)\n\t45: MoveLoc[5](loc1: u64)\n\t46: MoveLoc[3](Arg3: &mut TxContext)\n\t47: Call coin::take<SUI>(&mut Balance<SUI>, u64, &mut TxContext): Coin<SUI>\n\t48: Ret\n}\npublic destroy_and_withdraw<Ty0>(Arg0: TransferPolicy<Ty0>, Arg1: TransferPolicyCap<Ty0>, Arg2: &mut TxContext): Coin<SUI> {\nB0:\n\t0: ImmBorrowLoc[0](Arg0: TransferPolicy<Ty0>)\n\t1: Call object::id<TransferPolicy<Ty0>>(&TransferPolicy<Ty0>): ID\n\t2: ImmBorrowLoc[1](Arg1: TransferPolicyCap<Ty0>)\n\t3: ImmBorrowFieldGeneric[0](TransferPolicyCap.policy_id: ID)\n\t4: ReadRef\n\t5: Eq\n\t6: BrFalse(8)\nB1:\n\t7: Branch(12)\nB2:\n\t8: MoveLoc[2](Arg2: &mut TxContext)\n\t9: Pop\n\t10: LdConst[4](U64: 04000000..)\n\t11: Abort\nB3:\n\t12: MoveLoc[1](Arg1: TransferPolicyCap<Ty0>)\n\t13: UnpackGeneric[3](TransferPolicyCap<Ty0>)\n\t14: Pop\n\t15: StLoc[4](loc1: UID)\n\t16: MoveLoc[0](Arg0: TransferPolicy<Ty0>)\n\t17: UnpackGeneric[2](TransferPolicy<Ty0>)\n\t18: Pop\n\t19: StLoc[3](loc0: Balance<SUI>)\n\t20: Call object::delete(UID)\n\t21: MoveLoc[4](loc1: UID)\n\t22: Call object::delete(UID)\n\t23: MoveLoc[3](loc0: Balance<SUI>)\n\t24: MoveLoc[2](Arg2: &mut TxContext)\n\t25: Call coin::from_balance<SUI>(Balance<SUI>, &mut TxContext): Coin<SUI>\n\t26: Ret\n}\npublic confirm_request<Ty0>(Arg0: &TransferPolicy<Ty0>, Arg1: TransferRequest<Ty0>): ID * u64 * ID {\nL0:\tloc2: ID\nL1:\tloc3: u64\nL2:\tloc4: VecSet<TypeName>\nL3:\tloc5: TypeName\nL4:\tloc6: u64\nB0:\n\t0: MoveLoc[1](Arg1: TransferRequest<Ty0>)\n\t1: UnpackGeneric[0](TransferRequest<Ty0>)\n\t2: StLoc[6](loc4: VecSet<TypeName>)\n\t3: StLoc[3](loc1: ID)\n\t4: StLoc[5](loc3: u64)\n\t5: StLoc[4](loc2: ID)\n\t6: MoveLoc[6](loc4: VecSet<TypeName>)\n\t7: Call vec_set::into_keys<TypeName>(VecSet<TypeName>): vector<TypeName>\n\t8: StLoc[2](loc0: vector<TypeName>)\n\t9: ImmBorrowLoc[2](loc0: vector<TypeName>)\n\t10: VecLen(23)\n\t11: StLoc[8](loc6: u64)\n\t12: CopyLoc[8](loc6: u64)\n\t13: CopyLoc[0](Arg0: &TransferPolicy<Ty0>)\n\t14: ImmBorrowFieldGeneric[2](TransferPolicy.rules: VecSet<TypeName>)\n\t15: Call vec_set::size<TypeName>(&VecSet<TypeName>): u64\n\t16: Eq\n\t17: BrFalse(19)\nB1:\n\t18: Branch(23)\nB2:\n\t19: MoveLoc[0](Arg0: &TransferPolicy<Ty0>)\n\t20: Pop\n\t21: LdConst[0](U64: 00000000..)\n\t22: Abort\nB3:\n\t23: CopyLoc[8](loc6: u64)\n\t24: LdU64(0)\n\t25: Gt\n\t26: BrFalse(46)\nB4:\n\t27: Branch(28)\nB5:\n\t28: MutBorrowLoc[2](loc0: vector<TypeName>)\n\t29: VecPopBack(23)\n\t30: StLoc[7](loc5: TypeName)\n\t31: CopyLoc[0](Arg0: &TransferPolicy<Ty0>)\n\t32: ImmBorrowFieldGeneric[2](TransferPolicy.rules: VecSet<TypeName>)\n\t33: ImmBorrowLoc[7](loc5: TypeName)\n\t34: Call vec_set::contains<TypeName>(&VecSet<TypeName>, &TypeName): bool\n\t35: BrFalse(37)\nB6:\n\t36: Branch(41)\nB7:\n\t37: MoveLoc[0](Arg0: &TransferPolicy<Ty0>)\n\t38: Pop\n\t39: LdConst[1](U64: 01000000..)\n\t40: Abort\nB8:\n\t41: MoveLoc[8](loc6: u64)\n\t42: LdU64(1)\n\t43: Sub\n\t44: StLoc[8](loc6: u64)\n\t45: Branch(23)\nB9:\n\t46: MoveLoc[0](Arg0: &TransferPolicy<Ty0>)\n\t47: Pop\n\t48: MoveLoc[4](loc2: ID)\n\t49: MoveLoc[5](loc3: u64)\n\t50: MoveLoc[3](loc1: ID)\n\t51: Ret\n}\npublic add_rule<Ty0, Ty1: drop, Ty2: drop + store>(Arg0: Ty1, Arg1: &mut TransferPolicy<Ty0>, Arg2: &TransferPolicyCap<Ty0>, Arg3: Ty2) {\nB0:\n\t0: CopyLoc[1](Arg1: &mut TransferPolicy<Ty0>)\n\t1: FreezeRef\n\t2: Call object::id<TransferPolicy<Ty0>>(&TransferPolicy<Ty0>): ID\n\t3: MoveLoc[2](Arg2: &TransferPolicyCap<Ty0>)\n\t4: ImmBorrowFieldGeneric[0](TransferPolicyCap.policy_id: ID)\n\t5: ReadRef\n\t6: Eq\n\t7: BrFalse(9)\nB1:\n\t8: Branch(13)\nB2:\n\t9: MoveLoc[1](Arg1: &mut TransferPolicy<Ty0>)\n\t10: Pop\n\t11: LdConst[4](U64: 04000000..)\n\t12: Abort\nB3:\n\t13: CopyLoc[1](Arg1: &mut TransferPolicy<Ty0>)\n\t14: FreezeRef\n\t15: Call has_rule<Ty0, Ty1>(&TransferPolicy<Ty0>): bool\n\t16: Not\n\t17: BrFalse(19)\nB4:\n\t18: Branch(23)\nB5:\n\t19: MoveLoc[1](Arg1: &mut TransferPolicy<Ty0>)\n\t20: Pop\n\t21: LdConst[3](U64: 03000000..)\n\t22: Abort\nB6:\n\t23: CopyLoc[1](Arg1: &mut TransferPolicy<Ty0>)\n\t24: MutBorrowFieldGeneric[3](TransferPolicy.id: UID)\n\t25: LdFalse\n\t26: PackGeneric[4](RuleKey<Ty1>)\n\t27: MoveLoc[3](Arg3: Ty2)\n\t28: Call dynamic_field::add<RuleKey<Ty1>, Ty2>(&mut UID, RuleKey<Ty1>, Ty2)\n\t29: MoveLoc[1](Arg1: &mut TransferPolicy<Ty0>)\n\t30: MutBorrowFieldGeneric[2](TransferPolicy.rules: VecSet<TypeName>)\n\t31: Call type_name::get<Ty1>(): TypeName\n\t32: Call vec_set::insert<TypeName>(&mut VecSet<TypeName>, TypeName)\n\t33: Ret\n}\npublic get_rule<Ty0, Ty1: drop, Ty2: drop + store>(Arg0: Ty1, Arg1: &TransferPolicy<Ty0>): &Ty2 {\nB0:\n\t0: MoveLoc[1](Arg1: &TransferPolicy<Ty0>)\n\t1: ImmBorrowFieldGeneric[3](TransferPolicy.id: UID)\n\t2: LdFalse\n\t3: PackGeneric[4](RuleKey<Ty1>)\n\t4: Call dynamic_field::borrow<RuleKey<Ty1>, Ty2>(&UID, RuleKey<Ty1>): &Ty2\n\t5: Ret\n}\npublic add_to_balance<Ty0, Ty1: drop>(Arg0: Ty1, Arg1: &mut TransferPolicy<Ty0>, Arg2: Coin<SUI>) {\nB0:\n\t0: CopyLoc[1](Arg1: &mut TransferPolicy<Ty0>)\n\t1: FreezeRef\n\t2: Call has_rule<Ty0, Ty1>(&TransferPolicy<Ty0>): bool\n\t3: BrFalse(5)\nB1:\n\t4: Branch(9)\nB2:\n\t5: MoveLoc[1](Arg1: &mut TransferPolicy<Ty0>)\n\t6: Pop\n\t7: LdConst[2](U64: 02000000..)\n\t8: Abort\nB3:\n\t9: MoveLoc[1](Arg1: &mut TransferPolicy<Ty0>)\n\t10: MutBorrowFieldGeneric[1](TransferPolicy.balance: Balance<SUI>)\n\t11: MoveLoc[2](Arg2: Coin<SUI>)\n\t12: Call coin::put<SUI>(&mut Balance<SUI>, Coin<SUI>)\n\t13: Ret\n}\npublic add_receipt<Ty0, Ty1: drop>(Arg0: Ty1, Arg1: &mut TransferRequest<Ty0>) {\nB0:\n\t0: MoveLoc[1](Arg1: &mut TransferRequest<Ty0>)\n\t1: MutBorrowFieldGeneric[4](TransferRequest.receipts: VecSet<TypeName>)\n\t2: Call type_name::get<Ty1>(): TypeName\n\t3: Call vec_set::insert<TypeName>(&mut VecSet<TypeName>, TypeName)\n\t4: Ret\n}\npublic has_rule<Ty0, Ty1: drop>(Arg0: &TransferPolicy<Ty0>): bool {\nB0:\n\t0: MoveLoc[0](Arg0: &TransferPolicy<Ty0>)\n\t1: ImmBorrowFieldGeneric[3](TransferPolicy.id: UID)\n\t2: LdFalse\n\t3: PackGeneric[4](RuleKey<Ty1>)\n\t4: Call dynamic_field::exists_<RuleKey<Ty1>>(&UID, RuleKey<Ty1>): bool\n\t5: Ret\n}\npublic remove_rule<Ty0, Ty1: drop, Ty2: drop + store>(Arg0: &mut TransferPolicy<Ty0>, Arg1: &TransferPolicyCap<Ty0>) {\nB0:\n\t0: CopyLoc[0](Arg0: &mut TransferPolicy<Ty0>)\n\t1: FreezeRef\n\t2: Call object::id<TransferPolicy<Ty0>>(&TransferPolicy<Ty0>): ID\n\t3: MoveLoc[1](Arg1: &TransferPolicyCap<Ty0>)\n\t4: ImmBorrowFieldGeneric[0](TransferPolicyCap.policy_id: ID)\n\t5: ReadRef\n\t6: Eq\n\t7: BrFalse(9)\nB1:\n\t8: Branch(13)\nB2:\n\t9: MoveLoc[0](Arg0: &mut TransferPolicy<Ty0>)\n\t10: Pop\n\t11: LdConst[4](U64: 04000000..)\n\t12: Abort\nB3:\n\t13: CopyLoc[0](Arg0: &mut TransferPolicy<Ty0>)\n\t14: MutBorrowFieldGeneric[3](TransferPolicy.id: UID)\n\t15: LdFalse\n\t16: PackGeneric[4](RuleKey<Ty1>)\n\t17: Call dynamic_field::remove<RuleKey<Ty1>, Ty2>(&mut UID, RuleKey<Ty1>): Ty2\n\t18: Pop\n\t19: MoveLoc[0](Arg0: &mut TransferPolicy<Ty0>)\n\t20: MutBorrowFieldGeneric[2](TransferPolicy.rules: VecSet<TypeName>)\n\t21: StLoc[3](loc1: &mut VecSet<TypeName>)\n\t22: Call type_name::get<Ty1>(): TypeName\n\t23: StLoc[2](loc0: TypeName)\n\t24: MoveLoc[3](loc1: &mut VecSet<TypeName>)\n\t25: ImmBorrowLoc[2](loc0: TypeName)\n\t26: Call vec_set::remove<TypeName>(&mut VecSet<TypeName>, &TypeName)\n\t27: Ret\n}\npublic uid<Ty0>(Arg0: &TransferPolicy<Ty0>): &UID {\nB0:\n\t0: MoveLoc[0](Arg0: &TransferPolicy<Ty0>)\n\t1: ImmBorrowFieldGeneric[3](TransferPolicy.id: UID)\n\t2: Ret\n}\npublic uid_mut_as_owner<Ty0>(Arg0: &mut TransferPolicy<Ty0>, Arg1: &TransferPolicyCap<Ty0>): &mut UID {\nB0:\n\t0: CopyLoc[0](Arg0: &mut TransferPolicy<Ty0>)\n\t1: FreezeRef\n\t2: Call object::id<TransferPolicy<Ty0>>(&TransferPolicy<Ty0>): ID\n\t3: MoveLoc[1](Arg1: &TransferPolicyCap<Ty0>)\n\t4: ImmBorrowFieldGeneric[0](TransferPolicyCap.policy_id: ID)\n\t5: ReadRef\n\t6: Eq\n\t7: BrFalse(9)\nB1:\n\t8: Branch(13)\nB2:\n\t9: MoveLoc[0](Arg0: &mut TransferPolicy<Ty0>)\n\t10: Pop\n\t11: LdConst[4](U64: 04000000..)\n\t12: Abort\nB3:\n\t13: MoveLoc[0](Arg0: &mut TransferPolicy<Ty0>)\n\t14: MutBorrowFieldGeneric[3](TransferPolicy.id: UID)\n\t15: Ret\n}\npublic rules<Ty0>(Arg0: &TransferPolicy<Ty0>): &VecSet<TypeName> {\nB0:\n\t0: MoveLoc[0](Arg0: &TransferPolicy<Ty0>)\n\t1: ImmBorrowFieldGeneric[2](TransferPolicy.rules: VecSet<TypeName>)\n\t2: Ret\n}\npublic item<Ty0>(Arg0: &TransferRequest<Ty0>): ID {\nB0:\n\t0: MoveLoc[0](Arg0: &TransferRequest<Ty0>)\n\t1: ImmBorrowFieldGeneric[5](TransferRequest.item: ID)\n\t2: ReadRef\n\t3: Ret\n}\npublic paid<Ty0>(Arg0: &TransferRequest<Ty0>): u64 {\nB0:\n\t0: MoveLoc[0](Arg0: &TransferRequest<Ty0>)\n\t1: ImmBorrowFieldGeneric[6](TransferRequest.paid: u64)\n\t2: ReadRef\n\t3: Ret\n}\npublic from<Ty0>(Arg0: &TransferRequest<Ty0>): ID {\nB0:\n\t0: MoveLoc[0](Arg0: &TransferRequest<Ty0>)\n\t1: ImmBorrowFieldGeneric[7](TransferRequest.from: ID)\n\t2: ReadRef\n\t3: Ret\n}\n\nConstants [\n\t0 => u64: 0000000000000000\n\t1 => u64: 0100000000000000\n\t2 => u64: 0200000000000000\n\t3 => u64: 0300000000000000\n\t4 => u64: 0400000000000000\n\t5 => u64: 0500000000000000\n]\n}",
          "tx_context": "// Move bytecode v6\nmodule 2.tx_context {\nstruct TxContext has drop {\n\tsender: address,\n\ttx_hash: vector<u8>,\n\tepoch: u64,\n\tepoch_timestamp_ms: u64,\n\tids_created: u64\n}\n\npublic sender(Arg0: &TxContext): address {\nB0:\n\t0: MoveLoc[0](Arg0: &TxContext)\n\t1: ImmBorrowField[0](TxContext.sender: address)\n\t2: ReadRef\n\t3: Ret\n}\npublic digest(Arg0: &TxContext): &vector<u8> {\nB0:\n\t0: MoveLoc[0](Arg0: &TxContext)\n\t1: ImmBorrowField[1](TxContext.tx_hash: vector<u8>)\n\t2: Ret\n}\npublic epoch(Arg0: &TxContext): u64 {\nB0:\n\t0: MoveLoc[0](Arg0: &TxContext)\n\t1: ImmBorrowField[2](TxContext.epoch: u64)\n\t2: ReadRef\n\t3: Ret\n}\npublic epoch_timestamp_ms(Arg0: &TxContext): u64 {\nB0:\n\t0: MoveLoc[0](Arg0: &TxContext)\n\t1: ImmBorrowField[3](TxContext.epoch_timestamp_ms: u64)\n\t2: ReadRef\n\t3: Ret\n}\npublic fresh_object_address(Arg0: &mut TxContext): address {\nL0:\tloc1: u64\nB0:\n\t0: CopyLoc[0](Arg0: &mut TxContext)\n\t1: ImmBorrowField[4](TxContext.ids_created: u64)\n\t2: ReadRef\n\t3: StLoc[2](loc1: u64)\n\t4: CopyLoc[0](Arg0: &mut TxContext)\n\t5: ImmBorrowField[1](TxContext.tx_hash: vector<u8>)\n\t6: ReadRef\n\t7: CopyLoc[2](loc1: u64)\n\t8: Call derive_id(vector<u8>, u64): address\n\t9: StLoc[1](loc0: address)\n\t10: MoveLoc[2](loc1: u64)\n\t11: LdU64(1)\n\t12: Add\n\t13: MoveLoc[0](Arg0: &mut TxContext)\n\t14: MutBorrowField[4](TxContext.ids_created: u64)\n\t15: WriteRef\n\t16: MoveLoc[1](loc0: address)\n\t17: Ret\n}\nids_created(Arg0: &TxContext): u64 {\nB0:\n\t0: MoveLoc[0](Arg0: &TxContext)\n\t1: ImmBorrowField[4](TxContext.ids_created: u64)\n\t2: ReadRef\n\t3: Ret\n}\nnative derive_id(Arg0: vector<u8>, Arg1: u64): address\n}",
          "types": "// Move bytecode v6\nmodule 2.types {\n\n\nnative public is_one_time_witness<Ty0: drop>(Arg0: &Ty0): bool\n}",
          "url": "// Move bytecode v6\nmodule 2.url {\nuse 0000000000000000000000000000000000000000000000000000000000000001::ascii;\n\n\nstruct Url has copy, drop, store {\n\turl: String\n}\n\npublic new_unsafe(Arg0: String): Url {\nB0:\n\t0: MoveLoc[0](Arg0: String)\n\t1: Pack[0](Url)\n\t2: Ret\n}\npublic new_unsafe_from_bytes(Arg0: vector<u8>): Url {\nB0:\n\t0: MoveLoc[0](Arg0: vector<u8>)\n\t1: Call ascii::string(vector<u8>): String\n\t2: Pack[0](Url)\n\t3: Ret\n}\npublic inner_url(Arg0: &Url): String {\nB0:\n\t0: MoveLoc[0](Arg0: &Url)\n\t1: ImmBorrowField[0](Url.url: String)\n\t2: ReadRef\n\t3: Ret\n}\npublic update(Arg0: &mut Url, Arg1: String) {\nB0:\n\t0: MoveLoc[1](Arg1: String)\n\t1: MoveLoc[0](Arg0: &mut Url)\n\t2: MutBorrowField[0](Url.url: String)\n\t3: WriteRef\n\t4: Ret\n}\n}",
          "vec_map": "// Move bytecode v6\nmodule 2.vec_map {\nuse 0000000000000000000000000000000000000000000000000000000000000001::option;\nuse 0000000000000000000000000000000000000000000000000000000000000001::vector;\n\n\nstruct VecMap<Ty0: copy, Ty1> has copy, drop, store {\n\tcontents: vector<Entry<Ty0, Ty1>>\n}\nstruct Entry<Ty0: copy, Ty1> has copy, drop, store {\n\tkey: Ty0,\n\tvalue: Ty1\n}\n\npublic empty<Ty0: copy, Ty1>(): VecMap<Ty0, Ty1> {\nB0:\n\t0: VecPack(20, 0)\n\t1: PackGeneric[0](VecMap<Ty0, Ty1>)\n\t2: Ret\n}\npublic insert<Ty0: copy, Ty1>(Arg0: &mut VecMap<Ty0, Ty1>, Arg1: Ty0, Arg2: Ty1) {\nB0:\n\t0: CopyLoc[0](Arg0: &mut VecMap<Ty0, Ty1>)\n\t1: ImmBorrowLoc[1](Arg1: Ty0)\n\t2: StLoc[3](loc0: &Ty0)\n\t3: FreezeRef\n\t4: MoveLoc[3](loc0: &Ty0)\n\t5: Call contains<Ty0, Ty1>(&VecMap<Ty0, Ty1>, &Ty0): bool\n\t6: Not\n\t7: BrFalse(9)\nB1:\n\t8: Branch(13)\nB2:\n\t9: MoveLoc[0](Arg0: &mut VecMap<Ty0, Ty1>)\n\t10: Pop\n\t11: LdConst[0](U64: 00000000..)\n\t12: Abort\nB3:\n\t13: MoveLoc[0](Arg0: &mut VecMap<Ty0, Ty1>)\n\t14: MutBorrowFieldGeneric[0](VecMap.contents: vector<Entry<Ty0, Ty1>>)\n\t15: MoveLoc[1](Arg1: Ty0)\n\t16: MoveLoc[2](Arg2: Ty1)\n\t17: PackGeneric[1](Entry<Ty0, Ty1>)\n\t18: VecPushBack(20)\n\t19: Ret\n}\npublic remove<Ty0: copy, Ty1>(Arg0: &mut VecMap<Ty0, Ty1>, Arg1: &Ty0): Ty0 * Ty1 {\nB0:\n\t0: CopyLoc[0](Arg0: &mut VecMap<Ty0, Ty1>)\n\t1: MoveLoc[1](Arg1: &Ty0)\n\t2: StLoc[2](loc0: &Ty0)\n\t3: FreezeRef\n\t4: MoveLoc[2](loc0: &Ty0)\n\t5: Call get_idx<Ty0, Ty1>(&VecMap<Ty0, Ty1>, &Ty0): u64\n\t6: StLoc[3](loc1: u64)\n\t7: MoveLoc[0](Arg0: &mut VecMap<Ty0, Ty1>)\n\t8: MutBorrowFieldGeneric[0](VecMap.contents: vector<Entry<Ty0, Ty1>>)\n\t9: MoveLoc[3](loc1: u64)\n\t10: Call vector::remove<Entry<Ty0, Ty1>>(&mut vector<Entry<Ty0, Ty1>>, u64): Entry<Ty0, Ty1>\n\t11: UnpackGeneric[1](Entry<Ty0, Ty1>)\n\t12: Ret\n}\npublic pop<Ty0: copy, Ty1>(Arg0: &mut VecMap<Ty0, Ty1>): Ty0 * Ty1 {\nB0:\n\t0: CopyLoc[0](Arg0: &mut VecMap<Ty0, Ty1>)\n\t1: ImmBorrowFieldGeneric[0](VecMap.contents: vector<Entry<Ty0, Ty1>>)\n\t2: Call vector::is_empty<Entry<Ty0, Ty1>>(&vector<Entry<Ty0, Ty1>>): bool\n\t3: Not\n\t4: BrFalse(6)\nB1:\n\t5: Branch(10)\nB2:\n\t6: MoveLoc[0](Arg0: &mut VecMap<Ty0, Ty1>)\n\t7: Pop\n\t8: LdConst[4](U64: 04000000..)\n\t9: Abort\nB3:\n\t10: MoveLoc[0](Arg0: &mut VecMap<Ty0, Ty1>)\n\t11: MutBorrowFieldGeneric[0](VecMap.contents: vector<Entry<Ty0, Ty1>>)\n\t12: VecPopBack(20)\n\t13: UnpackGeneric[1](Entry<Ty0, Ty1>)\n\t14: Ret\n}\npublic get_mut<Ty0: copy, Ty1>(Arg0: &mut VecMap<Ty0, Ty1>, Arg1: &Ty0): &mut Ty1 {\nB0:\n\t0: CopyLoc[0](Arg0: &mut VecMap<Ty0, Ty1>)\n\t1: MoveLoc[1](Arg1: &Ty0)\n\t2: StLoc[2](loc0: &Ty0)\n\t3: FreezeRef\n\t4: MoveLoc[2](loc0: &Ty0)\n\t5: Call get_idx<Ty0, Ty1>(&VecMap<Ty0, Ty1>, &Ty0): u64\n\t6: StLoc[3](loc1: u64)\n\t7: MoveLoc[0](Arg0: &mut VecMap<Ty0, Ty1>)\n\t8: MutBorrowFieldGeneric[0](VecMap.contents: vector<Entry<Ty0, Ty1>>)\n\t9: MoveLoc[3](loc1: u64)\n\t10: VecMutBorrow(20)\n\t11: MutBorrowFieldGeneric[1](Entry.value: Ty1)\n\t12: Ret\n}\npublic get<Ty0: copy, Ty1>(Arg0: &VecMap<Ty0, Ty1>, Arg1: &Ty0): &Ty1 {\nB0:\n\t0: CopyLoc[0](Arg0: &VecMap<Ty0, Ty1>)\n\t1: MoveLoc[1](Arg1: &Ty0)\n\t2: Call get_idx<Ty0, Ty1>(&VecMap<Ty0, Ty1>, &Ty0): u64\n\t3: StLoc[2](loc0: u64)\n\t4: MoveLoc[0](Arg0: &VecMap<Ty0, Ty1>)\n\t5: ImmBorrowFieldGeneric[0](VecMap.contents: vector<Entry<Ty0, Ty1>>)\n\t6: MoveLoc[2](loc0: u64)\n\t7: VecImmBorrow(20)\n\t8: ImmBorrowFieldGeneric[1](Entry.value: Ty1)\n\t9: Ret\n}\npublic try_get<Ty0: copy, Ty1: copy>(Arg0: &VecMap<Ty0, Ty1>, Arg1: &Ty0): Option<Ty1> {\nB0:\n\t0: CopyLoc[0](Arg0: &VecMap<Ty0, Ty1>)\n\t1: CopyLoc[1](Arg1: &Ty0)\n\t2: Call contains<Ty0, Ty1>(&VecMap<Ty0, Ty1>, &Ty0): bool\n\t3: BrFalse(11)\nB1:\n\t4: MoveLoc[0](Arg0: &VecMap<Ty0, Ty1>)\n\t5: MoveLoc[1](Arg1: &Ty0)\n\t6: Call get<Ty0, Ty1>(&VecMap<Ty0, Ty1>, &Ty0): &Ty1\n\t7: ReadRef\n\t8: Call option::some<Ty1>(Ty1): Option<Ty1>\n\t9: StLoc[2](loc0: Option<Ty1>)\n\t10: Branch(17)\nB2:\n\t11: MoveLoc[0](Arg0: &VecMap<Ty0, Ty1>)\n\t12: Pop\n\t13: MoveLoc[1](Arg1: &Ty0)\n\t14: Pop\n\t15: Call option::none<Ty1>(): Option<Ty1>\n\t16: StLoc[2](loc0: Option<Ty1>)\nB3:\n\t17: MoveLoc[2](loc0: Option<Ty1>)\n\t18: Ret\n}\npublic contains<Ty0: copy, Ty1>(Arg0: &VecMap<Ty0, Ty1>, Arg1: &Ty0): bool {\nB0:\n\t0: MoveLoc[0](Arg0: &VecMap<Ty0, Ty1>)\n\t1: MoveLoc[1](Arg1: &Ty0)\n\t2: Call get_idx_opt<Ty0, Ty1>(&VecMap<Ty0, Ty1>, &Ty0): Option<u64>\n\t3: StLoc[2](loc0: Option<u64>)\n\t4: ImmBorrowLoc[2](loc0: Option<u64>)\n\t5: Call option::is_some<u64>(&Option<u64>): bool\n\t6: Ret\n}\npublic size<Ty0: copy, Ty1>(Arg0: &VecMap<Ty0, Ty1>): u64 {\nB0:\n\t0: MoveLoc[0](Arg0: &VecMap<Ty0, Ty1>)\n\t1: ImmBorrowFieldGeneric[0](VecMap.contents: vector<Entry<Ty0, Ty1>>)\n\t2: VecLen(20)\n\t3: Ret\n}\npublic is_empty<Ty0: copy, Ty1>(Arg0: &VecMap<Ty0, Ty1>): bool {\nB0:\n\t0: MoveLoc[0](Arg0: &VecMap<Ty0, Ty1>)\n\t1: Call size<Ty0, Ty1>(&VecMap<Ty0, Ty1>): u64\n\t2: LdU64(0)\n\t3: Eq\n\t4: Ret\n}\npublic destroy_empty<Ty0: copy, Ty1>(Arg0: VecMap<Ty0, Ty1>) {\nB0:\n\t0: MoveLoc[0](Arg0: VecMap<Ty0, Ty1>)\n\t1: UnpackGeneric[0](VecMap<Ty0, Ty1>)\n\t2: StLoc[1](loc0: vector<Entry<Ty0, Ty1>>)\n\t3: ImmBorrowLoc[1](loc0: vector<Entry<Ty0, Ty1>>)\n\t4: Call vector::is_empty<Entry<Ty0, Ty1>>(&vector<Entry<Ty0, Ty1>>): bool\n\t5: BrFalse(7)\nB1:\n\t6: Branch(9)\nB2:\n\t7: LdConst[2](U64: 02000000..)\n\t8: Abort\nB3:\n\t9: MoveLoc[1](loc0: vector<Entry<Ty0, Ty1>>)\n\t10: VecUnpack(20, 0)\n\t11: Ret\n}\npublic into_keys_values<Ty0: copy, Ty1>(Arg0: VecMap<Ty0, Ty1>): vector<Ty0> * vector<Ty1> {\nL0:\tloc1: u64\nL1:\tloc2: Ty0\nL2:\tloc3: vector<Ty0>\nL3:\tloc4: u64\nL4:\tloc5: Ty1\nL5:\tloc6: vector<Ty1>\nB0:\n\t0: MoveLoc[0](Arg0: VecMap<Ty0, Ty1>)\n\t1: UnpackGeneric[0](VecMap<Ty0, Ty1>)\n\t2: StLoc[1](loc0: vector<Entry<Ty0, Ty1>>)\n\t3: MutBorrowLoc[1](loc0: vector<Entry<Ty0, Ty1>>)\n\t4: Call vector::reverse<Entry<Ty0, Ty1>>(&mut vector<Entry<Ty0, Ty1>>)\n\t5: LdU64(0)\n\t6: StLoc[2](loc1: u64)\n\t7: ImmBorrowLoc[1](loc0: vector<Entry<Ty0, Ty1>>)\n\t8: VecLen(20)\n\t9: StLoc[5](loc4: u64)\n\t10: VecPack(24, 0)\n\t11: StLoc[4](loc3: vector<Ty0>)\n\t12: VecPack(26, 0)\n\t13: StLoc[7](loc6: vector<Ty1>)\nB1:\n\t14: CopyLoc[2](loc1: u64)\n\t15: CopyLoc[5](loc4: u64)\n\t16: Lt\n\t17: BrFalse(35)\nB2:\n\t18: Branch(19)\nB3:\n\t19: MutBorrowLoc[1](loc0: vector<Entry<Ty0, Ty1>>)\n\t20: VecPopBack(20)\n\t21: UnpackGeneric[1](Entry<Ty0, Ty1>)\n\t22: StLoc[6](loc5: Ty1)\n\t23: StLoc[3](loc2: Ty0)\n\t24: MutBorrowLoc[4](loc3: vector<Ty0>)\n\t25: MoveLoc[3](loc2: Ty0)\n\t26: VecPushBack(24)\n\t27: MutBorrowLoc[7](loc6: vector<Ty1>)\n\t28: MoveLoc[6](loc5: Ty1)\n\t29: VecPushBack(26)\n\t30: MoveLoc[2](loc1: u64)\n\t31: LdU64(1)\n\t32: Add\n\t33: StLoc[2](loc1: u64)\n\t34: Branch(14)\nB4:\n\t35: MoveLoc[1](loc0: vector<Entry<Ty0, Ty1>>)\n\t36: VecUnpack(20, 0)\n\t37: MoveLoc[4](loc3: vector<Ty0>)\n\t38: MoveLoc[7](loc6: vector<Ty1>)\n\t39: Ret\n}\npublic keys<Ty0: copy, Ty1>(Arg0: &VecMap<Ty0, Ty1>): vector<Ty0> {\nL0:\tloc1: u64\nL1:\tloc2: vector<Ty0>\nL2:\tloc3: u64\nB0:\n\t0: LdU64(0)\n\t1: StLoc[2](loc1: u64)\n\t2: CopyLoc[0](Arg0: &VecMap<Ty0, Ty1>)\n\t3: ImmBorrowFieldGeneric[0](VecMap.contents: vector<Entry<Ty0, Ty1>>)\n\t4: VecLen(20)\n\t5: StLoc[4](loc3: u64)\n\t6: VecPack(24, 0)\n\t7: StLoc[3](loc2: vector<Ty0>)\nB1:\n\t8: CopyLoc[2](loc1: u64)\n\t9: CopyLoc[4](loc3: u64)\n\t10: Lt\n\t11: BrFalse(28)\nB2:\n\t12: Branch(13)\nB3:\n\t13: CopyLoc[0](Arg0: &VecMap<Ty0, Ty1>)\n\t14: ImmBorrowFieldGeneric[0](VecMap.contents: vector<Entry<Ty0, Ty1>>)\n\t15: CopyLoc[2](loc1: u64)\n\t16: VecImmBorrow(20)\n\t17: StLoc[1](loc0: &Entry<Ty0, Ty1>)\n\t18: MutBorrowLoc[3](loc2: vector<Ty0>)\n\t19: MoveLoc[1](loc0: &Entry<Ty0, Ty1>)\n\t20: ImmBorrowFieldGeneric[2](Entry.key: Ty0)\n\t21: ReadRef\n\t22: VecPushBack(24)\n\t23: MoveLoc[2](loc1: u64)\n\t24: LdU64(1)\n\t25: Add\n\t26: StLoc[2](loc1: u64)\n\t27: Branch(8)\nB4:\n\t28: MoveLoc[0](Arg0: &VecMap<Ty0, Ty1>)\n\t29: Pop\n\t30: MoveLoc[3](loc2: vector<Ty0>)\n\t31: Ret\n}\npublic get_idx_opt<Ty0: copy, Ty1>(Arg0: &VecMap<Ty0, Ty1>, Arg1: &Ty0): Option<u64> {\nB0:\n\t0: LdU64(0)\n\t1: StLoc[2](loc0: u64)\n\t2: CopyLoc[0](Arg0: &VecMap<Ty0, Ty1>)\n\t3: Call size<Ty0, Ty1>(&VecMap<Ty0, Ty1>): u64\n\t4: StLoc[3](loc1: u64)\nB1:\n\t5: CopyLoc[2](loc0: u64)\n\t6: CopyLoc[3](loc1: u64)\n\t7: Lt\n\t8: BrFalse(30)\nB2:\n\t9: Branch(10)\nB3:\n\t10: CopyLoc[0](Arg0: &VecMap<Ty0, Ty1>)\n\t11: ImmBorrowFieldGeneric[0](VecMap.contents: vector<Entry<Ty0, Ty1>>)\n\t12: CopyLoc[2](loc0: u64)\n\t13: VecImmBorrow(20)\n\t14: ImmBorrowFieldGeneric[2](Entry.key: Ty0)\n\t15: CopyLoc[1](Arg1: &Ty0)\n\t16: Eq\n\t17: BrFalse(25)\nB4:\n\t18: MoveLoc[0](Arg0: &VecMap<Ty0, Ty1>)\n\t19: Pop\n\t20: MoveLoc[1](Arg1: &Ty0)\n\t21: Pop\n\t22: MoveLoc[2](loc0: u64)\n\t23: Call option::some<u64>(u64): Option<u64>\n\t24: Ret\nB5:\n\t25: MoveLoc[2](loc0: u64)\n\t26: LdU64(1)\n\t27: Add\n\t28: StLoc[2](loc0: u64)\n\t29: Branch(5)\nB6:\n\t30: MoveLoc[0](Arg0: &VecMap<Ty0, Ty1>)\n\t31: Pop\n\t32: MoveLoc[1](Arg1: &Ty0)\n\t33: Pop\n\t34: Call option::none<u64>(): Option<u64>\n\t35: Ret\n}\npublic get_idx<Ty0: copy, Ty1>(Arg0: &VecMap<Ty0, Ty1>, Arg1: &Ty0): u64 {\nB0:\n\t0: MoveLoc[0](Arg0: &VecMap<Ty0, Ty1>)\n\t1: MoveLoc[1](Arg1: &Ty0)\n\t2: Call get_idx_opt<Ty0, Ty1>(&VecMap<Ty0, Ty1>, &Ty0): Option<u64>\n\t3: StLoc[2](loc0: Option<u64>)\n\t4: ImmBorrowLoc[2](loc0: Option<u64>)\n\t5: Call option::is_some<u64>(&Option<u64>): bool\n\t6: BrFalse(8)\nB1:\n\t7: Branch(10)\nB2:\n\t8: LdConst[1](U64: 01000000..)\n\t9: Abort\nB3:\n\t10: MoveLoc[2](loc0: Option<u64>)\n\t11: Call option::destroy_some<u64>(Option<u64>): u64\n\t12: Ret\n}\npublic get_entry_by_idx<Ty0: copy, Ty1>(Arg0: &VecMap<Ty0, Ty1>, Arg1: u64): &Ty0 * &Ty1 {\nB0:\n\t0: CopyLoc[1](Arg1: u64)\n\t1: CopyLoc[0](Arg0: &VecMap<Ty0, Ty1>)\n\t2: Call size<Ty0, Ty1>(&VecMap<Ty0, Ty1>): u64\n\t3: Lt\n\t4: BrFalse(6)\nB1:\n\t5: Branch(10)\nB2:\n\t6: MoveLoc[0](Arg0: &VecMap<Ty0, Ty1>)\n\t7: Pop\n\t8: LdConst[3](U64: 03000000..)\n\t9: Abort\nB3:\n\t10: MoveLoc[0](Arg0: &VecMap<Ty0, Ty1>)\n\t11: ImmBorrowFieldGeneric[0](VecMap.contents: vector<Entry<Ty0, Ty1>>)\n\t12: MoveLoc[1](Arg1: u64)\n\t13: VecImmBorrow(20)\n\t14: StLoc[2](loc0: &Entry<Ty0, Ty1>)\n\t15: CopyLoc[2](loc0: &Entry<Ty0, Ty1>)\n\t16: ImmBorrowFieldGeneric[2](Entry.key: Ty0)\n\t17: MoveLoc[2](loc0: &Entry<Ty0, Ty1>)\n\t18: ImmBorrowFieldGeneric[1](Entry.value: Ty1)\n\t19: Ret\n}\npublic get_entry_by_idx_mut<Ty0: copy, Ty1>(Arg0: &mut VecMap<Ty0, Ty1>, Arg1: u64): &Ty0 * &mut Ty1 {\nB0:\n\t0: CopyLoc[1](Arg1: u64)\n\t1: CopyLoc[0](Arg0: &mut VecMap<Ty0, Ty1>)\n\t2: FreezeRef\n\t3: Call size<Ty0, Ty1>(&VecMap<Ty0, Ty1>): u64\n\t4: Lt\n\t5: BrFalse(7)\nB1:\n\t6: Branch(11)\nB2:\n\t7: MoveLoc[0](Arg0: &mut VecMap<Ty0, Ty1>)\n\t8: Pop\n\t9: LdConst[3](U64: 03000000..)\n\t10: Abort\nB3:\n\t11: MoveLoc[0](Arg0: &mut VecMap<Ty0, Ty1>)\n\t12: MutBorrowFieldGeneric[0](VecMap.contents: vector<Entry<Ty0, Ty1>>)\n\t13: MoveLoc[1](Arg1: u64)\n\t14: VecMutBorrow(20)\n\t15: StLoc[2](loc0: &mut Entry<Ty0, Ty1>)\n\t16: CopyLoc[2](loc0: &mut Entry<Ty0, Ty1>)\n\t17: ImmBorrowFieldGeneric[2](Entry.key: Ty0)\n\t18: MoveLoc[2](loc0: &mut Entry<Ty0, Ty1>)\n\t19: MutBorrowFieldGeneric[1](Entry.value: Ty1)\n\t20: Ret\n}\npublic remove_entry_by_idx<Ty0: copy, Ty1>(Arg0: &mut VecMap<Ty0, Ty1>, Arg1: u64): Ty0 * Ty1 {\nB0:\n\t0: CopyLoc[1](Arg1: u64)\n\t1: CopyLoc[0](Arg0: &mut VecMap<Ty0, Ty1>)\n\t2: FreezeRef\n\t3: Call size<Ty0, Ty1>(&VecMap<Ty0, Ty1>): u64\n\t4: Lt\n\t5: BrFalse(7)\nB1:\n\t6: Branch(11)\nB2:\n\t7: MoveLoc[0](Arg0: &mut VecMap<Ty0, Ty1>)\n\t8: Pop\n\t9: LdConst[3](U64: 03000000..)\n\t10: Abort\nB3:\n\t11: MoveLoc[0](Arg0: &mut VecMap<Ty0, Ty1>)\n\t12: MutBorrowFieldGeneric[0](VecMap.contents: vector<Entry<Ty0, Ty1>>)\n\t13: MoveLoc[1](Arg1: u64)\n\t14: Call vector::remove<Entry<Ty0, Ty1>>(&mut vector<Entry<Ty0, Ty1>>, u64): Entry<Ty0, Ty1>\n\t15: UnpackGeneric[1](Entry<Ty0, Ty1>)\n\t16: Ret\n}\n\nConstants [\n\t0 => u64: 0000000000000000\n\t1 => u64: 0100000000000000\n\t2 => u64: 0200000000000000\n\t3 => u64: 0300000000000000\n\t4 => u64: 0400000000000000\n]\n}",
          "vec_set": "// Move bytecode v6\nmodule 2.vec_set {\nuse 0000000000000000000000000000000000000000000000000000000000000001::option;\nuse 0000000000000000000000000000000000000000000000000000000000000001::vector;\n\n\nstruct VecSet<Ty0: copy + drop> has copy, drop, store {\n\tcontents: vector<Ty0>\n}\n\npublic empty<Ty0: copy + drop>(): VecSet<Ty0> {\nB0:\n\t0: VecPack(2, 0)\n\t1: PackGeneric[0](VecSet<Ty0>)\n\t2: Ret\n}\npublic singleton<Ty0: copy + drop>(Arg0: Ty0): VecSet<Ty0> {\nB0:\n\t0: MoveLoc[0](Arg0: Ty0)\n\t1: Call vector::singleton<Ty0>(Ty0): vector<Ty0>\n\t2: PackGeneric[0](VecSet<Ty0>)\n\t3: Ret\n}\npublic insert<Ty0: copy + drop>(Arg0: &mut VecSet<Ty0>, Arg1: Ty0) {\nB0:\n\t0: CopyLoc[0](Arg0: &mut VecSet<Ty0>)\n\t1: ImmBorrowLoc[1](Arg1: Ty0)\n\t2: StLoc[2](loc0: &Ty0)\n\t3: FreezeRef\n\t4: MoveLoc[2](loc0: &Ty0)\n\t5: Call contains<Ty0>(&VecSet<Ty0>, &Ty0): bool\n\t6: Not\n\t7: BrFalse(9)\nB1:\n\t8: Branch(13)\nB2:\n\t9: MoveLoc[0](Arg0: &mut VecSet<Ty0>)\n\t10: Pop\n\t11: LdConst[0](U64: 00000000..)\n\t12: Abort\nB3:\n\t13: MoveLoc[0](Arg0: &mut VecSet<Ty0>)\n\t14: MutBorrowFieldGeneric[0](VecSet.contents: vector<Ty0>)\n\t15: MoveLoc[1](Arg1: Ty0)\n\t16: VecPushBack(2)\n\t17: Ret\n}\npublic remove<Ty0: copy + drop>(Arg0: &mut VecSet<Ty0>, Arg1: &Ty0) {\nB0:\n\t0: CopyLoc[0](Arg0: &mut VecSet<Ty0>)\n\t1: MoveLoc[1](Arg1: &Ty0)\n\t2: StLoc[2](loc0: &Ty0)\n\t3: FreezeRef\n\t4: MoveLoc[2](loc0: &Ty0)\n\t5: Call get_idx<Ty0>(&VecSet<Ty0>, &Ty0): u64\n\t6: StLoc[3](loc1: u64)\n\t7: MoveLoc[0](Arg0: &mut VecSet<Ty0>)\n\t8: MutBorrowFieldGeneric[0](VecSet.contents: vector<Ty0>)\n\t9: MoveLoc[3](loc1: u64)\n\t10: Call vector::remove<Ty0>(&mut vector<Ty0>, u64): Ty0\n\t11: Pop\n\t12: Ret\n}\npublic contains<Ty0: copy + drop>(Arg0: &VecSet<Ty0>, Arg1: &Ty0): bool {\nB0:\n\t0: MoveLoc[0](Arg0: &VecSet<Ty0>)\n\t1: MoveLoc[1](Arg1: &Ty0)\n\t2: Call get_idx_opt<Ty0>(&VecSet<Ty0>, &Ty0): Option<u64>\n\t3: StLoc[2](loc0: Option<u64>)\n\t4: ImmBorrowLoc[2](loc0: Option<u64>)\n\t5: Call option::is_some<u64>(&Option<u64>): bool\n\t6: Ret\n}\npublic size<Ty0: copy + drop>(Arg0: &VecSet<Ty0>): u64 {\nB0:\n\t0: MoveLoc[0](Arg0: &VecSet<Ty0>)\n\t1: ImmBorrowFieldGeneric[0](VecSet.contents: vector<Ty0>)\n\t2: VecLen(2)\n\t3: Ret\n}\npublic is_empty<Ty0: copy + drop>(Arg0: &VecSet<Ty0>): bool {\nB0:\n\t0: MoveLoc[0](Arg0: &VecSet<Ty0>)\n\t1: Call size<Ty0>(&VecSet<Ty0>): u64\n\t2: LdU64(0)\n\t3: Eq\n\t4: Ret\n}\npublic into_keys<Ty0: copy + drop>(Arg0: VecSet<Ty0>): vector<Ty0> {\nB0:\n\t0: MoveLoc[0](Arg0: VecSet<Ty0>)\n\t1: UnpackGeneric[0](VecSet<Ty0>)\n\t2: Ret\n}\npublic keys<Ty0: copy + drop>(Arg0: &VecSet<Ty0>): &vector<Ty0> {\nB0:\n\t0: MoveLoc[0](Arg0: &VecSet<Ty0>)\n\t1: ImmBorrowFieldGeneric[0](VecSet.contents: vector<Ty0>)\n\t2: Ret\n}\nget_idx_opt<Ty0: copy + drop>(Arg0: &VecSet<Ty0>, Arg1: &Ty0): Option<u64> {\nB0:\n\t0: LdU64(0)\n\t1: StLoc[2](loc0: u64)\n\t2: CopyLoc[0](Arg0: &VecSet<Ty0>)\n\t3: Call size<Ty0>(&VecSet<Ty0>): u64\n\t4: StLoc[3](loc1: u64)\nB1:\n\t5: CopyLoc[2](loc0: u64)\n\t6: CopyLoc[3](loc1: u64)\n\t7: Lt\n\t8: BrFalse(29)\nB2:\n\t9: Branch(10)\nB3:\n\t10: CopyLoc[0](Arg0: &VecSet<Ty0>)\n\t11: ImmBorrowFieldGeneric[0](VecSet.contents: vector<Ty0>)\n\t12: CopyLoc[2](loc0: u64)\n\t13: VecImmBorrow(2)\n\t14: CopyLoc[1](Arg1: &Ty0)\n\t15: Eq\n\t16: BrFalse(24)\nB4:\n\t17: MoveLoc[0](Arg0: &VecSet<Ty0>)\n\t18: Pop\n\t19: MoveLoc[1](Arg1: &Ty0)\n\t20: Pop\n\t21: MoveLoc[2](loc0: u64)\n\t22: Call option::some<u64>(u64): Option<u64>\n\t23: Ret\nB5:\n\t24: MoveLoc[2](loc0: u64)\n\t25: LdU64(1)\n\t26: Add\n\t27: StLoc[2](loc0: u64)\n\t28: Branch(5)\nB6:\n\t29: MoveLoc[0](Arg0: &VecSet<Ty0>)\n\t30: Pop\n\t31: MoveLoc[1](Arg1: &Ty0)\n\t32: Pop\n\t33: Call option::none<u64>(): Option<u64>\n\t34: Ret\n}\nget_idx<Ty0: copy + drop>(Arg0: &VecSet<Ty0>, Arg1: &Ty0): u64 {\nB0:\n\t0: MoveLoc[0](Arg0: &VecSet<Ty0>)\n\t1: MoveLoc[1](Arg1: &Ty0)\n\t2: Call get_idx_opt<Ty0>(&VecSet<Ty0>, &Ty0): Option<u64>\n\t3: StLoc[2](loc0: Option<u64>)\n\t4: ImmBorrowLoc[2](loc0: Option<u64>)\n\t5: Call option::is_some<u64>(&Option<u64>): bool\n\t6: BrFalse(8)\nB1:\n\t7: Branch(10)\nB2:\n\t8: LdConst[1](U64: 01000000..)\n\t9: Abort\nB3:\n\t10: MoveLoc[2](loc0: Option<u64>)\n\t11: Call option::destroy_some<u64>(Option<u64>): u64\n\t12: Ret\n}\n\nConstants [\n\t0 => u64: 0000000000000000\n\t1 => u64: 0100000000000000\n]\n}",
          "versioned": "// Move bytecode v6\nmodule 2.versioned {\nuse 0000000000000000000000000000000000000000000000000000000000000002::dynamic_field;\nuse 0000000000000000000000000000000000000000000000000000000000000002::object;\nuse 0000000000000000000000000000000000000000000000000000000000000002::tx_context;\n\n\nstruct Versioned has store, key {\n\tid: UID,\n\tversion: u64\n}\nstruct VersionChangeCap {\n\tversioned_id: ID,\n\told_version: u64\n}\n\npublic create<Ty0: store>(Arg0: u64, Arg1: Ty0, Arg2: &mut TxContext): Versioned {\nB0:\n\t0: MoveLoc[2](Arg2: &mut TxContext)\n\t1: Call object::new(&mut TxContext): UID\n\t2: CopyLoc[0](Arg0: u64)\n\t3: Pack[0](Versioned)\n\t4: StLoc[3](loc0: Versioned)\n\t5: MutBorrowLoc[3](loc0: Versioned)\n\t6: MutBorrowField[0](Versioned.id: UID)\n\t7: MoveLoc[0](Arg0: u64)\n\t8: MoveLoc[1](Arg1: Ty0)\n\t9: Call dynamic_field::add<u64, Ty0>(&mut UID, u64, Ty0)\n\t10: MoveLoc[3](loc0: Versioned)\n\t11: Ret\n}\npublic version(Arg0: &Versioned): u64 {\nB0:\n\t0: MoveLoc[0](Arg0: &Versioned)\n\t1: ImmBorrowField[1](Versioned.version: u64)\n\t2: ReadRef\n\t3: Ret\n}\npublic load_value<Ty0: store>(Arg0: &Versioned): &Ty0 {\nB0:\n\t0: CopyLoc[0](Arg0: &Versioned)\n\t1: ImmBorrowField[0](Versioned.id: UID)\n\t2: MoveLoc[0](Arg0: &Versioned)\n\t3: ImmBorrowField[1](Versioned.version: u64)\n\t4: ReadRef\n\t5: Call dynamic_field::borrow<u64, Ty0>(&UID, u64): &Ty0\n\t6: Ret\n}\npublic load_value_mut<Ty0: store>(Arg0: &mut Versioned): &mut Ty0 {\nB0:\n\t0: CopyLoc[0](Arg0: &mut Versioned)\n\t1: MutBorrowField[0](Versioned.id: UID)\n\t2: MoveLoc[0](Arg0: &mut Versioned)\n\t3: ImmBorrowField[1](Versioned.version: u64)\n\t4: ReadRef\n\t5: Call dynamic_field::borrow_mut<u64, Ty0>(&mut UID, u64): &mut Ty0\n\t6: Ret\n}\npublic remove_value_for_upgrade<Ty0: store>(Arg0: &mut Versioned): Ty0 * VersionChangeCap {\nB0:\n\t0: CopyLoc[0](Arg0: &mut Versioned)\n\t1: MutBorrowField[0](Versioned.id: UID)\n\t2: CopyLoc[0](Arg0: &mut Versioned)\n\t3: ImmBorrowField[1](Versioned.version: u64)\n\t4: ReadRef\n\t5: Call dynamic_field::remove<u64, Ty0>(&mut UID, u64): Ty0\n\t6: CopyLoc[0](Arg0: &mut Versioned)\n\t7: FreezeRef\n\t8: Call object::id<Versioned>(&Versioned): ID\n\t9: MoveLoc[0](Arg0: &mut Versioned)\n\t10: ImmBorrowField[1](Versioned.version: u64)\n\t11: ReadRef\n\t12: Pack[1](VersionChangeCap)\n\t13: Ret\n}\npublic upgrade<Ty0: store>(Arg0: &mut Versioned, Arg1: u64, Arg2: Ty0, Arg3: VersionChangeCap) {\nB0:\n\t0: MoveLoc[3](Arg3: VersionChangeCap)\n\t1: Unpack[1](VersionChangeCap)\n\t2: StLoc[4](loc0: u64)\n\t3: CopyLoc[0](Arg0: &mut Versioned)\n\t4: FreezeRef\n\t5: Call object::id<Versioned>(&Versioned): ID\n\t6: Eq\n\t7: BrFalse(9)\nB1:\n\t8: Branch(13)\nB2:\n\t9: MoveLoc[0](Arg0: &mut Versioned)\n\t10: Pop\n\t11: LdConst[0](U64: 00000000..)\n\t12: Abort\nB3:\n\t13: MoveLoc[4](loc0: u64)\n\t14: CopyLoc[1](Arg1: u64)\n\t15: Lt\n\t16: BrFalse(18)\nB4:\n\t17: Branch(22)\nB5:\n\t18: MoveLoc[0](Arg0: &mut Versioned)\n\t19: Pop\n\t20: LdConst[0](U64: 00000000..)\n\t21: Abort\nB6:\n\t22: CopyLoc[0](Arg0: &mut Versioned)\n\t23: MutBorrowField[0](Versioned.id: UID)\n\t24: CopyLoc[1](Arg1: u64)\n\t25: MoveLoc[2](Arg2: Ty0)\n\t26: Call dynamic_field::add<u64, Ty0>(&mut UID, u64, Ty0)\n\t27: MoveLoc[1](Arg1: u64)\n\t28: MoveLoc[0](Arg0: &mut Versioned)\n\t29: MutBorrowField[1](Versioned.version: u64)\n\t30: WriteRef\n\t31: Ret\n}\npublic destroy<Ty0: store>(Arg0: Versioned): Ty0 {\nL0:\tloc1: Ty0\nL1:\tloc2: u64\nB0:\n\t0: MoveLoc[0](Arg0: Versioned)\n\t1: Unpack[0](Versioned)\n\t2: StLoc[3](loc2: u64)\n\t3: StLoc[1](loc0: UID)\n\t4: MutBorrowLoc[1](loc0: UID)\n\t5: MoveLoc[3](loc2: u64)\n\t6: Call dynamic_field::remove<u64, Ty0>(&mut UID, u64): Ty0\n\t7: StLoc[2](loc1: Ty0)\n\t8: MoveLoc[1](loc0: UID)\n\t9: Call object::delete(UID)\n\t10: MoveLoc[2](loc1: Ty0)\n\t11: Ret\n}\n\nConstants [\n\t0 => u64: 0000000000000000\n]\n}",
          "zklogin_verified_id": "// Move bytecode v6\nmodule 2.zklogin_verified_id {\nuse 0000000000000000000000000000000000000000000000000000000000000001::string;\nuse 0000000000000000000000000000000000000000000000000000000000000002::object;\nuse 0000000000000000000000000000000000000000000000000000000000000002::transfer;\nuse 0000000000000000000000000000000000000000000000000000000000000002::tx_context;\n\n\nstruct VerifiedID has key {\n\tid: UID,\n\towner: address,\n\tkey_claim_name: String,\n\tkey_claim_value: String,\n\tissuer: String,\n\taudience: String\n}\n\npublic owner(Arg0: &VerifiedID): address {\nB0:\n\t0: MoveLoc[0](Arg0: &VerifiedID)\n\t1: ImmBorrowField[0](VerifiedID.owner: address)\n\t2: ReadRef\n\t3: Ret\n}\npublic key_claim_name(Arg0: &VerifiedID): &String {\nB0:\n\t0: MoveLoc[0](Arg0: &VerifiedID)\n\t1: ImmBorrowField[1](VerifiedID.key_claim_name: String)\n\t2: Ret\n}\npublic key_claim_value(Arg0: &VerifiedID): &String {\nB0:\n\t0: MoveLoc[0](Arg0: &VerifiedID)\n\t1: ImmBorrowField[2](VerifiedID.key_claim_value: String)\n\t2: Ret\n}\npublic issuer(Arg0: &VerifiedID): &String {\nB0:\n\t0: MoveLoc[0](Arg0: &VerifiedID)\n\t1: ImmBorrowField[3](VerifiedID.issuer: String)\n\t2: Ret\n}\npublic audience(Arg0: &VerifiedID): &String {\nB0:\n\t0: MoveLoc[0](Arg0: &VerifiedID)\n\t1: ImmBorrowField[4](VerifiedID.audience: String)\n\t2: Ret\n}\npublic verify_zklogin_id(Arg0: String, Arg1: String, Arg2: String, Arg3: String, Arg4: u256, Arg5: &mut TxContext) {\nB0:\n\t0: CopyLoc[5](Arg5: &mut TxContext)\n\t1: FreezeRef\n\t2: Call tx_context::sender(&TxContext): address\n\t3: StLoc[6](loc0: address)\n\t4: CopyLoc[6](loc0: address)\n\t5: ImmBorrowLoc[0](Arg0: String)\n\t6: ImmBorrowLoc[1](Arg1: String)\n\t7: ImmBorrowLoc[2](Arg2: String)\n\t8: ImmBorrowLoc[3](Arg3: String)\n\t9: MoveLoc[4](Arg4: u256)\n\t10: Call check_zklogin_id(address, &String, &String, &String, &String, u256): bool\n\t11: BrFalse(13)\nB1:\n\t12: Branch(17)\nB2:\n\t13: MoveLoc[5](Arg5: &mut TxContext)\n\t14: Pop\n\t15: LdConst[1](U64: 01000000..)\n\t16: Abort\nB3:\n\t17: MoveLoc[5](Arg5: &mut TxContext)\n\t18: Call object::new(&mut TxContext): UID\n\t19: CopyLoc[6](loc0: address)\n\t20: MoveLoc[0](Arg0: String)\n\t21: MoveLoc[1](Arg1: String)\n\t22: MoveLoc[2](Arg2: String)\n\t23: MoveLoc[3](Arg3: String)\n\t24: Pack[0](VerifiedID)\n\t25: MoveLoc[6](loc0: address)\n\t26: Call transfer::transfer<VerifiedID>(VerifiedID, address)\n\t27: Ret\n}\npublic check_zklogin_id(Arg0: address, Arg1: &String, Arg2: &String, Arg3: &String, Arg4: &String, Arg5: u256): bool {\nB0:\n\t0: MoveLoc[0](Arg0: address)\n\t1: MoveLoc[1](Arg1: &String)\n\t2: Call string::bytes(&String): &vector<u8>\n\t3: MoveLoc[2](Arg2: &String)\n\t4: Call string::bytes(&String): &vector<u8>\n\t5: MoveLoc[3](Arg3: &String)\n\t6: Call string::bytes(&String): &vector<u8>\n\t7: MoveLoc[4](Arg4: &String)\n\t8: Call string::bytes(&String): &vector<u8>\n\t9: MoveLoc[5](Arg5: u256)\n\t10: Call check_zklogin_id_internal(address, &vector<u8>, &vector<u8>, &vector<u8>, &vector<u8>, u256): bool\n\t11: Ret\n}\nnative check_zklogin_id_internal(Arg0: address, Arg1: &vector<u8>, Arg2: &vector<u8>, Arg3: &vector<u8>, Arg4: &vector<u8>, Arg5: u256): bool\n\nConstants [\n\t0 => u64: 0000000000000000\n\t1 => u64: 0100000000000000\n]\n}",
          "zklogin_verified_issuer": "// Move bytecode v6\nmodule 2.zklogin_verified_issuer {\nuse 0000000000000000000000000000000000000000000000000000000000000001::string;\nuse 0000000000000000000000000000000000000000000000000000000000000002::object;\nuse 0000000000000000000000000000000000000000000000000000000000000002::transfer;\nuse 0000000000000000000000000000000000000000000000000000000000000002::tx_context;\n\n\nstruct VerifiedIssuer has key {\n\tid: UID,\n\towner: address,\n\tissuer: String\n}\n\npublic owner(Arg0: &VerifiedIssuer): address {\nB0:\n\t0: MoveLoc[0](Arg0: &VerifiedIssuer)\n\t1: ImmBorrowField[0](VerifiedIssuer.owner: address)\n\t2: ReadRef\n\t3: Ret\n}\npublic issuer(Arg0: &VerifiedIssuer): &String {\nB0:\n\t0: MoveLoc[0](Arg0: &VerifiedIssuer)\n\t1: ImmBorrowField[1](VerifiedIssuer.issuer: String)\n\t2: Ret\n}\npublic verify_zklogin_issuer(Arg0: u256, Arg1: String, Arg2: &mut TxContext) {\nB0:\n\t0: CopyLoc[2](Arg2: &mut TxContext)\n\t1: FreezeRef\n\t2: Call tx_context::sender(&TxContext): address\n\t3: StLoc[3](loc0: address)\n\t4: CopyLoc[3](loc0: address)\n\t5: MoveLoc[0](Arg0: u256)\n\t6: ImmBorrowLoc[1](Arg1: String)\n\t7: Call check_zklogin_issuer(address, u256, &String): bool\n\t8: BrFalse(10)\nB1:\n\t9: Branch(14)\nB2:\n\t10: MoveLoc[2](Arg2: &mut TxContext)\n\t11: Pop\n\t12: LdConst[1](U64: 01000000..)\n\t13: Abort\nB3:\n\t14: MoveLoc[2](Arg2: &mut TxContext)\n\t15: Call object::new(&mut TxContext): UID\n\t16: CopyLoc[3](loc0: address)\n\t17: MoveLoc[1](Arg1: String)\n\t18: Pack[0](VerifiedIssuer)\n\t19: MoveLoc[3](loc0: address)\n\t20: Call transfer::transfer<VerifiedIssuer>(VerifiedIssuer, address)\n\t21: Ret\n}\npublic check_zklogin_issuer(Arg0: address, Arg1: u256, Arg2: &String): bool {\nB0:\n\t0: MoveLoc[0](Arg0: address)\n\t1: MoveLoc[1](Arg1: u256)\n\t2: MoveLoc[2](Arg2: &String)\n\t3: Call string::bytes(&String): &vector<u8>\n\t4: Call check_zklogin_issuer_internal(address, u256, &vector<u8>): bool\n\t5: Ret\n}\nnative check_zklogin_issuer_internal(Arg0: address, Arg1: u256, Arg2: &vector<u8>): bool\n\nConstants [\n\t0 => u64: 0000000000000000\n\t1 => u64: 0100000000000000\n]\n}"
        }
      },
      "bcs": {
        "dataType": "package",
        "id": "0x0000000000000000000000000000000000000000000000000000000000000002",
        "version": 13,
        "moduleMap": {
          "address": "oRzrCwYAAAAJAQAKAgoIAxI9BE8CBVEUB2WBAQjmAUAGpgI2DNwCRQABAQIBAwELAAgBAAcAAwAHAAAPAAEAAAcBAAAABgIAAAANAAIAAAwAAwAADgAEAAAJBQYAAAoFAQABCwIDAAINBwIBAAMFAwQABAQCAgAJAAEFAQ8BCgIBCAABCAEAAQMBBgkABlN0cmluZwdhZGRyZXNzBWFzY2lpA2JjcwZlbmNvZGUKZnJvbV9hc2NpaQpmcm9tX2J5dGVzCWZyb21fdTI1NgNoZXgGbGVuZ3RoA21heAZzdHJpbmcPdG9fYXNjaWlfc3RyaW5nCHRvX2J5dGVzCXRvX3N0cmluZwd0b191MjU2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQMIIAAAAAAAAAAPIP//////////////////////////////////////////AwgAAAAAAAAAAAABAgABAQIAAgECAAMBAAAFAw4AOAACBAEAAAUFCwARAxELEQgCBQEAAAUECwARBBEKAgYBAAAFAgcAAgcBAAAFAgcBAgA=",
          "authenticator_state": "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",
          "bag": "oRzrCwYAAAALAQAIAggMAxRwBIQBDAWQAVIH4gG5AQibAyAGuwMKCsUDCAzNA+YBDbMFBAAEAAsAEgAVAAAMAAICBAADAQIAABEAAQAAAwIDAgcEAAUEBQIHBAAGBgcCBwQAEwYIAgcEAAcECQEHAAgECQIHBAAQCgsAAA8KCQAACgEDAAEDDgMCBwQBBQ8FAgcEAQYQBwIHBAEMDwkBBwENDwkCBwQBExAIAgcEAgkMAwACEQAMAAoNCw0MDQ8NDREODQEHCAIBCAADBwgACQAJAQACBggACQABBgkBAgcIAAkAAQcJAQEJAQEBAQYIAAEDAQgBAgkACQEDBwgBCQAJAQIGCAEJAAIHCAEJAAEJAAIIAQMDQmFnCVR4Q29udGV4dANVSUQDYWRkA2JhZwZib3Jyb3cKYm9ycm93X211dAhjb250YWlucxJjb250YWluc193aXRoX3R5cGUGZGVsZXRlDWRlc3Ryb3lfZW1wdHkNZHluYW1pY19maWVsZAdleGlzdHNfEGV4aXN0c193aXRoX3R5cGUCaWQIaXNfZW1wdHkGbGVuZ3RoA25ldwZvYmplY3QGcmVtb3ZlBHNpemUKdHhfY29udGV4dAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAwgAAAAAAAAAAAACAg4IARQDAAEAAAMFCwAREQYAAAAAAAAAABIAAgEBAAADDgoADwALAQsCOAAKABABFAYBAAAAAAAAABYLAA8BFQICAQAAAwULABAACwE4AQIDAQAAAwULAA8ACwE4AgIEAQAACA8KAA8ACwE4AwwCCgAQARQGAQAAAAAAAAAXCwAPARULAgIFAQAAAwULABAACwE4BAIGAQAAAwULABAACwE4BQIHAQAAAwQLABABFAIIAQAAAwYLABABFAYAAAAAAAAAACECCQEAABIOCwATAAwCDAELAgYAAAAAAAAAACEECQULBwAnCwEREAIAAAABAA==",
          "balance": "oRzrCwYAAAAOAQAEAgQQAxRTBGcCBWljB8wB4AEIrAMgBswDSgqWBAoLoAQEDKQE2wIN/wYEDoMHBA+HBwIAAwAQAAEEAQABAAAEAQABAQICAAARAAEBAAAPAgEBAAAFAwQBAgAKBQYBAAAGBwEBAAATCAYBAAALCQEBAAANCgYBAAASCwYBAAAJBggBAAAEDAYBAAAHDQgBAAAIBAEBAAEMDg8ABwMBBgsBAQkAAQMBBgsAAQkAAQkAAQsAAQkAAgcLAAEJAAMBCwEBCQACBwsAAQkACwEBCQAAAgcLAQEJAAsBAQkAAgcLAQEJAAMBBwsBAQkAAgMGCAICCwEBCQAGCAIBBggCAQUHQmFsYW5jZQZTdXBwbHkJVHhDb250ZXh0B2JhbGFuY2UWY3JlYXRlX3N0YWtpbmdfcmV3YXJkcw1jcmVhdGVfc3VwcGx5D2RlY3JlYXNlX3N1cHBseRdkZXN0cm95X3N0b3JhZ2VfcmViYXRlcw5kZXN0cm95X3N1cHBseQxkZXN0cm95X3plcm8PaW5jcmVhc2Vfc3VwcGx5BGpvaW4Gc2VuZGVyBXNwbGl0A3N1aQxzdXBwbHlfdmFsdWUKdHhfY29udGV4dAV2YWx1ZQx3aXRoZHJhd19hbGwEemVybwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAwgAAAAAAAAAAAMIAQAAAAAAAAADCAIAAAAAAAAAAwgDAAAAAAAAAAUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgERAwECAREDAAMBAwABAAAIBAsANwAUAgEBAAAIBAsANwEUAgIBAAAIAwYAAAAAAAAAADkAAgMBAAAIGAoBBv//////////CgA3ARQXIwQJBQ0LAAEHAScKADcBFAoBFgsANgEVCwE5AQIEAQAAARgLAToBDAIKADcBFAoCJgQKBQ4LAAEHAScKADcBFAoCFwsANgEVCwICBQEAAAgDBgAAAAAAAAAAOQECBgEAAAEPCwE6AQwCCgA3ABQLAhYKADYAFQsANwAUAgcBAAAIFgoANwAUCgEmBAcFCwsAAQcCJwoANwAUCgEXCwA2ABULATkBAggBAAABCAoANwAUDAELAAsBOAACCQEAAAgNDgA3ABQGAAAAAAAAAAAhBAcFCQcAJwsAOgEBAgoAAAAICwsBEQ0HBCEEBgUIBwMnCwA5AQILAAAACAwLARENBwQhBAYFCAcDJwsAOgEBAgwDAAAIAwsAOgACAQAAAAADAQMADgA=",
          "bcs": "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",
          "bls12381": "oRzrCwYAAAAGAQACAwIKBQwMBxg4CFAgDHAIAAAAAgABAAABAAEAAwYKAgYKAgYKAgEBCGJsczEyMzgxFmJsczEyMzgxX21pbl9wa192ZXJpZnkXYmxzMTIzODFfbWluX3NpZ192ZXJpZnkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAgABAQIAAA==",
          "borrow": "oRzrCwYAAAANAQAIAggYAyA7BFsKBWVTB7gBngEI1gJABpYDFAqqAxMLvQMCDL8DfQ28BAQOwAQEAAUBDwAOABMAAwQBDAAAAAAAAQIHAQAAAgEHAAMEAgAADAABAQwABQIDAQwAEAQFAQwABgEGAQwBBwkGAQABCAsGAQABCQ8FAQABEgYJAQACCwwNAQgDCgcIAAcGBQYIBgYGBAYCCQAHCAQBCwABCQABBwsAAQkAAgkACAEDBwsAAQkACQAIAQABCQABBwgEAQUBCwIBCQACCAMJAAEHCwIBCQABBgkAAQgDAggDBQIHCwIBCQAJAAZCb3Jyb3cCSUQGT3B0aW9uCFJlZmVyZW50CVR4Q29udGV4dAZib3Jyb3cHZGVzdHJveQxkZXN0cm95X3NvbWUHZXh0cmFjdARmaWxsFGZyZXNoX29iamVjdF9hZGRyZXNzAmlkA25ldwNvYmoGb2JqZWN0Bm9wdGlvbghwdXRfYmFjawNyZWYEc29tZQp0eF9jb250ZXh0BXZhbHVlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQMIAAAAAAAAAAADCAEAAAAAAAAAAAICCwUUCwIBCQABAgIRBQ0IAwAGAAEAAAUGCwERCQsAOAA5AAIBAQAACg4KADYAOAEMAg4COAIMAQsCCwA3ARQLARIBAgIBAAAOHgsCEwEMAwwEDgE4AgsDIQQKBQ4LAAEHAScKADcBFAsEIQQVBRkLAAEHACcLADYACwE4AwIDAQAACQcLADoADAEBCwE4BAIAAQAAAAYBBgA=",
          "clock": "oRzrCwYAAAALAQAIAggMAxQfBDMCBTUeB1N6CM0BIAbtASwKmQIIDKECTw3wAgIAAwAHAAsADAAACAABAgQAAwECAAAKAAEAAAUCAwAABAQDAAEDAwYAAgkIAwEIAwgCBQAEBwEGCAABAwEGCAIAAwcIAAMGCAIBBQEIAQEIAAEJAAVDbG9jawlUeENvbnRleHQDVUlEBWNsb2NrGWNvbnNlbnN1c19jb21taXRfcHJvbG9ndWUGY3JlYXRlAmlkBm9iamVjdAZzZW5kZXIMc2hhcmVfb2JqZWN0DHRpbWVzdGFtcF9tcwh0cmFuc2Zlcgp0eF9jb250ZXh0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIDCAAAAAAAAAAABSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgYIAQoDAAEAAAMECwAQABQCAQAAAAMNCwARBQcBIQQGBQgHACcRAwYAAAAAAAAAABIAOAACAgAAAAMPCwIRBQcBIQQGBQoLAAEHACcLAQsADwAVAgABAA==",
          "coin": "oRzrCwYAAAANAQAUAhQ+A1KbAgTtAiIFjwPdAgfsBaQFCJALQAbQCx4K7gs0C6IMBgyoDPkEDaERDg6vEQ4ADwELASsBMAAMACoAOAA6ADsAQAABDAEAAQACDAEAAQAHDAEAAQADAwEAAQEFBwACBAcBAAADBQcABAAEAQABBAYEAQABBQkEAAcIAgAJCgcAADcAAQEAADkCAwEAADIABAEAADMFBgEAAEIHAQEAAAwHCAEAAA0JCgEAABgLDAEAACEMDQEAADYODAEAAC0PEAEAACMREAEAAC8SDAEAABcSEwEAAEMUDAEAABYMEAEAABAVFgECACQXDAEAACYYDQEAAA4ZAQEAACUaEAEAAD4bEAEAAD8cEAEAADwbEAEAAD0cEAEAABkdHgEAABwdHwEAAB0dIAEAABodHwEAABsdIQEAADEFBAEAATApIAACLiIuAQADQSkfAAQRIgMBAgQTKwEBAAQWDRABAAQgKg0BAAQjJQEBAAQvJA0BAAQ0BAEBAARCCAEBAARDEA0BAAUUIxAABSgUIwAGLCwQAQwIIicoAQIJKSAtACgiKSInIggiJiIJIgQiDCIqIiQiLiIiIiUiIyIRIi0MIC0BBgsCAQkAAQMBCwIBCQABCwgBCQABBgsIAQkAAQcLAgEJAAEHCwgBCQABBgsAAQkAAQYLBwEJAAEHCwABCQABBwsHAQkAAgsHAQkABwgKAQsAAQkAAQsHAQkAAwcLBwEJAAMHCAoCBwsHAQkACwABCQAAAgcLAAEJAAsAAQkAAwcLAAEJAAMHCAoBCgsAAQkAAQcICgcJAAIKAgoCCgILBQEICwcICgILAgEJAAsBAQkAAwcLAgEJAAMHCAoCBwsCAQkAAwIHCwIBCQALAAEJAAQHCwIBCQADBQcICgMGCwIBCQAHCwEBCQAIBgMGCwIBCQAHCwEBCQAIBAEGCwEBCQABAgEIBgEIBAELBQEICwEJAAEICQIHCwcBCQADAgcLBwEJAAsHAQkAAwMDCgsAAQkAAQYJAAEBAQoCAgcLCAEJAAMCBwsIAQkACwcBCQACCQAFAQgLAQsFAQkAB0JhbGFuY2UEQ29pbgxDb2luTWV0YWRhdGEPQ3VycmVuY3lDcmVhdGVkBk9wdGlvbgZTdHJpbmcGU3VwcGx5C1RyZWFzdXJ5Q2FwCVR4Q29udGV4dANVSUQDVXJsBWFzY2lpB2JhbGFuY2ULYmFsYW5jZV9tdXQEYnVybgRjb2luD2NyZWF0ZV9jdXJyZW5jeQ1jcmVhdGVfc3VwcGx5CGRlY2ltYWxzD2RlY3JlYXNlX3N1cHBseQZkZWxldGULZGVzY3JpcHRpb24MZGVzdHJveV96ZXJvDWRpdmlkZV9pbnRvX24MZnJvbV9iYWxhbmNlDGdldF9kZWNpbWFscw9nZXRfZGVzY3JpcHRpb24MZ2V0X2ljb25fdXJsCGdldF9uYW1lCmdldF9zeW1ib2wIaWNvbl91cmwCaWQPaW5jcmVhc2Vfc3VwcGx5DGludG9fYmFsYW5jZRNpc19vbmVfdGltZV93aXRuZXNzBGpvaW4EbWludBFtaW50X2FuZF90cmFuc2ZlcgxtaW50X2JhbGFuY2UEbmFtZQNuZXcKbmV3X3Vuc2FmZQZvYmplY3QGb3B0aW9uD3B1YmxpY190cmFuc2ZlcgNwdXQEc29tZQVzcGxpdAZzdHJpbmcGc3VwcGx5DHN1cHBseV9pbW11dApzdXBwbHlfbXV0DHN1cHBseV92YWx1ZQZzeW1ib2wEdGFrZQx0b3RhbF9zdXBwbHkIdHJhbnNmZXIUdHJlYXN1cnlfaW50b19zdXBwbHkKdHhfY29udGV4dAV0eXBlcxJ1cGRhdGVfZGVzY3JpcHRpb24PdXBkYXRlX2ljb25fdXJsC3VwZGF0ZV9uYW1lDXVwZGF0ZV9zeW1ib2wDdXJsBHV0ZjgFdmFsdWUEemVybwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEDCAAAAAAAAAAAAwgBAAAAAAAAAAMIAgAAAAAAAAAAAgIfCAkMCwcBCQABAgYfCAkSAicIBjUIBBUIBh4LBQEICwICAh8ICTcLCAEJAAMCARICAiIAIgEiAAEAABAECwA3ADgAAgEBAAADBgsAOgAMARErCwECAgEAABADCwA3AAIDAQAAEAMLADYAAgQBAAAQBAsANwE4AQIFAQAAEAMLADcBAgYBAAAQAwsANgECBwEAABAFCwERLAsAOQECCAEAAA0GCwA6AQwBESsLAQIJAQAAEAcLAhEsCwALATgCOQECCgEAABAGCwALATgDOAQBAgsBBAANCgsBOgEMAhErCwA2AQsCOAQBAgwBAAAQBgsANgELAQsCOAUCDQEAACY7CgEGAAAAAAAAAAAkBAUFCwsAAQsCAQcBJwoBCgAuOAYlBBIFGAsAAQsCAQcCJ0AMAAAAAAAAAAAMBQYAAAAAAAAAAAwDCgAuOAYKARoMBCgKAwoBBgEAAAAAAAAAFyMENQUqDQUKAAoECgI4B0QMCwMGAQAAAAAAAAAWDAMFIgsAAQsCAQsFAg4BAAAQBQsAESw4CDkBAg8BAAANBwsAOgEMARErCwE4CQIQAQAAEBkOADgKBAQFCAsGAQcAJwoGESwLADgLOQALBhEsCwELAxEhCwIRHwsEESELBTkCAhEBAAAQCAsCESwLADYACwE4DDkBAhIBAAAQBQsANgALATgMAhMBBAANCQsBOgEMAhErCwA2AAsCOA0CFAEEABAHCwALAQsDOA4LAjgPAhUBBAAQBQsCCwE2AhUCFgEEABAFCwILATYDFQIXAQQAEAULAgsBNgQVAhgBBAAQBwsCES84EAsBNgUVAhkBAAAQBAsANwYUAhoBAAAQBAsANwIUAhsBAAAQBAsANwMUAhwBAAAQBAsANwQUAh0BAAAQBAsANwUUAh4BAAAQAwsANwACAgEAAQECAQMBBAEFAQEAIgEiAiIDIgQiBSIGIgA=",
          "display": "oRzrCwYAAAANAQAQAhAuAz6EAQTCARYF2AHEAQecA98CCPsFQAa7BhQKzwYmC/UGBgz7BqADDZsKBg6hCgYADgEfABIAGgAbACAAIQAkAAAMAQgBAAEDAQgBAAgDAQgBAQQHAAMCBwADBgQABAMMAAYFAgAHBwcCAQAAAAAYAAEBCAAZAgEBCAAMAAMBCAAjBAMBCAAJBQMBCAALBgMBCAAPBQMBCAAdBwMBCAAXCAkBCAAlCgsBCAATCgwBCAANDQEBCAAKBQMBCAIQDgMBAwMYDRwAAyIVFgAEFAgJAQAFHBMDAQwGHhESAAcRAx4CAQAHFh8DAgEABx0aGwIBAAgOCw4ADgwOEQENFxUZEA4NHRMZFBkCBggGBwgHAQsAAQkABAYIBgoIAwoIAwcIBwABBwsAAQkAAwcLAAEJAAgDCAMDBwsAAQkACggDCggDAgcLAAEJAAgDAQYIBgEBAQYLAAEJAAENAQYLCAIIAwgDAQcIBwEJAAMLAAEJAAMDAQgDAQYIBwEFAgkABQINCwgCCAMIAwEGCAUBCAQBCwIBCQACAwMCCAMIAwIHCwgCCQAJAQYJAAIJAAkBAQgFAQsBAQkAAQsIAgkACQEDBwsIAgkACQEJAAkBB0Rpc3BsYXkORGlzcGxheUNyZWF0ZWQCSUQJUHVibGlzaGVyBlN0cmluZwlUeENvbnRleHQDVUlEBlZlY01hcA5WZXJzaW9uVXBkYXRlZANhZGQMYWRkX2ludGVybmFsDGFkZF9tdWx0aXBsZQ9jcmVhdGVfYW5kX2tlZXAPY3JlYXRlX2ludGVybmFsB2Rpc3BsYXkEZWRpdARlbWl0BWVtcHR5BWV2ZW50BmZpZWxkcwxmcm9tX3BhY2thZ2UCaWQGaW5zZXJ0DWlzX2F1dGhvcml6ZWQDbmV3D25ld193aXRoX2ZpZWxkcwZvYmplY3QHcGFja2FnZQ9wdWJsaWNfdHJhbnNmZXIGcmVtb3ZlBnNlbmRlcgZzdHJpbmcIdHJhbnNmZXIKdHhfY29udGV4dAx1aWRfdG9faW5uZXIOdXBkYXRlX3ZlcnNpb24HdmVjX21hcAd2ZXJzaW9uAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQMIAAAAAAAAAAADCAEAAAAAAAAAAAIDFQgFEwsIAggDCAMlDQECARUIBAICAxUIBCUNEwsIAggDCAMCDgEOAA4AAQAAAwsLADgABAQFCAsBAQcAJwsBOAECAQEAAA8rDgFBEAwGCgYOAkEQIQQJBQ8LAAELAwEHAScGAAAAAAAAAAAMBQsACwM4AgwECgUKBiMEKQUaDQQOAQoFQhAUDgIKBUIQFDgDCwUGAQAAAAAAAAAWDAUFFQsEAgIBBAADCAsACgE4AgsBLhESOAQCAwEEABQYCgA3ABRIAQAWCgA2ABUKADcAFAwBCgA3ARQMAgsANwIRDwsBCwI5ADgFAgQBBAADBQsACwELAjgDAgUBBAAYJg4BQRAMBAoEDgJBECEECQUNCwABBwEnBgAAAAAAAAAADAMKAwoEIwQjBRQKAA4BCgNCEBQOAgoDQhAUOAMLAwYBAAAAAAAAABYMAwUPCwABAgYBBAADCwoANgEOATgGAQELAAsBCwI4AwIHAQQAAwcLADYBDgE4BgEBAggBAAADAwsAOAcCCQEAAAMECwA3ABQCCgEAAAMDCwA3AQILAAAAHAwLABEODAEOAREPOQE4CAsBOAlIAAA5AgIMAAAAAwYLADYBCwELAjgKAgACAAEAAAAOAQ4CDgA=",
          "dynamic_field": "oRzrCwYAAAAOAQAGAgYWAxyFAQShARgFuQGoAQfhAoEDCOIFQAaiBigKygYMC9YGAgzYBusCDcMJBg7JCQgP0QkCAAsBGgAZAAAIAgcABAABAgcBAAACAQcAAgMEAAAEAAECBwQABgIDAgcEAAkEBQIHBAAbBAYCBwQADQIHAQcAHQQIAgcEAA4CBwIHBAAPAgkBBwAQBAoBBwATCwwBBwAFCwEBCAAHCQ0BCAAICg4BCAAcDxABCAARDwcAABIPBwEIARgBGAEAAR4QGAEAAgoTAQACFRwMAAIXDBMAAh8SDAAJEAoVCxUMFQ0VBBADFBEGEAYPFQsaDBoDBwgDCQAJAQACBggDCQABBgkBAgcIAwkAAQcJAQEJAQEBAQsBAQkBAgYIAwUCBwgDBQIFCQABBQEGCQABBwkAAgUFAQkAAwsAAgkACQEFBQEGCAMBCAMCCQAJAQELAAIJAAkBAwUFCQECCQALAQEJAQELAQEJAAQGCwACCQAIAgUGCAMGCAIBCwACCQAIAgIJAAgCAQYIAgQHCwACCQAIAgUHCAMHCAIFRmllbGQCSUQGT3B0aW9uA1VJRANhZGQQYWRkX2NoaWxkX29iamVjdAZib3Jyb3cTYm9ycm93X2NoaWxkX29iamVjdBdib3Jyb3dfY2hpbGRfb2JqZWN0X211dApib3Jyb3dfbXV0BmRlbGV0ZQ1keW5hbWljX2ZpZWxkFGR5bmFtaWNfb2JqZWN0X2ZpZWxkB2V4aXN0c18QZXhpc3RzX3dpdGhfdHlwZQpmaWVsZF9pbmZvDmZpZWxkX2luZm9fbXV0EGhhc19jaGlsZF9vYmplY3QYaGFzX2NoaWxkX29iamVjdF93aXRoX3R5EWhhc2hfdHlwZV9hbmRfa2V5AmlkDWlkX3RvX2FkZHJlc3MEbmFtZRFuZXdfdWlkX2Zyb21faGFzaARub25lBm9iamVjdAZvcHRpb24GcmVtb3ZlE3JlbW92ZV9jaGlsZF9vYmplY3QQcmVtb3ZlX2lmX2V4aXN0cwRzb21lDnVpZF90b19hZGRyZXNzBXZhbHVlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQMIAAAAAAAAAAADCAEAAAAAAAAAAwgCAAAAAAAAAAMIAwAAAAAAAAAAAgMUCAMWCQAgCQEAFAABAAARGgsALhEVDAUKBQoBOAAMBAoFCgQRDiAEDgUQBwAnCwQRFAsBCwI5AAwDCwULAzgBAgEBAAAMCgoAERULATgADAILAAsCOAI3AAICAQAADAsKAC4RFQsBOAAMAgsACwI4AzYAAgMBAAAWEQsALhEVDAMKAwsBOAAMAgsDCwI4BDoADAQBERILBAIEAQAADwsLABEVDAMKAwsBOAAMAgsDCwIRDgIFAQAAFxMKAAoBDAIuCwI4BQQNCwALATgGOAcMAwURCwABOAgMAwsDAgYBAAAPCwsAERUMAwoDCwE4AAwCCwMLAjgJAgcDAAAZFgoAERULATgADAMLAAsDOAoMAgoCNwEMBAoCNwIBCwI3AwwFCwQLBRETAggDAAAdGAoALhEVCwE4AAwDCwALAzgLDAIKAjYBDAQKAjYCAQsCNgMMBQsECwUuERMCCQMCAAoDAgALAwIADAMCAA0DAgAOAwIADwMCAAACAAAAAQAUARsCGwAbAAwA",
          "dynamic_object_field": "oRzrCwYAAAAKAQAIAggUAxyKAQSmARoFwAGDAQfDArICCPUEQAq1BQYLuwUCDL0F6QEACwEWAAoAFQADBwEAAAEBBwEAAAMABwADAgQAAAQAAQIHDAAGAgMCBwwACQQFAgcMABcEBgIHDAAMAgcBBwANAgcCBwwAEQIIAQcBFAEYAQABGQoYAQACBAABAgcEAgUSAQEIAgcPCwEIAggTFAEIAg0CBwIHBAIOAg8BBwIPBBMBBwIQFgcBCAIXBAYCBwQCGBYKAQgDEQsMAQgDEhEMAAMaEBEAEwYJDQ4OCgYLBg8ODAYSBhENDQ0QBgcMCAwDBwgDCQAJAQACBggDCQABBgkBAgcIAwkAAQcJAQEJAQEBAQsBAQgCAwsAAQkACAILAAEJAAEJAAEGCQABCAICCwABCQAIAgELAAEJAAIGCAMFAQYIAwEFAgUJAAIHCAMFAQcJAAQLAAEJAAsAAQkACQEFAgUFAgsAAQkABQELAQEJAAJJRAZPcHRpb24DVUlEB1dyYXBwZXIDYWRkEGFkZF9jaGlsZF9vYmplY3QGYm9ycm93E2JvcnJvd19jaGlsZF9vYmplY3QXYm9ycm93X2NoaWxkX29iamVjdF9tdXQKYm9ycm93X211dA1keW5hbWljX2ZpZWxkFGR5bmFtaWNfb2JqZWN0X2ZpZWxkB2V4aXN0c18QZXhpc3RzX3dpdGhfdHlwZQpmaWVsZF9pbmZvDmZpZWxkX2luZm9fbXV0GGhhc19jaGlsZF9vYmplY3Rfd2l0aF90eQJpZA9pZF9mcm9tX2FkZHJlc3MEbmFtZQRub25lBm9iamVjdAZvcHRpb24GcmVtb3ZlE3JlbW92ZV9jaGlsZF9vYmplY3QEc29tZQ51aWRfdG9fYWRkcmVzcwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAgETCQAACgABAAAJFQsBOQAMBQ4COAAMBAoACgULBDgBCwALBQwDLgsDOAIBERULAjgDAgEBAAAOCAsBOQAMAgsACwI4AjgEAgIBAAAOCAsBOQAMAgsACwI4BTgGAgMBAAAVFAsBOQAMAwoACgMMAi4LAjgCDAURFQsFOAcMBAsACwM4CAELBAIEAQAADgcLATkADAILAAsCOAkCBQEAABcUCwE5AAwCCgAKAjgJIAQMCwABCQILAAsCOAIMAxEVCwM4CgIGAQAAFxULATkADAIKAAoCOAkgBAwLAAE4CwILAAsCOAIMAwELAxEUOAwCAA==",
          "ecdsa_k1": "oRzrCwYAAAAHAQACAwIPBREcBy1ACG0gBo0BJAyxAQwAAQACAAEAAAACAQAAAwMEAAMGCgIGCgICAQoCAQYKAgQGCgIGCgIGCgICAQERZGVjb21wcmVzc19wdWJrZXkIZWNkc2FfazETc2VjcDI1NmsxX2VjcmVjb3ZlchBzZWNwMjU2azFfdmVyaWZ5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIDCAAAAAAAAAAAAwgBAAAAAAAAAAMIAgAAAAAAAAACAQACAQEAAQIAAQECAAIBAgAA",
          "ecdsa_r1": "oRzrCwYAAAAHAQACAwIKBQwYByQuCFIgBnIaDIwBCAAAAAEAAQAAAgIDAAMGCgIGCgICAQoCBAYKAgYKAgYKAgIBAQhlY2RzYV9yMRNzZWNwMjU2cjFfZWNyZWNvdmVyEHNlY3AyNTZyMV92ZXJpZnkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgMIAAAAAAAAAAADCAEAAAAAAAAAAgEAAgEBAAECAAEBAgAA",
          "ecvrf": "oRzrCwYAAAAHAQACAwIFBQcPBxYTCCkgBkkeDGcEAAAAAQABAAQGCgIGCgIGCgIGCgIBAQVlY3ZyZgxlY3ZyZl92ZXJpZnkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgMIAQAAAAAAAAADCAIAAAAAAAAAAwgDAAAAAAAAAAABAgAA",
          "ed25519": "oRzrCwYAAAAGAQACAwIFBQcMBxMXCCogDEoEAAAAAQABAAMGCgIGCgIGCgIBAQdlZDI1NTE5DmVkMjU1MTlfdmVyaWZ5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAQIAAA==",
          "event": "oRzrCwYAAAAGAQACAwIGBQgEBwwLCBcgDDcEAAEAAAABAQMBCQAABGVtaXQFZXZlbnQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAgAA",
          "groth16": "oRzrCwYAAAAKAQACAgIQAxIyBURMB5AB7QII/QMgBp0EHgq7BCAM2wS0AQ2PBg4ACgAABwAAAQcAAAMHAAACBwAABQABAAAGAAEAABACAwAAEQMEAAAPBQYAAA4FBwAADAgDAAANCQMAABIKCwAAEwwLAAABCAAECgIKAgoCCgIBCAEBCgoCAQoCAQgCAQgDAgYIAAYKAgICBgoCBAYIAAYIAQYIAgYIAwEBBwIGCgIGCgIGCgIGCgIGCgIGCgIFQ3VydmUUUHJlcGFyZWRWZXJpZnlpbmdLZXkLUHJvb2ZQb2ludHMRUHVibGljUHJvb2ZJbnB1dHMWYWxwaGFfZzFfYmV0YV9nMl9ieXRlcwhibHMxMjM4MQVibjI1NAVieXRlcxVkZWx0YV9nMl9uZWdfcGNfYnl0ZXMVZ2FtbWFfZzJfbmVnX3BjX2J5dGVzB2dyb3RoMTYCaWQVcHJlcGFyZV92ZXJpZnlpbmdfa2V5HnByZXBhcmVfdmVyaWZ5aW5nX2tleV9pbnRlcm5hbBdwcm9vZl9wb2ludHNfZnJvbV9ieXRlcx5wdWJsaWNfcHJvb2ZfaW5wdXRzX2Zyb21fYnl0ZXMOcHZrX2Zyb21fYnl0ZXMMcHZrX3RvX2J5dGVzFHZlcmlmeV9ncm90aDE2X3Byb29mHXZlcmlmeV9ncm90aDE2X3Byb29mX2ludGVybmFsFXZrX2dhbW1hX2FiY19nMV9ieXRlcwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAwgAAAAAAAAAAAMIAQAAAAAAAAADCAIAAAAAAAAAAAIBCwIBAgQUCgIECgIJCgIICgICAgEHCgIDAgEHCgIAAQAAAAMxABIAAgEBAAAAAzEBEgACAgEAAAAGCwALAQsCCwMSAQIDAQAABBhABQAAAAAAAAAADAENAQ4AEAAURAUNAQ4AEAEURAUNAQ4AEAIURAUNAQ4AEAMURAULAQIEAQAAAAMLABICAgUBAAAAAwsAEgMCBgEAAAAGCwAQBBQLAREHAgcAAgAIAQAAABELABAEFAoBEAAKARABCgEQAgsBEAMLAhAFCwMQBhEJAgkAAgABAAEBAQIBAwAAAgADAAA=",
          "hash": "oRzrCwYAAAAGAQACAwIKBQwHBxMaCC0gDE0IAAEAAAABAAACAAEAAQYKAgEKAgpibGFrZTJiMjU2BGhhc2gJa2VjY2FrMjU2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAQIAAQECAAA=",
          "hex": "oRzrCwYAAAAIAQAEAwQVBBkCBRslB0AsCGxABqwBnwYMywfCAgAEAQUAAwAAAAABAAAAAAIBAQABAAMEAQADAQEKAgECBQoKAgcKAgMDCgICBwoJAAoJAAAEAgMDCgIFAQEBAgIGYXBwZW5kBmRlY29kZQtkZWNvZGVfYnl0ZQZlbmNvZGUDaGV4BnZlY3RvcgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEDCAAAAAAAAAAAAwgBAAAAAAAAAAoKAoIGgAICMDACMDECMDICMDMCMDQCMDUCMDYCMDcCMDgCMDkCMGECMGICMGMCMGQCMGUCMGYCMTACMTECMTICMTMCMTQCMTUCMTYCMTcCMTgCMTkCMWECMWICMWMCMWQCMWUCMWYCMjACMjECMjICMjMCMjQCMjUCMjYCMjcCMjgCMjkCMmECMmICMmMCMmQCMmUCMmYCMzACMzECMzICMzMCMzQCMzUCMzYCMzcCMzgCMzkCM2ECM2ICM2MCM2QCM2UCM2YCNDACNDECNDICNDMCNDQCNDUCNDYCNDcCNDgCNDkCNGECNGICNGMCNGQCNGUCNGYCNTACNTECNTICNTMCNTQCNTUCNTYCNTcCNTgCNTkCNWECNWICNWMCNWQCNWUCNWYCNjACNjECNjICNjMCNjQCNjUCNjYCNjcCNjgCNjkCNmECNmICNmMCNmQCNmUCNmYCNzACNzECNzICNzMCNzQCNzUCNzYCNzcCNzgCNzkCN2ECN2ICN2MCN2QCN2UCN2YCODACODECODICODMCODQCODUCODYCODcCODgCODkCOGECOGICOGMCOGQCOGUCOGYCOTACOTECOTICOTMCOTQCOTUCOTYCOTcCOTgCOTkCOWECOWICOWMCOWQCOWUCOWYCYTACYTECYTICYTMCYTQCYTUCYTYCYTcCYTgCYTkCYWECYWICYWMCYWQCYWUCYWYCYjACYjECYjICYjMCYjQCYjUCYjYCYjcCYjgCYjkCYmECYmICYmMCYmQCYmUCYmYCYzACYzECYzICYzMCYzQCYzUCYzYCYzcCYzgCYzkCY2ECY2ICY2MCY2QCY2UCY2YCZDACZDECZDICZDMCZDQCZDUCZDYCZDcCZDgCZDkCZGECZGICZGMCZGQCZGUCZGYCZTACZTECZTICZTMCZTQCZTUCZTYCZTcCZTgCZTkCZWECZWICZWMCZWQCZWUCZWYCZjACZjECZjICZjMCZjQCZjUCZjYCZjcCZjgCZjkCZmECZmICZmMCZmQCZmUCZmYKAgEAAAEAAAIhBgAAAAAAAAAABwMOAEEBDAQMBQwDCgMKBCMEHwUMDQUMAgcCDAELAg4BDgAKA0IBFDRCABQ4AAsDBgEAAAAAAAAAFgwDBQcLBQIBAQAABS8GAAAAAAAAAAAHAw4AQQEMAwwEDAIKAwYCAAAAAAAAABkGAAAAAAAAAAAhBA4FEAcAJwoCCgMjBC0FFQ4ACgJCARQRAjEQGA4ACgIGAQAAAAAAAAAWQgEUEQIWDAENBAsBRAELAgYCAAAAAAAAABYMAgUQCwQCAgAAAAZAMTAKACUECQoAMTojDAEFCwkMAQsBBBILADEwFwwFBT4xQQoAJQQbCgAxRyMMAgUdCQwCCwIEJjEKCwAWMUEXDAQFPDFhCgAlBC8KADFnIwwDBTEJDAMLAwQ0BTYHAScxCgsAFjFhFwwECwQMBQsFAgA=",
          "hmac": "oRzrCwYAAAAGAQACAwIFBQcKBxETCCQgDEQEAAAAAQABAAIGCgIGCgIBCgIEaG1hYw1obWFjX3NoYTNfMjU2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAQIAAA==",
          "kiosk": "oRzrCwYAAAAOAQAYAhheA3aHAwT9A0QFwQSJBAfKCJ8ICOkQQAapEYIBCqsSZQuQEwgMmBOSDg2qIRIOvCEGD8IhAgAyAT4AFQAaAB8AIAAiAD0AVgBYAFkAWgAIDAAACQwAAA0MAQwBAAEAAAAEBwAACgcAAAsHAAAGAwEMAQAHAwEMAQAFAwEMAQEMBwEAAAIABAEAAQMCDAEAAQcDBwAHEgQACA4CAAoPDAEAAQoQAAEAAQsRAgAAGwABAAA7AAIAABkDBAAAUwUBAABUBgEAAEAHAQEMADgIAQEMAFcJCgEMADYLAQEMAEEMAQEMAB0JAQEMAEcNDgEMADcPEAEMAEsRDgEMAE8SAQEMAGETBAAAORQBAQwAQhQBAQwAXhUWAAAoFxgAACkXGAEMAC4XGAAALBcYAAAtFxgAACcZGAAAXRkWAABSGgEAAFsbHAAAXBUWAAA/Gx0AADAbHgAARRsfAABGGSAAABYhIgEMABcJIwEMABgJJAEMAFAlAQEMADUmJwAASSgnAQwASCgnAQwASigfAQwBHkoKAQABL0kYAQACYEsfAQACYgEwAQADJjIzAQADTEEBAQADV0wzAQADYD8fAQAEEzsBAgcEBCNOGAEHBE02OQIHBARONjcCBwQFEzsBAgcMBRZOUQIHDAUXNlICBwwFI04YAQcFJE4YAgcMBU02OQIHDAYhCgEBAwccLgEAByoiJwEIBzsALgAHXxwnAAlVCgEBCAlYLAEBCAo8Q0QBAAtRKh0AQStALSwvPS0tLxEKEAo0NTo4FAoxNTs8PQoFCggKMzU7PTAvNEAuLztCQgoqHykfKy8vLzFANTg4TTk4Mk8yUDY4NzgBBwgSAAIIAAgBAwgACAEHCBIBCwwBCA8DBwgABggBBggSAwcIAAYIAQUDBwgABggBCQAEBwgABggBBgsQAQkACQADBwgABggBCA0BCQAEBwgABggBCA0DBAcIAAYIAQkAAwMHCAAIDQsMAQgPAgkACxEBCQAFBwgABggBCA0DBwgSAQsCAQkAAwcIAAsCAQkACwwBCA8CBwgACwIBCQAEBwgABggBCwoBAwcIEgIHCAAJAAEHCAABBwgOAgYIAAgNAQECBwgABggBAwcIAAYIAQEBBggAAQYIDgEFAQ4BAwEHCwsBCA8DBggABggBCA0BBgkAAQcJAAIJAAgDAwcIAAkACAMBBggBAQgNAQYLAgEJAAIIAQgAAQYIEgEIAQIJAAUBCAABCA4BCA8BCwsBCQAFCA4IDQgODgsLAQgPAgsLAQkABwgSAQsMAQkAAwgNCA0IDQIIBQMCBwgOCQABCwoBCQECCAQJAAEJAQIIDQgNAwcIDgkACQEBCwcBCQABCwkBCQACCQADAQYLDAEJAAIIBgECBwsLAQkACwwBCQABCwgBCQADCA0DCA0BCxEBCQAGCA0IDQMIDQgOCA0FCA0IDQgNAwMDCA4IDQgNAwMDAwEGCwoBCQABCwoBCQABBgsLAQkAAwcLCwEJAAMHCBIBCAQCBggOCQABCAYBCAUBBgkBAQcJAQdCYWxhbmNlBkJvcnJvdwRDb2luAklEBEl0ZW0MSXRlbURlbGlzdGVkCkl0ZW1MaXN0ZWQNSXRlbVB1cmNoYXNlZAVLaW9zaw1LaW9za093bmVyQ2FwB0xpc3RpbmcETG9jawZPcHRpb24LUHVyY2hhc2VDYXADU1VJDlRyYW5zZmVyUG9saWN5D1RyYW5zZmVyUmVxdWVzdAlUeENvbnRleHQDVUlEA2FkZBBhbGxvd19leHRlbnNpb25zB2JhbGFuY2UGYm9ycm93CmJvcnJvd19tdXQKYm9ycm93X3ZhbBJjbG9zZV9hbmRfd2l0aGRyYXcEY29pbgdkZWZhdWx0BmRlbGV0ZQZkZWxpc3QMZGVzdHJveV9zb21lDWR5bmFtaWNfZmllbGQUZHluYW1pY19vYmplY3RfZmllbGQEZW1pdAVldmVudAdleGlzdHNfEGV4aXN0c193aXRoX3R5cGUDZm9yDGZyb21fYmFsYW5jZQpoYXNfYWNjZXNzCGhhc19pdGVtEmhhc19pdGVtX3dpdGhfdHlwZQJpZAxpc19leGNsdXNpdmUJaXNfbGlzdGVkFWlzX2xpc3RlZF9leGNsdXNpdmVseQlpc19sb2NrZWQHaXNfc29tZQppdGVtX2NvdW50B2l0ZW1faWQFa2lvc2sPa2lvc2tfZXh0ZW5zaW9uCGtpb3NrX2lkE2tpb3NrX293bmVyX2NhcF9mb3IEbGlzdBZsaXN0X3dpdGhfcHVyY2hhc2VfY2FwBGxvY2sNbG9ja19pbnRlcm5hbAltaW5fcHJpY2UDbmV3C25ld19yZXF1ZXN0Bm9iamVjdAZvcHRpb24Fb3duZXIFcGxhY2UOcGxhY2VfYW5kX2xpc3QOcGxhY2VfaW50ZXJuYWwFcHJpY2UHcHJvZml0cw5wcm9maXRzX2Ftb3VudAtwcm9maXRzX211dAhwdXJjaGFzZRFwdXJjaGFzZV9jYXBfaXRlbRJwdXJjaGFzZV9jYXBfa2lvc2sWcHVyY2hhc2VfY2FwX21pbl9wcmljZRFwdXJjaGFzZV93aXRoX2NhcANwdXQGcmVtb3ZlEHJlbW92ZV9pZl9leGlzdHMTcmV0dXJuX3B1cmNoYXNlX2NhcApyZXR1cm5fdmFsBnNlbmRlchRzZXRfYWxsb3dfZXh0ZW5zaW9ucwlzZXRfb3duZXIQc2V0X293bmVyX2N1c3RvbQxzaGFyZV9vYmplY3QDc3VpBHRha2UIdHJhbnNmZXIPdHJhbnNmZXJfcG9saWN5CnR4X2NvbnRleHQDdWlkB3VpZF9tdXQQdWlkX211dF9hc19vd25lchB1aWRfbXV0X2ludGVybmFsDHVpZF90b19pbm5lcgV2YWx1ZQh3aXRoZHJhdwR6ZXJvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQMIAAAAAAAAAAADCAEAAAAAAAAAAwgCAAAAAAAAAAMIAwAAAAAAAAADCAQAAAAAAAAAAwgFAAAAAAAAAAMIBgAAAAAAAAADCAcAAAAAAAAAAwgIAAAAAAAAAAMICQAAAAAAAAADCAoAAAAAAAAAAwgLAAAAAAAAAAMIDAAAAAAAAAAAAgUqCA5ECwsBCA8/BTAOFAEBAgIqCA4lCA0CAgQqCA40CA0xCA06AwMCAjQIDTEIDQQCASoIDQUCAioIDSsBBgIBKggNBwIDMggNKggNQwMIAgMyCA0qCA1DAwkCAjIIDSoIDQcKCQoICgIKAAAEACkMCgARAQwBDAILAQsALhFDOAALAjgBAgEBAAApEwoAET44AgoALhFDSQAAAAAJEgAMAgsAET4OAjgDEgEMAQsCCwECAgEAADEmCwATAAEMBgEMBwwFCwETAQwEDAMOBRE/CwQhBBEFFQsCAQcAJwsGSQAAAAAhBBoFHgsCAQcDJwsDETwLBRE8CwcLAjgEAgMBAAABEQoACwERGAQFBQsLAAELAgEHACcLAhFDCwAPABUCBAEAAAEOCgALAREYBAUFCQsAAQcAJwsCCwAPABUCBQEAAAENCgALAREYBAUFCQsAAQcAJwsACwI4BQIGAQAAAQ0KAAsBERgEBQUJCwABBwAnCwALAzgGAgcBAAA0RAoACwERGAQFBQkLAAEHACcKAAoCDAMuCwMRFSAEEgUWCwABBwgnCgAKAgwELgsEERcgBB8FIwsAAQcEJwoACgIMBS4LBRETBCsFLwsAAQcLJwoAEAEUSQEAAAAXCgAPARUKAA8CCgIJEgU4BwELAA8CCwISBDgIAggBAAA6MQoACwERGAQFBQkLAAEHACcKAAoCDAQuCwQ4CQQRBRULAAEHCycKAAoCDAUuCwURFyAEHgUiCwABBwQnCgAPAgoCCRIFCgM4CgsALjgDCwILAzkAOAsCCQEAACcNDgI4DAwECgAKAQsCOA0LAAsBCwQLAzgOAgoBAAA0PAoACwERGAQFBQkLAAEHACcKAAoCDAMuCwM4CQQRBRULAAEHCycKAAoCDAQuCwQRFyAEHgUiCwABBwQnCgAKAgwFLgsFERYEKgUuCwABBwwnCgAPAgoCCRIFOA8BCwAuOAMLAjkBOBACCwEAAD44CgAPAgoBCRIFOA8MBAoADwIKARIEOAgMAwoAEAEUSQEAAAAXCgAPARUKBA4COBEhBBsFHwsAAQcBJwoADwIKARIGOBIBCgAPAwsCOBMKAC44AwoBCgQ5AjgUCwMLAQsECwAuOAM4FQIMAQAARUAKAAsBERgEBQULCwABCwQBBwAnCgAKAgwFLgsFOAkEEwUZCwABCwQBBwsnCgAKAgwGLgsGERYgBCIFKAsAAQsEAQcGJwoADwIKAggSBQoDOAoLAwwHCwIMCAsEET4MCQsALjgDDAoLCQsKCwgLBzkDAg0BAABGRAsBOgMMBgwEDAURPAsEDAMOAjgRDAcKBwsGJgQQBRQLAAEHAScKAC44AwsFIQQbBR8LAAEHBScKAA8CCgMIEgU4DwEKAA8DCwI4EwoAEAEUSQEAAAAXCgAPARUKAA8CCgMSBjgSAQoADwIKAxIEOAgLAwsHCwAuOAM4FQIOAQAARxsLAToDAQwDDAQMAgoALjgDCwQhBA0FEQsAAQcFJwsADwILAwgSBTgPAQsCETwCDwEAAEgtCgALAREYBAUFCwsAAQsDAQcAJw4COBYEIQsCOBcMBgoGCgAQAzgYJQQYBR4LAAELAwEHAicLBgwEBSUKABADOBgMBAsEDAULAA8DCwULAzgZAhADAAABCwoADwIOATgMEgYIOBoLAAsBOAUCEQMAAAEQCgAQARRJAQAAABYKAA8BFQsADwIOATgMEgQLATgbAhIDAAABAwsADwICEwEAAAEGCwAQAgsBEgQ4HAIUAQAAAQYLABACCwESBDgdAhUBAAABBgsAEAILARIGOB4CFgEAABgSCgAQAgoBCRIFOB8EDAsAAQgMAgUQCwALAREXDAILAgIXAQAAAQcLABACCwEIEgU4HwIYAQAAAQgLAC44AwsBEAQUIQIZAQAAAQwKAAsBERgEBQUJCwABBwAnCwAPAgIaAQAAAQ4KAAsBERgEBQUJCwABBwAnCwILAA8FFQIbAQAAAQMLABACAhwBAAABDAoAEAUUBAUFCQsAAQcHJwsADwICHQEAAAEECwAQABQCHgEAAAEECwAQARQCHwEAAAEECwAQAzgYAiABAAABDAoACwERGAQFBQkLAAEHACcLAA8DAiEBAAABGwoAOAMLARAEFCEECAUMCwABBwAnCgAKAhETBBEFFQsAAQcLJwsAEAILAhIEOCACIgEAADooCgALAREYBAUFCQsAAQcAJwoACgIMAy4LAxETBBEFFQsAAQcLJwoACgIMBC4LBBEWIAQeBSILAAEHCScLAA8CCwISBDghAiMBAAA6LQoACwERGAQFBQkLAAEHACcKAAoCDAMuCwMREwQRBRULAAEHCycKAAoCDAQuCwQRFiAEHgUiCwABBwknCgAPAgoCEgQ4CAsALjgDCwISAwIkAQAAOiALAhMDDAMMBAoALjgDCwQhBAsFDwsAAQcFJw4BOAwKAyEEFQUZCwABBwonCwAPAgsDEgQLATgbAiUBAAABBAsAEAQUAiYBAAABBAsANwAUAicBAAABBAsANwEUAigBAAABBAsANwIUAgACAAMAAAABAQEABAIBAgICAwYKBwoICgAzAA==",
          "kiosk_extension": "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",
          "linked_table": "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",
          "math": "oRzrCwYAAAAGAQACAwIjBSUSBzc5CHAgDJAB+QMAAgADAAEAAAQAAQAAAAABAAAFAgEAAAYBAQAABwMDAAABAAEAAgMDAQMCAwIBBAMEBAQDDw8PBGRpZmYTZGl2aWRlX2FuZF9yb3VuZF91cARtYXRoA21heANtaW4DcG93BHNxcnQJc3FydF91MTI4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAQAAAQsKAAoBJAQHCwAMAgUJCwEMAgsCAgEBAAABCwoACgEjBAcLAAwCBQkLAQwCCwICAgEAAAEPCgAKASQECQsACwEXDAIFDQsBCwAXDAILAgIDAQAAASEGAQAAAAAAAAAMAgoBMQEmBB8FBwoBMQIZMQAhBBYKAAsAGAwACwExAhoMAQUeCwIKABgMAgsBMQEXDAEFAgsCAgQBAAAEKzIAAAAAAAAAAAEAAAAAAAAADAEyAAAAAAAAAAAAAAAAAAAAAAwCCwA1DAMKATIAAAAAAAAAAAAAAAAAAAAAIgQoBQwKAwoCCgEWJgQfCwMKAgoBFhcMAwsCMQEwCgEWDAIFIwsCMQEwDAILATECMAwBBQcLAjQCBQEAAAUrSgAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAADAFKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAgsATQwDCgFKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiBCgFDAoDCgIKARYmBB8LAwoCCgEWFwwDCwIxATAKARYMAgUjCwIxATAMAgsBMQIwDAEFBwsCNQIGAQAAARMKAAoBGQYAAAAAAAAAACEECwsACwEaDAIFEQsACwEaBgEAAAAAAAAAFgwCCwICAA==",
          "object": "oRzrCwYAAAAMAQAIAggMAxSDAQSXAQYFnQEjB8ABjgMIzgRABo4FkgEKoAYLDKsGjwINuggED74ICgAZAQUAAwAfAAAHAAACBAADAQIAABYAAQAAFQACAAAUAQMAABMCAwAAHAQFAAAJBgUAAAQGBQAAIAcAAAAjBwMAACIHAQAAIQcCAAAXCAUAAAoFBgAAEAkDAQgABgkAAQgAEgkBAQgAEQkCAQgABwkHAQgAGAIFAAALAgYAABoCBgABHQkBAQACDwECAAMOCAIAAxsEAgAVAhEKFQMBBggAAQoCAQUBCAABBggCAQgBAAEGCAEBBwgCAQYJAAEJAAJJRAlUeENvbnRleHQDVUlEB2FkZHJlc3MTYXV0aGVudGljYXRvcl9zdGF0ZQNiY3MJYm9ycm93X2lkCmJvcnJvd191aWQFYnl0ZXMFY2xvY2sGZGVsZXRlC2RlbGV0ZV9pbXBsDWR5bmFtaWNfZmllbGQUZHluYW1pY19vYmplY3RfZmllbGQUZnJlc2hfb2JqZWN0X2FkZHJlc3MKZnJvbV9ieXRlcwJpZAppZF9hZGRyZXNzCGlkX2J5dGVzD2lkX2Zyb21fYWRkcmVzcw1pZF9mcm9tX2J5dGVzDWlkX3RvX2FkZHJlc3MLaWRfdG9fYnl0ZXMDbmV3EW5ld191aWRfZnJvbV9oYXNoBm9iamVjdA5yZWNvcmRfbmV3X3VpZAZzZW5kZXIQc3VpX3N5c3RlbV9zdGF0ZQh0b19ieXRlcwh0cmFuc2Zlcgp0eF9jb250ZXh0DHVpZF9hc19pbm5lcg51aWRfdG9fYWRkcmVzcwx1aWRfdG9fYnl0ZXMMdWlkX3RvX2lubmVyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUFIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGBSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwMIAAAAAAAAAAAFIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBCAUBAgEQCAAAAQAABgQLABAAOAACAQEAAAYECwAQABQCAgEAAAYECwARFhEDAgMBAAAGAwsAEgACBAAAAAYMCwARGAcEIQQGBQgHAycHABIAEgECBQMAAAYEBwESABIBAgYDAAAGBAcCEgASAQIHAQAABgMLABABAggBAAAGBAsAEAEUAgkBAAAGBQsAEAEQADgAAgoBAAAGBQsAEAEQABQCCwEAAAYFCwARFxIAEgECDAEAAAYFCwATARMAERMCDQEAAAYFCwA4ARABFAIOAQAABgQLADgBEAECDwEAAAYFCwA4ARABOAICEAEAAAYGCwA4ARABEAAUAhEAAgASAwAABgYKABEUCwASABIBAhMAAgAUAAIAAAABAAAEAAkADAANAB4A",
          "object_bag": "oRzrCwYAAAALAQAKAgoWAyB8BJwBDgWqAVgHggLnAQjpA0AGqQQKCrMECAy7BPUBDbAGBAAUARUADAATABgAAQwAAQIHAQAAAwAHAAMEBAAEAwIAABIAAQAABQIDAgcMAAYEBQIHDAAHBgcCBwwAFgYIAgcMAAgECQEHAAkECQIHDAARCgsAABAKCQAACwEDAAAZBAwBBwIFDwMCBwwCBhAFAgcMAgcRBwIHDAINEAkBBwIOEAkCBwwCDxAMAQcCFhEIAgcMAwoNAwADEgANAAsODA4NDhEODhIPDhASAQcIBAEIAAMHCAAJAAkBAAIGCAAJAAEGCQECBwgACQABBwkBAQkBAQEBBggAAQMBCwEBCAIBCAMCCQAJAQMHCAMJAAkBAgYIAwkAAgcIAwkAAQkAAggDAwJJRAlPYmplY3RCYWcGT3B0aW9uCVR4Q29udGV4dANVSUQDYWRkBmJvcnJvdwpib3Jyb3dfbXV0CGNvbnRhaW5zEmNvbnRhaW5zX3dpdGhfdHlwZQZkZWxldGUNZGVzdHJveV9lbXB0eRRkeW5hbWljX29iamVjdF9maWVsZAdleGlzdHNfEGV4aXN0c193aXRoX3R5cGUCaWQIaXNfZW1wdHkGbGVuZ3RoA25ldwZvYmplY3QKb2JqZWN0X2JhZwZvcHRpb24GcmVtb3ZlBHNpemUKdHhfY29udGV4dAh2YWx1ZV9pZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEDCAAAAAAAAAAAAAICDwgDFwMAAQAAAwULABETBgAAAAAAAAAAEgACAQEAAAMOCgAPAAsBCwI4AAoAEAEUBgEAAAAAAAAAFgsADwEVAgIBAAADBQsAEAALATgBAgMBAAADBQsADwALATgCAgQBAAAIDwoADwALATgDDAIKABABFAYBAAAAAAAAABcLAA8BFQsCAgUBAAADBQsAEAALATgEAgYBAAADBQsAEAALATgFAgcBAAADBAsAEAEUAggBAAADBgsAEAEUBgAAAAAAAAAAIQIJAQAAEw4LABMADAIMAQsCBgAAAAAAAAAAIQQJBQsHACcLARESAgoBAAADBQsAEAALATgGAgAAAAEA",
          "object_table": "oRzrCwYAAAANAQAKAgoaAyR4BJwBDAWoAXEHmQLHAQjgA0AGoAQKCqoECAuyBAIMtATmAQ2aBgQOngYEABIBEwALABEAFgABDAIHAQwBAQIHAQAAAwAHAAMEBAAEAwIAABAAAQIHDAAFAgMCBwwABgQFAgcMAAcGBwIHDAAUBggCBwwACAQJAgcMAA8KCwIHDAAOCgkCBwwACgEDAgcMABcEDAIHDAIFDwMCBwwCBhAFAgcMAgcRBwIHDAIMEAkBBwINEAwBBwIUEQgCBwwDCQ0DAAMQAA0ACg4LDgwODw4NEg4SAQcIBAELAAIJAAkBAwcLAAIJAAkBCQAJAQACBgsAAgkACQEJAAEGCQECBwsAAgkACQEJAAEHCQEBCQEBAQEGCwACCQAJAQEDAQsBAQgCAQgDAgkACQEDBwgDCQAJAQIGCAMJAAIHCAMJAAEJAAIIAwMCSUQLT2JqZWN0VGFibGUGT3B0aW9uCVR4Q29udGV4dANVSUQDYWRkBmJvcnJvdwpib3Jyb3dfbXV0CGNvbnRhaW5zBmRlbGV0ZQ1kZXN0cm95X2VtcHR5FGR5bmFtaWNfb2JqZWN0X2ZpZWxkB2V4aXN0c18CaWQIaXNfZW1wdHkGbGVuZ3RoA25ldwZvYmplY3QMb2JqZWN0X3RhYmxlBm9wdGlvbgZyZW1vdmUEc2l6ZQp0eF9jb250ZXh0CHZhbHVlX2lkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQMIAAAAAAAAAAAAAgINCAMVAwAOAAEAAAMFCwAREQYAAAAAAAAAADkAAgEBAAADDgoANgALAQsCOAAKADcBFAYBAAAAAAAAABYLADYBFQICAQAAAwULADcACwE4AQIDAQAAAwULADYACwE4AgIEAQAACA8KADYACwE4AwwCCgA3ARQGAQAAAAAAAAAXCwA2ARULAgIFAQAAAwULADcACwE4BAIGAQAAAwQLADcBFAIHAQAAAwYLADcBFAYAAAAAAAAAACECCAEAABMOCwA6AAwCDAELAgYAAAAAAAAAACEECQULBwAnCwEREAIJAQAAAwULADcACwE4BQIAAAABAA4BDgA=",
          "package": "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",
          "pay": "oRzrCwYAAAAJAQAIAggKAxJNBF8OBW1+B+sBrQEImAMgBrgDCgzCA9YCAAkAAgAPABABAAwBAAEDAQIAAAgAAQEAAAwCAQEAAA4DAQEAAA0EAQEAAAMCAQEAAAUFAQEAAAYGAQEAAAcHAQEAAQQCEAEAAQUFAQEAAQwCCgEAAgoLAQEMAwsICQALCgoMAAwBDAgMCQwGDAILAAEJAAYIAQADBwsAAQkAAwcIAQMHCwABCQAKAwcIAQQHCwABCQADBQcIAQIHCwABCQALAAEJAAIHCwABCQAKCwABCQACCgsAAQkABQEGCAEBBQELAAEJAAIJAAUBCQACAwMBAwMDAwoLAAEJAAEKCwABCQADCwABCQADAwRDb2luCVR4Q29udGV4dARjb2luD2RpdmlkZV9hbmRfa2VlcA1kaXZpZGVfaW50b19uBGpvaW4Iam9pbl92ZWMVam9pbl92ZWNfYW5kX3RyYW5zZmVyBGtlZXADcGF5D3B1YmxpY190cmFuc2ZlcgZzZW5kZXIFc3BsaXQSc3BsaXRfYW5kX3RyYW5zZmVyCXNwbGl0X3ZlYwh0cmFuc2Zlcgp0eF9jb250ZXh0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIDCAAAAAAAAAAAAAEAAAEFCwALAREMOAACAQEEAAEICwALAQoCOAELAi44AgICAQQADRsGAAAAAAAAAAAOAUEODAQMAwoDCgQjBBYFCgoADgEKA0IOFAoCOAMLAwYBAAAAAAAAABYMAwUFCwABCwIBAgMBBAABBwsACwELAzgBCwI4AAIEAQQADx8LAAsBCgI4BAwFBgAAAAAAAAAADgVBCgwEDAMKAwoEIwQaBQ8NBUUKCgIuEQw4AAsDBgEAAAAAAAAAFgwDBQoLAgELBUYKAAAAAAAAAAACBQEEAAEECwALATgFAgYBBAARGgYAAAAAAAAAAA4BQQoMBAwDCgMKBCMEFQUKDQFFCgwCCgALAjgFCwMGAQAAAAAAAAAWDAMFBQsAAQsBRgoAAAAAAAAAAAIHAQQAChIOAEEKBgAAAAAAAAAAJAQGBQgHACcNAEUKDAINAgsAOAYLAgsBOAACAA==",
          "priority_queue": "oRzrCwYAAAANAQAEAgQMAxA8BEwKBVanAQf9AbgBCLUDQAb1Aw4KgwQSC5UEBAyZBPMFDYwKBA6QCgQACwEQAAEGAQIAAAAGAQIAAAYAAQECAAgCAwECAAQEBQECAAcDBgECAAIHAAECAA0IBQECAAUJBQECAAkKCwECAQwPDQEAAQ4PDQEABg0JBgUNCBAIDQEKCwEBCQABCwABCQABBwsAAQkAAgMJAAMHCwABCQADCQAAAQsBAQkAAgoDCgkAAgcKCwEBCQADAwcKCwEBCQADAwEGCwABCQABCgMCAwMBCQADAwMJAAIHCgkAAwEDBQMDAwoLAQEJAAkABQcKCwEBCQADBwoLAQEJAAMDDQcKCwEBCQABAwcKCwEBCQADAQcKCwEBCQADBwoLAQEJAAMDAwMCAwoDBUVudHJ5DVByaW9yaXR5UXVldWUOY3JlYXRlX2VudHJpZXMHZW50cmllcwZpbnNlcnQVbWF4X2hlYXBpZnlfcmVjdXJzaXZlA25ldwluZXdfZW50cnkHcG9wX21heApwcmlvcml0aWVzCHByaW9yaXR5DnByaW9yaXR5X3F1ZXVlBnJlbW92ZRZyZXN0b3JlX2hlYXBfcmVjdXJzaXZlC3N3YXBfcmVtb3ZlBXZhbHVlBnZlY3RvcgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEDCAAAAAAAAAAACgMBAAACAQMKCwEBCQABAgIKAw8JAAANAQ0AAQAADBgOAEEGDAIKAgYCAAAAAAAAABoMAQoBBgAAAAAAAAAAJAQVBQwLAQYBAAAAAAAAABcMAQ0ACgIKATgABQcLADkAAgEBAAAOHgoANwBBBgwBCgEGAAAAAAAAAAAkBAkFDQsAAQcAJwoANgAGAAAAAAAAAAA4AToBDAMMAgsANgALAQYBAAAAAAAAABcGAAAAAAAAAAA4AAsCCwMCAgEAABARCgA2AAsBCwI5AUQGCgA3AEEGBgEAAAAAAAAAFwwDCwA2AAsDOAICAwEAAAUECwALATkBAgQBAAARKA4AQRAMAw4BQQ0KAyEECQULBgAAAAAAAAAAJ0AGAAAAAAAAAAAMBQYAAAAAAAAAAAwCCgIKAyMEJgUUDQAGAAAAAAAAAAA4AwwEDQEGAAAAAAAAAAA4BAwGDQULBAsGOQFEBgsCBgEAAAAAAAAAFgwCBQ8LBQIFAAAAEi4KAQYAAAAAAAAAACEEBwsAAQIKAQYBAAAAAAAAABcGAgAAAAAAAAAaDAYKAAoBDAMMAgoACgYMBQwECwIuCwNCBjcBFAsELgsFQgY3ARQkBCsKAAsBCgZHBgsACwY4AgUtCwABAgYAAAATbgoBBgAAAAAAAAAAIQQHCwABAgoCCgEjBAwFEAsAAQYBAAAAAAAAACcKAgYCAAAAAAAAABgGAQAAAAAAAAAWDA0KDQYBAAAAAAAAABYMDwoCDA4KDQoBIwQ3CgAKDQwFDAMKAAoODAcMBgsDLgsFQgY3ARQLBi4LB0IGNwEUJAwIBTkJDAgLCAQ9Cw0MDgoPCgEjBFgKAAoPDAoMCQoACg4MDAwLCwkuCwpCBjcBFAsLLgsMQgY3ARQkDAQFWgkMBAsEBF4LDwwOCg4KAiIEawoACg4LAkcGCwALAQsOOAAFbQsAAQIHAQAAFBwHAQwCBgAAAAAAAAAADAEKAQoANwBBBiMEGAULDQIKADcACgFCBjcBFEQQCwEGAQAAAAAAAAAWDAEFBAsAAQsCAgAAAQAADQENAA==",
          "prover": "oRzrCwYAAAAEAQACBwIHCAkgBikeAAAGcHJvdmVyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIDCAEAAAAAAAAAAwgCAAAAAAAAAAMIAwAAAAAAAAAA",
          "sui": "oRzrCwYAAAAKAQAOAg4wAz4+BHwOBYoBhQEHjwKBAgiQBEAG0ARmCrYFBQy7BW0AFgESAAkACgAXABkAGgAEAgABAwcBAAACAAQBAAECBQQBAAEDAQwBAAEDAgwBAAEDBgwBAAEFBwIABggHAAAQAAEAABcCAwABEQMJAQACDBAHAQACDxESAQADCwsMAQIDGA8QAQAEEw4DAQwEFBQDAQwFDgUHAAUVBQYAAggFCgcNBgoECgMKCBMBBwgHAQsCAQgAAgsEAQgABQAECwUBCAALAwEIAAsCAQgACwYBCAABBggHAQUBAwEICAELAQEJAAEIAAcJAAIKAgoCCgILAQEICAcIBwILBgEJAAsFAQkAAQsFAQgAAQkAAQsGAQkAAQsDAQkAAgcLAwEJAAMBCwIBCQABCwQBCAACCQAFB0JhbGFuY2UEQ29pbgxDb2luTWV0YWRhdGEGT3B0aW9uA1NVSQZTdXBwbHkLVHJlYXN1cnlDYXAJVHhDb250ZXh0A1VybAdiYWxhbmNlBGNvaW4PY3JlYXRlX2N1cnJlbmN5DmRlc3Ryb3lfc3VwcGx5C2R1bW15X2ZpZWxkBWVwb2NoD2luY3JlYXNlX3N1cHBseQNuZXcEbm9uZQZvcHRpb24UcHVibGljX2ZyZWV6ZV9vYmplY3QPcHVibGljX3RyYW5zZmVyBnNlbmRlcgNzdWkIdHJhbnNmZXIUdHJlYXN1cnlfaW50b19zdXBwbHkKdHhfY29udGV4dAN1cmwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAwgAAAAAAAAAAAMIAQAAAAAAAAADCADKmjsAAAAAAwgA5AtUAgAAAAMIAADoiQQjx4oFIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgIEA1NVSQoCBANTdWkKAgEAAAIBDQEAAAAABC8KAC4RCgcFIQQHBQsLAAEHAScKAC4RCQYAAAAAAAAAACEEEgUWCwABBwAnCRIAMQkHBgcHBwg4AAsAOAEMAQwECwE4AgsEOAMMAg0CBwQ4BAwDCwI4BQELAwIBAQQAAwQLAAsBOAYCAA==",
          "table": "oRzrCwYAAAANAQAIAggQAxhzBIsBCgWVAWgH/QGnAQikAyAGxAMKCs4DCAvWAwIM2APlAQ29BQQOwQUEABMACgAQABQAAAwCBwEEAQICBAADAQIAAA8AAQIHBAADAgMCBwQABAQFAgcEAAUGBwIHBAARBggCBwQABgQJAgcEAA4KCwIHBAANCgkCBwQACAEDAgcEAAkBAwIHBgEDDgMCBwQBBA8FAgcEAQUQBwIHBAELDwkCBwQBERAIAgcEAgcMAwACDwAMAAoNCw0MDQ4NDQ0BBwgCAQsAAgkACQEDBwsAAgkACQEJAAkBAAIGCwACCQAJAQkAAQYJAQIHCwACCQAJAQkAAQcJAQEJAQEBAQYLAAIJAAkBAQMBCAECCQAJAQMHCAEJAAkBAgYIAQkAAgcIAQkAAggBAwVUYWJsZQlUeENvbnRleHQDVUlEA2FkZAZib3Jyb3cKYm9ycm93X211dAhjb250YWlucwZkZWxldGUNZGVzdHJveV9lbXB0eQRkcm9wDWR5bmFtaWNfZmllbGQQZXhpc3RzX3dpdGhfdHlwZQJpZAhpc19lbXB0eQZsZW5ndGgDbmV3Bm9iamVjdAZyZW1vdmUEc2l6ZQV0YWJsZQp0eF9jb250ZXh0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIDCAAAAAAAAAAAAAICDAgBEgMADQABAAADBQsAERAGAAAAAAAAAAA5AAIBAQAAAw4KADYACwELAjgACgA3ARQGAQAAAAAAAAAWCwA2ARUCAgEAAAMFCwA3AAsBOAECAwEAAAMFCwA2AAsBOAICBAEAAAgPCgA2AAsBOAMMAgoANwEUBgEAAAAAAAAAFwsANgEVCwICBQEAAAMFCwA3AAsBOAQCBgEAAAMECwA3ARQCBwEAAAMGCwA3ARQGAAAAAAAAAAAhAggBAAARDgsAOgAMAgwBCwIGAAAAAAAAAAAhBAkFCwcAJwsBEQ8CCQEAAAMFCwA6AAERDwIAAAABAA0BDQA=",
          "table_vec": "oRzrCwYAAAANAQAGAgYSAxiAAQSYARoFsgGYAQfKArUBCP8DIAafBBQKswQKC70EAgy/BJYDDdUHAg7XBwIAFAATABUAAQQBBAEBAAwCBwEEAQICAgAACQABAQQAEAIBAQQACwMEAQQACgMFAQQABAYHAQQADggJAQQABQoLAQQADQwNAQQABwEJAQQACAEJAQYAEQ4JAQQAEgoNAQQBAxQJAgcEAQQSEwIHBAEFFRYCBwQBBxAJAgcEAQgQCQIHBgELEQQCBwQBDAAQAgcEAQ8VFwIHBBIPAA0FDREPAg0NDwwPDg8TDw8PEA8KDQcNAQcIAgELAAEJAAIJAAcIAgEGCwABCQABAwEBAgYLAAEJAAMBBgkAAgcLAAEJAAkAAAIHCwABCQADAQcJAAEHCwABCQABCQADBwsAAQkAAwMCAwkAAQsBAgkACQEBBgsBAgkACQECBgsBAgkACQEJAAEGCQEDBwsBAgkACQEJAAkBAgcLAQIJAAkBCQABBwkBAQkBAgkACQAFVGFibGUIVGFibGVWZWMJVHhDb250ZXh0A2FkZAZib3Jyb3cKYm9ycm93X211dAhjb250ZW50cw1kZXN0cm95X2VtcHR5BGRyb3AFZW1wdHkIaXNfZW1wdHkGbGVuZ3RoA25ldwhwb3BfYmFjawlwdXNoX2JhY2sGcmVtb3ZlCXNpbmdsZXRvbgRzd2FwC3N3YXBfcmVtb3ZlBXRhYmxlCXRhYmxlX3ZlYwp0eF9jb250ZXh0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIDCAAAAAAAAAAAAwgBAAAAAAAAAAACAQYLAQIDCQAADQABAAAJBAsAOAA5AAIBAQAAAQgLATgBDAINAgsAOAILAgICAQAACQQLADcAOAMCAwEAAAkFCwA4BAYAAAAAAAAAACECBAEAAAkPCgA4BAoBJAQGBQoLAAEHACcLADcACwE4BQIFAQAABAoKAC44BAwCCwA2AAsCCwE4BgIGAQAACRAKAC44BAoBJAQHBQsLAAEHACcLADYACwE4BwIHAQAABBQKAC44BAwBCgEGAAAAAAAAAAAkBAkFDQsAAQcAJwsANgALAQYBAAAAAAAAABc4CAIIAQAACQwOADgEBgAAAAAAAAAAIQQGBQgHAScLADoAOAkCCQEAAAkECwA6ADgKAgoBAAAYMgoALjgECgEkBAcFCwsAAQcAJwoALjgECgIkBBIFFgsAAQcAJwoBCgIhBB0LAAECCgA2AAoBOAgMAwoANgAKAjgIDAQKADYACwILAzgGCwA2AAsBCwQ4BgILAQAABBgKAC44BAoBJAQHBQsLAAEHACcKAC44BAYBAAAAAAAAABcMAgoACwELAjgLCwA4DAIAAAANAA==",
          "transfer": "oRzrCwYAAAALAQAEAgQOAxJHBFkIBWEgB4EB1wEI2AIgBvgCCgqCAwgLigMCDIwDcAAOAAYAAQIBCAEBAAcAAQIEAAAOAAEBCAAJAAEBDAADAgEBCAAHAgEBDAAMAgEBCAAIAgEBDAAKAwIBCAAEAgEBCAANAgEBCAAPAAEBCAALBAIBCAEQBgcACQIHAggCCgICCQAFAAEJAAIHCAILAAEJAAMFCAEDAggBAwEGCAIBBQJJRAlSZWNlaXZpbmcDVUlEDWZyZWV6ZV9vYmplY3QSZnJlZXplX29iamVjdF9pbXBsAmlkBm9iamVjdBRwdWJsaWNfZnJlZXplX29iamVjdBNwdWJsaWNfc2hhcmVfb2JqZWN0D3B1YmxpY190cmFuc2ZlcgdyZWNlaXZlDHJlY2VpdmVfaW1wbAxzaGFyZV9vYmplY3QRc2hhcmVfb2JqZWN0X2ltcGwIdHJhbnNmZXINdHJhbnNmZXJfaW1wbA51aWRfdG9fYWRkcmVzcwd2ZXJzaW9uAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIDCAAAAAAAAAAAAAICBQgBEQMAAgABAAABBAsACwE4AAIBAQAAAQQLAAsBOAACAgEAAAEDCwA4AQIDAQAAAQMLADgBAgQBAAABAwsAOAICBQEAAAEDCwA4AgIGAQAABQsLAToADAMMAgsALhELCwILAzgDAgcDAgAIAwIACQMCAAoAAgAA",
          "transfer_policy": "oRzrCwYAAAANAQAaAhpOA2iWAgT+AjIFsAPAAwfwBooFCPoLQAa6DDwK9gw3C60NCgy3DZYFDc0SEA7dEhAAPwEwAUEAEwAVAB0AIAAvADEAPAA+AEAARgAKAAEAAQAHDAEAAQAIDAEAAQAJAwEAAQAFBwECAQEDBwEAAAIMBwADAAQBAAEEAQwBAAEHAgcABw0EAAgEDAAJBgIACwsCAAwOBwEDAAAuAAEBAAAtAgMBAAAYAgQBAABHBQYBAAAaBwYBAAAWCAABAAARCQQDAAIGACYKCwMAAgYAEgwEAgACABANBAIAAgAnDg8CAAIANxAEAwACBgBCDhEBAABDEBIBAAA4DhMBAAAsFBUBAAAyFBYBAAAiFBUBAAEbKRkBAAErKA8BAAIlBBcBAANFKhYBAANIBCABAAQjLiwBAAQ0OgQBAAQ9KywBAAUPNgQCBwQFFDg5AgcEBSE4DwEHBTY9NAIHBAYeGQQBAwcZHQQABygnFQEIBy0cHQAHRBEVAAgkGw8BAAo6GQQBCAo+JQQBCAs5IyQADBcyDwEDDB8EGAEDDCk3BAEDDCoYMAEDDDY+BAEDDDsxFgEDKBcjGR4eFh8BGSQiJSEgIhMWEhYVHxkfFx8qFywXJxcKMxo1FDQpFxs1GB8cOx01KxcDCAkDCAkBCwABCQACBggLBwgNAgsBAQkACwIBCQAABAcLAQEJAAYLAgEJAAsFAQMHCA0BCwgBCAwDCwEBCQALAgEJAAcIDQIGCwEBCQALAAEJAAQJAQcLAQEJAAYLAgEJAAkCAgkBBgsBAQkAAQYJAgMJAQcLAQEJAAsIAQgMAgkBBwsAAQkAAQYLAQEJAAEBAgcLAQEJAAYLAgEJAAEGCAoBBwgKAQYLDgEIBgEGCwABCQABCAkBAwEIBgELDgEJAAEJAAUICgsOAQgGCwcBCAwICggJAQYICwEHCA0BCAoBCwMBCQABCAwBCwcBCQABCwIBCQABCwEBCQABBggNAQUCCQAFAwMDAwEGCQABBgsFAQkAAQsFAQkAAQYLBwEJAAMHCwcBCQADBwgNAQsIAQkAAgsHAQgMCAoCCwcBCQAHCA0HCggGCAkICQMLDgEIBggGAwEKCQABBgsOAQkAAgYLDgEJAAYJAAIJAAkBAQkBAgsEAQkBCQIDBwgKCQAJAQIHCw4BCQAJAAIGCAoJAAEGCQECBwsHAQkACwgBCQABCwQBCQECCAYHCw4BCAYCBwgKCQACBwsOAQkABgkAB0JhbGFuY2UEQ29pbgJJRAZPcHRpb24JUHVibGlzaGVyB1J1bGVLZXkDU1VJDlRyYW5zZmVyUG9saWN5EVRyYW5zZmVyUG9saWN5Q2FwFVRyYW5zZmVyUG9saWN5Q3JlYXRlZA9UcmFuc2ZlclJlcXVlc3QJVHhDb250ZXh0CFR5cGVOYW1lA1VJRAZWZWNTZXQDYWRkC2FkZF9yZWNlaXB0CGFkZF9ydWxlDmFkZF90b19iYWxhbmNlB2JhbGFuY2UGYm9ycm93BGNvaW4PY29uZmlybV9yZXF1ZXN0CGNvbnRhaW5zB2RlZmF1bHQGZGVsZXRlFGRlc3Ryb3lfYW5kX3dpdGhkcmF3DGRlc3Ryb3lfc29tZQtkdW1teV9maWVsZA1keW5hbWljX2ZpZWxkBGVtaXQFZW1wdHkFZXZlbnQHZXhpc3RzXwRmcm9tDGZyb21fYmFsYW5jZQxmcm9tX3BhY2thZ2UDZ2V0CGdldF9ydWxlCGhhc19ydWxlAmlkBmluc2VydAlpbnRvX2tleXMHaXNfc29tZQRpdGVtA25ldwtuZXdfcmVxdWVzdAZvYmplY3QGb3B0aW9uB3BhY2thZ2UEcGFpZAlwb2xpY3lfaWQDcHV0CHJlY2VpcHRzBnJlbW92ZQtyZW1vdmVfcnVsZQVydWxlcwZzZW5kZXIMc2hhcmVfb2JqZWN0BHNpemUDc3VpBHRha2UIdHJhbnNmZXIPdHJhbnNmZXJfcG9saWN5CnR4X2NvbnRleHQJdHlwZV9uYW1lA3VpZBB1aWRfbXV0X2FzX293bmVyDHVpZF90b19pbm5lcgV2YWx1ZQd2ZWNfc2V0CHdpdGhkcmF3BHplcm8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAwgAAAAAAAAAAAMIAQAAAAAAAAADCAIAAAAAAAAAAwgDAAAAAAAAAAMIBAAAAAAAAAADCAUAAAAAAAAAAAIELAgJMgMiCAk1Cw4BCAYBAgMoCAoTCwcBCAw4Cw4BCAYCAgIoCAozCAkDAgEoCAkEAgEcAQAZAxkBGQIZBDQAAQAABAYLAAsBCwI4ADkAAgEBAAAaIAsAOAEEBAUICwEBBgAAAAAAAAAAJwoBESEMBQ4FESIMBgoGOQE4AgsFDAI4AAwDOAMMBAsCCwQLAzkCCwERIQsGOQMCAgAEACELCwAKATgEDAI4BQsCCwEuESY4BgIDAQAAJjEKAC44BwsBNwAUIQQJBQ8LAAELAwEHBCcOAjgIBCULAjgJDAYKBgoANwE4CiUEHAUiCwABCwMBBwUnCwYMBAUpCgA3ATgKDAQLBAwFCwA2AQsFCwM4CwIEAQAALRsOADgHDgE3ABQhBAgFDAsCAQcEJwsBOgMBDAQLADoCAQwDER8LBBEfCwMLAjgMAgUBAAAvNAsBOgAMBgwDDAUMBAsGOA0MAg4CQRcMCAoICgA3AjgOIQQTBRcLAAEHACcKCAYAAAAAAAAAACQELgUcDQJFFwwHCgA3Ag4HOA8EJQUpCwABBwEnCwgGAQAAAAAAAAAXDAgFFwsAAQsECwULAwIGAQAABCIKAS44BwsCNwAUIQQJBQ0LAQEHBCcKAS44ECAEEwUXCwEBBwMnCgE2Awk5BAsDOBELATYCOBI4EwIHAQAABAYLATcDCTkEOBQCCAEAAAQOCgEuOBAEBQUJCwEBBwInCwE2AQsCOBUCCQEAAAQFCwE2BDgSOBMCCgEAAAQGCwA3Awk5BDgWAgsBAAA8HAoALjgHCwE3ABQhBAkFDQsAAQcEJwoANgMJOQQ4FwELADYCDAM4EgwCCwMOAjgYAgwBAAAEAwsANwMCDQEAAAQQCgAuOAcLATcAFCEECQUNCwABBwQnCwA2AwIOAQAABAMLADcCAg8BAAAEBAsANwUUAhABAAAEBAsANwYUAhEBAAAEBAsANwcUAgIBAQEBAgEAAAMAAAABAAIAGQEZAhkDGQQZBRkGGQcZAA==",
          "tx_context": "oRzrCwYAAAAJAQACAgIEAwYjBSkYB0FvCLABIArQAQ4M3gFrDckCCgAIAAACAAAHAAEAAAIAAgAAAwADAAAEAAMAAAUEAQAABgADAAABBQEAAQYIAAEFAQYKAgEDAQcIAAIKAgMAAgUDCVR4Q29udGV4dAlkZXJpdmVfaWQGZGlnZXN0BWVwb2NoEmVwb2NoX3RpbWVzdGFtcF9tcxRmcmVzaF9vYmplY3RfYWRkcmVzcwtpZHNfY3JlYXRlZAZzZW5kZXIKdHhfY29udGV4dAd0eF9oYXNoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAgUHBQkKAgMDBAMGAwABAAAGBAsAEAAUAgEBAAAGAwsAEAECAgEAAAYECwAQAhQCAwEAAAYECwAQAxQCBAEAAAcSCgAQBBQMAgoAEAEUCgIRBgwBCwIGAQAAAAAAAAAWCwAPBBULAQIFAAAABgQLABAEFAIGAAIAAAAAAQACAAMABAA=",
          "types": "oRzrCwYAAAAGAQACAwIGBQgGBw4aCCggDEgEAAEAAAABAQIBBgkAAQETaXNfb25lX3RpbWVfd2l0bmVzcwV0eXBlcwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAECAAA=",
          "url": "oRzrCwYAAAAJAQAEAgQIAwwZBSUUBzlOCIcBQArHAQYMzQEyDf8BAgAIAQIAAQcAAQAHAAAEAAEAAAUCAQAAAwMAAAAHBAUAAQYCAAABCAEBCAABCgIBBggAAgcIAAgBAAZTdHJpbmcDVXJsBWFzY2lpCWlubmVyX3VybApuZXdfdW5zYWZlFW5ld191bnNhZmVfZnJvbV9ieXRlcwZzdHJpbmcGdXBkYXRlA3VybAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAgEICAEAAQAABQMLABIAAgEBAAAFBAsAEQQSAAICAQAABQQLABAAFAIDAQAABQULAQsADwAVAgAAAA==",
          "vec_map": "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",
          "vec_set": "oRzrCwYAAAANAQAGAgYMAxJmBHgUBYwBXwfrAaQBCI8DQAbPAxQK4wMHC+oDAgzsA5wCDYgGAg6KBgIAEwEOARQAAQcBAwABAAcBAAAABQABAQMAEAIBAQMACAMAAQMADwQAAQMAAgUGAQMAEQcIAQMACgcGAQMACQEJAQMADAcKAQMABwULAQMABgUIAQMBBBECAQABCw8GAQABDQARAQABEgIRAQACDw4CAQACEAIJAQAQAgQCCgIPAgkCDAgFAg4IDQgLCAABCwABCQABCQACBwsAAQkACQACBwsAAQkABgkAAgYLAAEJAAYJAAEBAQYLAAEJAAEDAQoJAAEGCgkAAQsBAQMBBgkAAgYJAAMCBwoJAAMBBgsBAQkAAgMDAQsBAQkABk9wdGlvbgZWZWNTZXQIY29udGFpbnMIY29udGVudHMMZGVzdHJveV9zb21lBWVtcHR5B2dldF9pZHgLZ2V0X2lkeF9vcHQGaW5zZXJ0CWludG9fa2V5cwhpc19lbXB0eQdpc19zb21lBGtleXMEbm9uZQZvcHRpb24GcmVtb3ZlCXNpbmdsZXRvbgRzaXplBHNvbWUHdmVjX3NldAZ2ZWN0b3IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAwgAAAAAAAAAAAMIAQAAAAAAAAAAAgEDCgkAAAIAAQAAAANAAgAAAAAAAAAAOQACAQEAAAAECwA4ADkAAgIBAAAMEgoADgEMAi4LAjgBIAQJBQ0LAAEHACcLADYACwFEAgIDAQAADQ0KAAsBDAIuCwI4AgwDCwA2AAsDOAMBAgQBAAALBwsACwE4BAwCDgI4BQIFAQAAAAQLADcAQQICBgEAAAAFCwA4BgYAAAAAAAAAACECBwEAAAADCwA6AAIIAQAAAAMLADcAAgkAAAAQIwYAAAAAAAAAAAwCCgA4BgwDCgIKAyMEHQUKCgA3AAoCQgIKASEEGAsAAQsBAQsCOAcCCwIGAQAAAAAAAAAWDAIFBQsAAQsBATgIAgoAAAALDQsACwE4BAwCDgI4BQQIBQoHAScLAjgJAgAAAAIA",
          "versioned": "oRzrCwYAAAALAQAIAggUAxxVBHEKBXthB9wB7AEIyAMgBugDCgryAxAMggTFAQ3HBQQAFwALABAAFAAEDAAAAwAAAgAHAAICBAADAQIAAAgAAQEEABYCAwAADQIEAQQADgUGAQQAEwUHAQQAFQgJAQQACgEKAQQBBQ4JAgcEAQYPEAIHBAEHERICBwQBEhETAgcEAgkMCQACDAQUAQgCDwsMAAcNCA0JDQoNDAEDAwkABwgEAQgAAQYIAAEDAQYJAAEHCAABBwkAAgkACAEEBwgAAwkACAEAAQkAAQcIBAEIAwIDCQADBwgDCQAJAQIGCAMJAAEGCQECBwgDCQABBwkBAQkBAQgCAwgDCQADAklECVR4Q29udGV4dANVSUQQVmVyc2lvbkNoYW5nZUNhcAlWZXJzaW9uZWQDYWRkBmJvcnJvdwpib3Jyb3dfbXV0BmNyZWF0ZQZkZWxldGUHZGVzdHJveQ1keW5hbWljX2ZpZWxkAmlkCmxvYWRfdmFsdWUObG9hZF92YWx1ZV9tdXQDbmV3Bm9iamVjdAtvbGRfdmVyc2lvbgZyZW1vdmUYcmVtb3ZlX3ZhbHVlX2Zvcl91cGdyYWRlCnR4X2NvbnRleHQHdXBncmFkZQd2ZXJzaW9uCXZlcnNpb25lZAx2ZXJzaW9uZWRfaWQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgMIAAAAAAAAAAAAAgIMCAMWAwECAhgIAhEDAAEAAAEMCwIRDQoAEgAMAw0DDwALAAsBOAALAwIBAQAACQQLABABFAICAQAACQcKABAACwAQARQ4AQIDAQAACQcKAA8ACwAQARQ4AgIEAQAACQ4KAA8ACgAQARQ4AwoALjgECwAQARQSAQIFAQAAAyALAxMBDAQKAC44BCEECQUNCwABBwAnCwQKASMEEgUWCwABBwAnCgAPAAoBCwI4AAsBCwAPARUCBgEAABUMCwATAAwDDAENAQsDOAMMAgsBEQsLAgIAAAABAA==",
          "zklogin_verified_id": "oRzrCwYAAAALAQAKAgoQAxo9BFcCBVlOB6cB3AEIgwNABsMDFArXAxQM6wOTAQ3+BAoAFAEQAA0AEQASAAMIAAEABwACAgQABAECAAAOAAEAAAoAAgAACwACAAAJAAIAAAQAAgAAEwMEAAAGBQYAAAcHBgABBQINAAIMCQoAAxEMBAEIBA8IAQAKCwEGCAABBQEGCAEGCAEIAQgBCAEPBwgDAAYFBggBBggBBggBBggBDwEBBgUGCgIGCgIGCgIGCgIPAQYIAwEHCAMBCAIBCAACCQAFAQYKAgZTdHJpbmcJVHhDb250ZXh0A1VJRApWZXJpZmllZElECGF1ZGllbmNlBWJ5dGVzEGNoZWNrX3prbG9naW5faWQZY2hlY2tfemtsb2dpbl9pZF9pbnRlcm5hbAJpZAZpc3N1ZXIOa2V5X2NsYWltX25hbWUPa2V5X2NsYWltX3ZhbHVlA25ldwZvYmplY3QFb3duZXIGc2VuZGVyBnN0cmluZwh0cmFuc2Zlcgp0eF9jb250ZXh0EXZlcmlmeV96a2xvZ2luX2lkE3prbG9naW5fdmVyaWZpZWRfaWQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAwgAAAAAAAAAAAMIAQAAAAAAAAAAAgYICAIOBQoIAQsIAQkIAQQIAQABAAAEBAsAEAAUAgEBAAAEAwsAEAECAgEAAAQDCwAQAgIDAQAABAMLABADAgQBAAAEAwsAEAQCBQEAAAEcCgUuEQsMBgoGDgAOAQ4CDgMLBBEGBA0FEQsFAQcBJwsFEQkKBgsACwELAgsDEgALBjgAAgYBAAAEDAsACwERCAsCEQgLAxEICwQRCAsFEQcCBwACAAABAAIAAwAEAAUA",
          "zklogin_verified_issuer": "oRzrCwYAAAALAQAKAgoQAxouBEgCBUo2B4AByAEIyAJABogDFAqcAwsMpwNaDYEEBAARAQ0ACgAOAA8AAwgAAQAHAAICBAAEAQIAAAsAAQAACAACAAAQAwQAAAUFBgAABgcGAAEEAg0AAgkJCgADDgwEAQgEDAgBAAcLAQYIAAEFAQYIAQMPCAEHCAMAAwUPBggBAQEDBQ8GCgIBBggDAQcIAwEIAgEIAAIJAAUBBgoCBlN0cmluZwlUeENvbnRleHQDVUlEDlZlcmlmaWVkSXNzdWVyBWJ5dGVzFGNoZWNrX3prbG9naW5faXNzdWVyHWNoZWNrX3prbG9naW5faXNzdWVyX2ludGVybmFsAmlkBmlzc3VlcgNuZXcGb2JqZWN0BW93bmVyBnNlbmRlcgZzdHJpbmcIdHJhbnNmZXIKdHhfY29udGV4dBV2ZXJpZnlfemtsb2dpbl9pc3N1ZXIXemtsb2dpbl92ZXJpZmllZF9pc3N1ZXIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAwgAAAAAAAAAAAMIAQAAAAAAAAAAAgMHCAILBQgIAQABAAAEBAsAEAAUAgEBAAAEAwsAEAECAgEAAAEWCgIuEQgMAwoDCwAOAREDBAoFDgsCAQcBJwsCEQYKAwsBEgALAzgAAgMBAAAEBgsACwELAhEFEQQCBAACAAABAAIA"
        },
        "typeOriginTable": [
          {
            "module_name": "tx_context",
            "struct_name": "TxContext",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "object",
            "struct_name": "ID",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "object",
            "struct_name": "UID",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "transfer",
            "struct_name": "Receiving",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "dynamic_field",
            "struct_name": "Field",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "authenticator_state",
            "struct_name": "AuthenticatorState",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "authenticator_state",
            "struct_name": "AuthenticatorStateInner",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "authenticator_state",
            "struct_name": "JWK",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "authenticator_state",
            "struct_name": "JwkId",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "authenticator_state",
            "struct_name": "ActiveJwk",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "bag",
            "struct_name": "Bag",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "balance",
            "struct_name": "Supply",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "balance",
            "struct_name": "Balance",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "bcs",
            "struct_name": "BCS",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "borrow",
            "struct_name": "Referent",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "borrow",
            "struct_name": "Borrow",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "clock",
            "struct_name": "Clock",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "url",
            "struct_name": "Url",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "coin",
            "struct_name": "Coin",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "coin",
            "struct_name": "CoinMetadata",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "coin",
            "struct_name": "TreasuryCap",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "coin",
            "struct_name": "CurrencyCreated",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "vec_map",
            "struct_name": "VecMap",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "vec_map",
            "struct_name": "Entry",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "package",
            "struct_name": "Publisher",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "package",
            "struct_name": "UpgradeCap",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "package",
            "struct_name": "UpgradeTicket",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "package",
            "struct_name": "UpgradeReceipt",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "display",
            "struct_name": "Display",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "display",
            "struct_name": "DisplayCreated",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "display",
            "struct_name": "VersionUpdated",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "dynamic_object_field",
            "struct_name": "Wrapper",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "groth16",
            "struct_name": "Curve",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "groth16",
            "struct_name": "PreparedVerifyingKey",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "groth16",
            "struct_name": "PublicProofInputs",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "groth16",
            "struct_name": "ProofPoints",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "vec_set",
            "struct_name": "VecSet",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "sui",
            "struct_name": "SUI",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "transfer_policy",
            "struct_name": "TransferRequest",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "transfer_policy",
            "struct_name": "TransferPolicy",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "transfer_policy",
            "struct_name": "TransferPolicyCap",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "transfer_policy",
            "struct_name": "TransferPolicyCreated",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "transfer_policy",
            "struct_name": "RuleKey",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "kiosk",
            "struct_name": "Kiosk",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "kiosk",
            "struct_name": "KioskOwnerCap",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "kiosk",
            "struct_name": "PurchaseCap",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "kiosk",
            "struct_name": "Borrow",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "kiosk",
            "struct_name": "Item",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "kiosk",
            "struct_name": "Listing",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "kiosk",
            "struct_name": "Lock",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "kiosk",
            "struct_name": "ItemListed",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "kiosk",
            "struct_name": "ItemPurchased",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "kiosk",
            "struct_name": "ItemDelisted",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "kiosk_extension",
            "struct_name": "Extension",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "kiosk_extension",
            "struct_name": "ExtensionKey",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "linked_table",
            "struct_name": "LinkedTable",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "linked_table",
            "struct_name": "Node",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "object_bag",
            "struct_name": "ObjectBag",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "object_table",
            "struct_name": "ObjectTable",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "priority_queue",
            "struct_name": "PriorityQueue",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "priority_queue",
            "struct_name": "Entry",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "table",
            "struct_name": "Table",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "table_vec",
            "struct_name": "TableVec",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "versioned",
            "struct_name": "Versioned",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "versioned",
            "struct_name": "VersionChangeCap",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "zklogin_verified_id",
            "struct_name": "VerifiedID",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          },
          {
            "module_name": "zklogin_verified_issuer",
            "struct_name": "VerifiedIssuer",
            "package": "0x0000000000000000000000000000000000000000000000000000000000000002"
          }
        ],
        "linkageTable": {
          "0x0000000000000000000000000000000000000000000000000000000000000001": {
            "upgraded_id": "0x0000000000000000000000000000000000000000000000000000000000000001",
            "upgraded_version": 0
          }
        }
      }
    }
  },
  {
    "data": {
      "objectId": "0xd0f544b2bbe3f65c194d3cf30bd3771439f89786fd06002127c16becd497815b",
      "version": "7217843",
      "digest": "4RHWpwbUuZbmSdTebHVmpQPKTYd5V75zD9U9bY4DwhMr",
      "type": "0x57138e18b82cc8ea6e92c3d5737d6078b1304b655f59cf5ae9668cc44aad4ead::profile::Profile",
      "owner": {
        "AddressOwner": "0x00698416819daaf2b676f65f4d726150c0e1db3f890a9cfe8419bd8c16681996"
      },
      "previousTransaction": "7wMQdeAShwALpVygPbErHfhbfzyMb83Mg4eH7D3MHDFf",
      "storageRebate": "2264800",
      "display": {
        "data": {
          "creator": "https://polymedia.app",
          "description": "Fren",
          "image_url": "https://api-mainnet.suifrens.sui.io/suifrens/0xe48b2b60846db20cac7af3cb3accf7b9d2bd7f5e1a5b573faab1722cd8e214f3/svg",
          "link": "https://profile.polymedia.app/view/0xd0f544b2bbe3f65c194d3cf30bd3771439f89786fd06002127c16becd497815b",
          "name": "Fren",
          "project_image_url": "https://profile.polymedia.app/img/project_image.png",
          "project_name": "Polymedia Profile",
          "project_url": "https://profile.polymedia.app"
        },
        "error": null
      },
      "content": {
        "dataType": "moveObject",
        "type": "0x57138e18b82cc8ea6e92c3d5737d6078b1304b655f59cf5ae9668cc44aad4ead::profile::Profile",
        "hasPublicTransfer": false,
        "fields": {
          "data": "",
          "description": "Fren",
          "id": {
            "id": "0xd0f544b2bbe3f65c194d3cf30bd3771439f89786fd06002127c16becd497815b"
          },
          "image_url": "https://api-mainnet.suifrens.sui.io/suifrens/0xe48b2b60846db20cac7af3cb3accf7b9d2bd7f5e1a5b573faab1722cd8e214f3/svg",
          "name": "Fren"
        }
      },
      "bcs": {
        "dataType": "moveObject",
        "type": "0x57138e18b82cc8ea6e92c3d5737d6078b1304b655f59cf5ae9668cc44aad4ead::profile::Profile",
        "hasPublicTransfer": false,
        "version": 7217843,
        "bcsBytes": "0PVEsrvj9lwZTTzzC9N3FDn4l4b9BgAhJ8Fr7NSXgVsERnJlbnNodHRwczovL2FwaS1tYWlubmV0LnN1aWZyZW5zLnN1aS5pby9zdWlmcmVucy8weGU0OGIyYjYwODQ2ZGIyMGNhYzdhZjNjYjNhY2NmN2I5ZDJiZDdmNWUxYTViNTczZmFhYjE3MjJjZDhlMjE0ZjMvc3ZnBEZyZW4A"
      }
    }
  },
  {
    "data": {
      "objectId": "0x1b98b1f1efdd0361d8fead88072b32d9385d94b64124827740d42c38e2fa55ad",
      "version": "7217843",
      "digest": "J7hPuVZ4rUCPs4rKhCTdq5fXmA952P5d6qyKc5Y2KZ5p",
      "type": "0x7c423c0f1ab19c99155c24e98fdb971453b699c90ab579b23b38103060ea26db::journey::Quest",
      "owner": {
        "ObjectOwner": "0x36e929a9b61863a280b1fb383dfbaf3800e3734d675f7847ad7c7e626de331c0"
      },
      "previousTransaction": "7wMQdeAShwALpVygPbErHfhbfzyMb83Mg4eH7D3MHDFf",
      "storageRebate": "2591600",
      "display": {
        "data": {
          "creator": "https://polymedia.app",
          "description": "The door to the invisible must be visible",
          "image_url": "https://journey.polymedia.app/img/card_explorer.webp",
          "link": "https://mountsogol.com",
          "name": "Polymedia: Early Adopter",
          "project_url": "https://mountsogol.com"
        },
        "error": null
      },
      "content": {
        "dataType": "moveObject",
        "type": "0x7c423c0f1ab19c99155c24e98fdb971453b699c90ab579b23b38103060ea26db::journey::Quest",
        "hasPublicTransfer": true,
        "fields": {
          "data": "{\"ch\":0,\"c1\":4,\"t1\":2846,\"c2\":25,\"t2\":6240}",
          "description": "The door to the invisible must be visible",
          "epoch_time": "1688749536578",
          "id": {
            "id": "0x1b98b1f1efdd0361d8fead88072b32d9385d94b64124827740d42c38e2fa55ad"
          },
          "image_url": "https://journey.polymedia.app/img/card_explorer.webp",
          "name": "Polymedia: Early Adopter"
        }
      },
      "bcs": {
        "dataType": "moveObject",
        "type": "0x7c423c0f1ab19c99155c24e98fdb971453b699c90ab579b23b38103060ea26db::journey::Quest",
        "hasPublicTransfer": true,
        "version": 7217843,
        "bcsBytes": "G5ix8e/dA2HY/q2IBysy2ThdlLZBJIJ3QNQsOOL6Va0YUG9seW1lZGlhOiBFYXJseSBBZG9wdGVyNGh0dHBzOi8vam91cm5leS5wb2x5bWVkaWEuYXBwL2ltZy9jYXJkX2V4cGxvcmVyLndlYnApVGhlIGRvb3IgdG8gdGhlIGludmlzaWJsZSBtdXN0IGJlIHZpc2libGUreyJjaCI6MCwiYzEiOjQsInQxIjoyODQ2LCJjMiI6MjUsInQyIjo2MjQwfUL1UDGJAQAA"
      }
    }
  },
  {
    "data": {
      "objectId": "0x36e929a9b61863a280b1fb383dfbaf3800e3734d675f7847ad7c7e626de331c0",
      "version": "7217843",
      "digest": "DXdU67gurHDA8iri5pQUpLvp9s2xoxaeF3gJThwii5LW",
      "type": "0x2::dynamic_field::Field<0x2::dynamic_object_field::Wrapper<0x1::string::String>, 0x2::object::ID>",
      "owner": {
        "ObjectOwner": "0xd0f544b2bbe3f65c194d3cf30bd3771439f89786fd06002127c16becd497815b"
      },
      "previousTransaction": "7wMQdeAShwALpVygPbErHfhbfzyMb83Mg4eH7D3MHDFf",
      "storageRebate": "2941200",
      "display": {
        "data": null,
        "error": null
      },
      "content": {
        "dataType": "moveObject",
        "type": "0x2::dynamic_field::Field<0x2::dynamic_object_field::Wrapper<0x1::string::String>, 0x2::object::ID>",
        "hasPublicTransfer": false,
        "fields": {
          "id": {
            "id": "0x36e929a9b61863a280b1fb383dfbaf3800e3734d675f7847ad7c7e626de331c0"
          },
          "name": {
            "type": "0x2::dynamic_object_field::Wrapper<0x1::string::String>",
            "fields": {
              "name": "Polymedia: Early Adopter"
            }
          },
          "value": "0x1b98b1f1efdd0361d8fead88072b32d9385d94b64124827740d42c38e2fa55ad"
        }
      },
      "bcs": {
        "dataType": "moveObject",
        "type": "0x2::dynamic_field::Field<0x2::dynamic_object_field::Wrapper<0x1::string::String>, 0x2::object::ID>",
        "hasPublicTransfer": false,
        "version": 7217843,
        "bcsBytes": "NukpqbYYY6KAsfs4PfuvOADjc01nX3hHrXx+Ym3jMcAYUG9seW1lZGlhOiBFYXJseSBBZG9wdGVyG5ix8e/dA2HY/q2IBysy2ThdlLZBJIJ3QNQsOOL6Va0="
      }
    }
  }
]
}